BAD_PRACTICE,NM_CONFUSING,org/apache/commons/lang3/AnnotationUtilsTest.java,setup,391-395,[        field1 = getClass().getDeclaredField("dummy1");,         field2 = getClass().getDeclaredField("dummy2");,         field3 = getClass().getDeclaredField("dummy3");,         field4 = getClass().getDeclaredField("dummy4");,     }],,setUp,59-60,[        LocaleUtils.isAvailableLocale(Locale.getDefault());,     }],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/AnnotationUtilsTest.java,,452-465,[        final InvocationHandler generatedTestInvocationHandler = new InvocationHandler() {, ,             @Override,             public Object invoke(final Object proxy, final Method method, final Object[] args) throws Throwable {,                 if ("equals".equals(method.getName()) && method.getParameterTypes().length == 1) {,                     return Boolean.valueOf(proxy == args[0]);,                 },                 if ("hashCode".equals(method.getName()) && method.getParameterTypes().length == 0) {,                     return Integer.valueOf(System.identityHashCode(proxy));,                 },                 if ("toString".equals(method.getName()) && method.getParameterTypes().length == 0) {,                     return "Test proxy";,                 },                 return method.invoke(real, args);],,
STYLE,FE_FLOATING_POINT_EQUALITY,org/apache/commons/lang3/ArrayUtils.java,indexOf,2566-2566,[            if (valueToFind == array[i]) {],,
STYLE,FE_FLOATING_POINT_EQUALITY,org/apache/commons/lang3/ArrayUtils.java,indexOf,2773-2773,[            if (valueToFind == array[i]) {],,
STYLE,FE_FLOATING_POINT_EQUALITY,org/apache/commons/lang3/ArrayUtils.java,lastIndexOf,2662-2662,[            if (valueToFind == array[i]) {],,
STYLE,FE_FLOATING_POINT_EQUALITY,org/apache/commons/lang3/ArrayUtils.java,lastIndexOf,2818-2818,[            if (valueToFind == array[i]) {],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,clone,404-404,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,clone,388-388,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,clone,420-420,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,clone,436-436,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,clone,356-356,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,clone,340-340,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,clone,324-324,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,clone,372-372,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,clone,452-452,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,subarray,1076-1076,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,subarray,1036-1036,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,subarray,1116-1116,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,subarray,1156-1156,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,subarray,956-956,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,subarray,916-916,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,subarray,872-872,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,subarray,996-996,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,subarray,1196-1196,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,toObject,3275-3275,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,toObject,3003-3003,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,toObject,3343-3343,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,toObject,3411-3411,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,toObject,3139-3139,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,toObject,3071-3071,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,toObject,3207-3207,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,toObject,3479-3479,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,toPrimitive,3435-3435,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,toPrimitive,3457-3457,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,toPrimitive,3231-3231,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,toPrimitive,3253-3253,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,toPrimitive,2959-2959,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,toPrimitive,2981-2981,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,toPrimitive,3299-3299,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,toPrimitive,3321-3321,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,toPrimitive,3367-3367,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,toPrimitive,3389-3389,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,toPrimitive,3095-3095,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,toPrimitive,3117-3117,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,toPrimitive,3027-3027,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,toPrimitive,3049-3049,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,toPrimitive,3163-3163,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ArrayUtils.java,toPrimitive,3185-3185,[            return null;],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/ArrayUtilsAddTest.java,testJira567,47-47,[               n = ArrayUtils.addAll(new Integer[]{Integer.valueOf(1)}, new Long[]{Long.valueOf(2)});],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/ArrayUtilsAddTest.java,testAddObjectAtIndex,429-429,[            booleanArray = ArrayUtils.add( new boolean[] { true, false }, -1, true);],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/ArrayUtilsAddTest.java,testAddObjectAtIndex,506-506,[            byteArray = ArrayUtils.add( new byte[] { 2, 6 }, -1, (byte) 3);],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/ArrayUtilsAddTest.java,testAddObjectAtIndex,456-456,[            charArray = ArrayUtils.add( new char[] { 'a', 'b' }, -1, 'c');],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/ArrayUtilsAddTest.java,testAddObjectAtIndex,606-606,[            doubleArray = ArrayUtils.add( new double[] { 2.3, 6.4 }, -1, 10.5);],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/ArrayUtilsAddTest.java,testAddObjectAtIndex,581-581,[            floatArray = ArrayUtils.add( new float[] { 2.3f, 6.4f }, -1, 10.5f);],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/ArrayUtilsAddTest.java,testAddObjectAtIndex,531-531,[            intArray = ArrayUtils.add( new int[] { 2, 6 }, -1, 10);],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/ArrayUtilsAddTest.java,testAddObjectAtIndex,556-556,[            longArray = ArrayUtils.add( new long[] { 2L, 6L }, -1, 10L);],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/ArrayUtilsAddTest.java,testAddObjectAtIndex,481-481,[            shortArray = ArrayUtils.add( new short[] { 2, 6 }, -1, (short) 10);],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/ArrayUtilsAddTest.java,testLANG571,237-237,[            String[] sa = ArrayUtils.add(stringArray, aString);],,testLANG571,245-245,[            String[] sa = ArrayUtils.add(stringArray, 0, aString);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsAddTest.java,testAddObjectArrayObject,225-225,[        newArray = ArrayUtils.add(numberArray1, Float.valueOf(3));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsAddTest.java,testLANG571,237-237,[            String[] sa = ArrayUtils.add(stringArray, aString);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsAddTest.java,testLANG571,237-237,[            String[] sa = ArrayUtils.add(stringArray, aString);],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/ArrayUtilsTest.java,testSubarrayObject,775-775,[            java.sql.Date[] dummy = (java.sql.Date[])ArrayUtils.subarray(dateArray, 1,3);],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/commons/lang3/ArrayUtilsTest.java,testToObject_char,2901-2901,[        assertTrue(Arrays.equals(],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/commons/lang3/ArrayUtilsTest.java,testToPrimitive_char,2859-2859,[        assertTrue(Arrays.equals(],,testToPrimitive_char,2866-2866,[            ArrayUtils.toPrimitive(new Character[] {new Character(Character.MIN_VALUE), null});],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/commons/lang3/ArrayUtilsTest.java,testToPrimitive_char_char,2879-2879,[        assertTrue(Arrays.equals(],,testToPrimitive_char_char,2886-2886,[        assertTrue(Arrays.equals(],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/commons/lang3/ArrayUtilsTest.java,testToObject_char,2895-2907,[        final char[] b = null;,         assertArrayEquals(null, ArrayUtils.toObject(b));,         ,         assertSame(ArrayUtils.EMPTY_CHARACTER_OBJECT_ARRAY, ,             ArrayUtils.toObject(new char[0]));,         ,         assertTrue(Arrays.equals(,             new Character[] {new Character(Character.MIN_VALUE), ,                 new Character(Character.MAX_VALUE), new Character('0')},,                 ArrayUtils.toObject(new char[] {Character.MIN_VALUE, Character.MAX_VALUE, ,                 '0'} )),         );,     }],,<init>,4537-4539,[],,valueOf,4570-4573,[],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/commons/lang3/ArrayUtilsTest.java,testToPrimitive_char,2854-2869,[        final Character[] b = null;,         assertEquals(null, ArrayUtils.toPrimitive(b));,         ,         assertSame(ArrayUtils.EMPTY_CHAR_ARRAY, ArrayUtils.toPrimitive(new Character[0]));,         ,         assertTrue(Arrays.equals(,             new char[] {Character.MIN_VALUE, Character.MAX_VALUE, '0'},,             ArrayUtils.toPrimitive(new Character[] {new Character(Character.MIN_VALUE), ,                 new Character(Character.MAX_VALUE), new Character('0')})),         );, ,         try {,             ArrayUtils.toPrimitive(new Character[] {new Character(Character.MIN_VALUE), null});,             fail();,         } catch (final NullPointerException ex) {},     }],,<init>,4537-4539,[],,valueOf,4570-4573,[],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/commons/lang3/ArrayUtilsTest.java,testToPrimitive_char_char,2873-2891,[        final Character[] b = null;,         assertEquals(null, ArrayUtils.toPrimitive(b, Character.MIN_VALUE));,         ,         assertSame(ArrayUtils.EMPTY_CHAR_ARRAY, ,             ArrayUtils.toPrimitive(new Character[0], (char)0));,         ,         assertTrue(Arrays.equals(,             new char[] {Character.MIN_VALUE, Character.MAX_VALUE, '0'},,             ArrayUtils.toPrimitive(new Character[] {new Character(Character.MIN_VALUE), ,                 new Character(Character.MAX_VALUE), new Character('0')}, ,                 Character.MIN_VALUE)),         );,         ,         assertTrue(Arrays.equals(,             new char[] {Character.MIN_VALUE, Character.MAX_VALUE, '0'},,             ArrayUtils.toPrimitive(new Character[] {new Character(Character.MIN_VALUE), null, ,                 new Character('0')}, Character.MAX_VALUE)),         );,     }],,<init>,4537-4539,[],,valueOf,4570-4573,[],,
PERFORMANCE,DM_STRING_CTOR,org/apache/commons/lang3/ArrayUtilsTest.java,testIsEmptyObject,3277-3277,[        final Object[] notEmptyArray = new Object[] { new String("Value") };],,
PERFORMANCE,DM_STRING_CTOR,org/apache/commons/lang3/ArrayUtilsTest.java,testIsNotEmptyObject,3350-3350,[        final Object[] notEmptyArray = new Object[] { new String("Value") };],,
CORRECTNESS,EC_BAD_ARRAY_COMPARE,org/apache/commons/lang3/ArrayUtilsTest.java,testNullToEmptyBoolean,383-383,[        assertEquals(original, ArrayUtils.nullToEmpty(original));],,
CORRECTNESS,EC_BAD_ARRAY_COMPARE,org/apache/commons/lang3/ArrayUtilsTest.java,testNullToEmptyBooleanEmptyArray,376-376,[        assertEquals(ArrayUtils.EMPTY_BOOLEAN_ARRAY, result);],,
CORRECTNESS,EC_BAD_ARRAY_COMPARE,org/apache/commons/lang3/ArrayUtilsTest.java,testNullToEmptyBooleanNull,369-369,[        assertEquals(ArrayUtils.EMPTY_BOOLEAN_ARRAY, ArrayUtils.nullToEmpty((boolean[]) null));],,
CORRECTNESS,EC_BAD_ARRAY_COMPARE,org/apache/commons/lang3/ArrayUtilsTest.java,testNullToEmptyByte,478-478,[        assertEquals(original, ArrayUtils.nullToEmpty(original));],,
CORRECTNESS,EC_BAD_ARRAY_COMPARE,org/apache/commons/lang3/ArrayUtilsTest.java,testNullToEmptyByteEmptyArray,471-471,[        assertEquals(ArrayUtils.EMPTY_BYTE_ARRAY, result);],,
CORRECTNESS,EC_BAD_ARRAY_COMPARE,org/apache/commons/lang3/ArrayUtilsTest.java,testNullToEmptyByteNull,464-464,[        assertEquals(ArrayUtils.EMPTY_BYTE_ARRAY, ArrayUtils.nullToEmpty((byte[]) null));],,
CORRECTNESS,EC_BAD_ARRAY_COMPARE,org/apache/commons/lang3/ArrayUtilsTest.java,testNullToEmptyChar,459-459,[        assertEquals(original, ArrayUtils.nullToEmpty(original));],,
CORRECTNESS,EC_BAD_ARRAY_COMPARE,org/apache/commons/lang3/ArrayUtilsTest.java,testNullToEmptyCharEmptyArray,452-452,[        assertEquals(ArrayUtils.EMPTY_CHAR_ARRAY, result);],,
CORRECTNESS,EC_BAD_ARRAY_COMPARE,org/apache/commons/lang3/ArrayUtilsTest.java,testNullToEmptyCharNull,445-445,[        assertEquals(ArrayUtils.EMPTY_CHAR_ARRAY, ArrayUtils.nullToEmpty((char[]) null));],,
CORRECTNESS,EC_BAD_ARRAY_COMPARE,org/apache/commons/lang3/ArrayUtilsTest.java,testNullToEmptyDouble,497-497,[        assertEquals(original, ArrayUtils.nullToEmpty(original));],,
CORRECTNESS,EC_BAD_ARRAY_COMPARE,org/apache/commons/lang3/ArrayUtilsTest.java,testNullToEmptyDoubleEmptyArray,490-490,[        assertEquals(ArrayUtils.EMPTY_DOUBLE_ARRAY, result);],,
CORRECTNESS,EC_BAD_ARRAY_COMPARE,org/apache/commons/lang3/ArrayUtilsTest.java,testNullToEmptyDoubleNull,483-483,[        assertEquals(ArrayUtils.EMPTY_DOUBLE_ARRAY, ArrayUtils.nullToEmpty((double[]) null));],,
CORRECTNESS,EC_BAD_ARRAY_COMPARE,org/apache/commons/lang3/ArrayUtilsTest.java,testNullToEmptyFloat,516-516,[        assertEquals(original, ArrayUtils.nullToEmpty(original));],,
CORRECTNESS,EC_BAD_ARRAY_COMPARE,org/apache/commons/lang3/ArrayUtilsTest.java,testNullToEmptyFloatEmptyArray,509-509,[        assertEquals(ArrayUtils.EMPTY_FLOAT_ARRAY, result);],,
CORRECTNESS,EC_BAD_ARRAY_COMPARE,org/apache/commons/lang3/ArrayUtilsTest.java,testNullToEmptyFloatNull,502-502,[        assertEquals(ArrayUtils.EMPTY_FLOAT_ARRAY, ArrayUtils.nullToEmpty((float[]) null));],,
CORRECTNESS,EC_BAD_ARRAY_COMPARE,org/apache/commons/lang3/ArrayUtilsTest.java,testNullToEmptyInt,421-421,[        assertEquals(original, ArrayUtils.nullToEmpty(original));],,
CORRECTNESS,EC_BAD_ARRAY_COMPARE,org/apache/commons/lang3/ArrayUtilsTest.java,testNullToEmptyIntEmptyArray,414-414,[        assertEquals(ArrayUtils.EMPTY_INT_ARRAY, result);],,
CORRECTNESS,EC_BAD_ARRAY_COMPARE,org/apache/commons/lang3/ArrayUtilsTest.java,testNullToEmptyIntNull,407-407,[        assertEquals(ArrayUtils.EMPTY_INT_ARRAY, ArrayUtils.nullToEmpty((int[]) null));],,
CORRECTNESS,EC_BAD_ARRAY_COMPARE,org/apache/commons/lang3/ArrayUtilsTest.java,testNullToEmptyLong,402-402,[        assertEquals(original, ArrayUtils.nullToEmpty(original));],,
CORRECTNESS,EC_BAD_ARRAY_COMPARE,org/apache/commons/lang3/ArrayUtilsTest.java,testNullToEmptyLongEmptyArray,395-395,[        assertEquals(ArrayUtils.EMPTY_LONG_ARRAY, result);],,
CORRECTNESS,EC_BAD_ARRAY_COMPARE,org/apache/commons/lang3/ArrayUtilsTest.java,testNullToEmptyLongNull,388-388,[        assertEquals(ArrayUtils.EMPTY_LONG_ARRAY, ArrayUtils.nullToEmpty((long[]) null));],,
CORRECTNESS,EC_BAD_ARRAY_COMPARE,org/apache/commons/lang3/ArrayUtilsTest.java,testNullToEmptyShort,440-440,[        assertEquals(original, ArrayUtils.nullToEmpty(original));],,
CORRECTNESS,EC_BAD_ARRAY_COMPARE,org/apache/commons/lang3/ArrayUtilsTest.java,testNullToEmptyShortEmptyArray,433-433,[        assertEquals(ArrayUtils.EMPTY_SHORT_ARRAY, result);],,
CORRECTNESS,EC_BAD_ARRAY_COMPARE,org/apache/commons/lang3/ArrayUtilsTest.java,testNullToEmptyShortNull,426-426,[        assertEquals(ArrayUtils.EMPTY_SHORT_ARRAY, ArrayUtils.nullToEmpty((short[]) null));],,
BAD_PRACTICE,ISC_INSTANTIATE_STATIC_CLASS,org/apache/commons/lang3/ArrayUtilsTest.java,testConstructor,48-48,[        assertNotNull(new ArrayUtils());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testContainsBoolean,2794-2794,[        assertFalse(ArrayUtils.contains(array, true));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testContainsByte,2491-2491,[        assertFalse(ArrayUtils.contains(array, (byte) 1));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testContainsChar,2426-2426,[        assertFalse(ArrayUtils.contains(array, 'b'));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testContainsDouble,2633-2633,[        assertFalse(ArrayUtils.contains(array, (double) 1));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testContainsDoubleTolerance,2646-2646,[        assertFalse(ArrayUtils.contains(array, (double) 1, (double) 0));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testContainsFloat,2723-2723,[        assertFalse(ArrayUtils.contains(array, (float) 1));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testContainsInt,2296-2296,[        assertFalse(ArrayUtils.contains(array, 1));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testContainsLong,2231-2231,[        assertFalse(ArrayUtils.contains(array, 1));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testContainsShort,2361-2361,[        assertFalse(ArrayUtils.contains(array, (short) 1));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testIndexOfBoolean,2736-2736,[        assertEquals(-1, ArrayUtils.indexOf(array, true));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testIndexOfBooleanWithStartIndex,2749-2749,[        assertEquals(-1, ArrayUtils.indexOf(array, true, 2));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testIndexOfByte,2439-2439,[        assertEquals(-1, ArrayUtils.indexOf(array, (byte) 0));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testIndexOfByteWithStartIndex,2451-2451,[        assertEquals(-1, ArrayUtils.indexOf(array, (byte) 0, 2));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testIndexOfChar,2374-2374,[        assertEquals(-1, ArrayUtils.indexOf(array, 'a'));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testIndexOfCharWithStartIndex,2386-2386,[        assertEquals(-1, ArrayUtils.indexOf(array, 'a', 2));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testIndexOfDouble,2505-2505,[        assertEquals(-1, ArrayUtils.indexOf(array, (double) 0));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testIndexOfDoubleTolerance,2521-2521,[        assertEquals(-1, ArrayUtils.indexOf(array, (double) 0, (double) 0));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testIndexOfDoubleWithStartIndex,2535-2535,[        assertEquals(-1, ArrayUtils.indexOf(array, (double) 0, 2));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testIndexOfDoubleWithStartIndexTolerance,2551-2551,[        assertEquals(-1, ArrayUtils.indexOf(array, (double) 0, 2, (double) 0));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testIndexOfFloat,2659-2659,[        assertEquals(-1, ArrayUtils.indexOf(array, (float) 0));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testIndexOfFloatWithStartIndex,2674-2674,[        assertEquals(-1, ArrayUtils.indexOf(array, (float) 0, 2));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testIndexOfInt,2244-2244,[        assertEquals(-1, ArrayUtils.indexOf(array, 0));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testIndexOfIntWithStartIndex,2256-2256,[        assertEquals(-1, ArrayUtils.indexOf(array, 0, 2));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testIndexOfLong,2179-2179,[        assertEquals(-1, ArrayUtils.indexOf(array, 0));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testIndexOfLongWithStartIndex,2191-2191,[        assertEquals(-1, ArrayUtils.indexOf(array, 0, 2));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testIndexOfShort,2309-2309,[        assertEquals(-1, ArrayUtils.indexOf(array, (short) 0));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testIndexOfShortWithStartIndex,2321-2321,[        assertEquals(-1, ArrayUtils.indexOf(array, (short) 0, 2));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testLastIndexOfBoolean,2765-2765,[        assertEquals(-1, ArrayUtils.lastIndexOf(array, true));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testLastIndexOfBooleanWithStartIndex,2778-2778,[        assertEquals(-1, ArrayUtils.lastIndexOf(array, true, 2));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testLastIndexOfByte,2465-2465,[        assertEquals(-1, ArrayUtils.lastIndexOf(array, (byte) 0));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testLastIndexOfByteWithStartIndex,2477-2477,[        assertEquals(-1, ArrayUtils.lastIndexOf(array, (byte) 0, 2));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testLastIndexOfChar,2400-2400,[        assertEquals(-1, ArrayUtils.lastIndexOf(array, 'a'));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testLastIndexOfCharWithStartIndex,2412-2412,[        assertEquals(-1, ArrayUtils.lastIndexOf(array, 'a', 2));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testLastIndexOfDouble,2569-2569,[        assertEquals(-1, ArrayUtils.lastIndexOf(array, (double) 0));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testLastIndexOfDoubleTolerance,2584-2584,[        assertEquals(-1, ArrayUtils.lastIndexOf(array, (double) 0, (double) 0));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testLastIndexOfDoubleWithStartIndex,2598-2598,[        assertEquals(-1, ArrayUtils.lastIndexOf(array, (double) 0, 2));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testLastIndexOfDoubleWithStartIndexTolerance,2615-2615,[        assertEquals(-1, ArrayUtils.lastIndexOf(array, (double) 0, 2, (double) 0));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testLastIndexOfFloat,2691-2691,[        assertEquals(-1, ArrayUtils.lastIndexOf(array, (float) 0));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testLastIndexOfFloatWithStartIndex,2706-2706,[        assertEquals(-1, ArrayUtils.lastIndexOf(array, (float) 0, 2));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testLastIndexOfInt,2270-2270,[        assertEquals(-1, ArrayUtils.lastIndexOf(array, 0));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testLastIndexOfIntWithStartIndex,2282-2282,[        assertEquals(-1, ArrayUtils.lastIndexOf(array, 0, 2));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testLastIndexOfLong,2205-2205,[        assertEquals(-1, ArrayUtils.lastIndexOf(array, 0));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testLastIndexOfLongWithStartIndex,2217-2217,[        assertEquals(-1, ArrayUtils.lastIndexOf(array, 0, 2));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testLastIndexOfShort,2335-2335,[        assertEquals(-1, ArrayUtils.lastIndexOf(array, (short) 0));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testLastIndexOfShortWithStartIndex,2347-2347,[        assertEquals(-1, ArrayUtils.lastIndexOf(array, (short) 0, 2));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testReverse,1701-1701,[        ArrayUtils.reverse(array);],,testReverse,1702-1702,[        assertArrayEquals(null, array);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testReverseBoolean,1805-1805,[        ArrayUtils.reverse(array);],,testReverseBoolean,1806-1806,[        assertEquals(null, array);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testReverseBooleanRange,1837-1837,[        ArrayUtils.reverse(array, 0, 3);],,testReverseBooleanRange,1838-1838,[        assertEquals(null, array);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testReverseByte,1766-1766,[        ArrayUtils.reverse(array);],,testReverseByte,1767-1767,[        assertEquals(null, array);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testReverseByteRange,1869-1869,[        ArrayUtils.reverse(array, 0, 3);],,testReverseByteRange,1870-1870,[        assertEquals(null, array);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testReverseChar,1753-1753,[        ArrayUtils.reverse(array);],,testReverseChar,1754-1754,[        assertEquals(null, array);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testReverseCharRange,1901-1901,[        ArrayUtils.reverse(array, 0, 3);],,testReverseCharRange,1902-1902,[        assertEquals(null, array);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testReverseDouble,1779-1779,[        ArrayUtils.reverse(array);],,testReverseDouble,1780-1780,[        assertEquals(null, array);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testReverseDoubleRange,1933-1933,[        ArrayUtils.reverse(array, 0, 3);],,testReverseDoubleRange,1934-1934,[        assertEquals(null, array);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testReverseFloat,1792-1792,[        ArrayUtils.reverse(array);],,testReverseFloat,1793-1793,[        assertEquals(null, array);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testReverseFloatRange,1965-1965,[        ArrayUtils.reverse(array, 0, 3);],,testReverseFloatRange,1966-1966,[        assertEquals(null, array);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testReverseInt,1727-1727,[        ArrayUtils.reverse(array);],,testReverseInt,1728-1728,[        assertEquals(null, array);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testReverseIntRange,1997-1997,[        ArrayUtils.reverse(array, 0, 3);],,testReverseIntRange,1998-1998,[        assertEquals(null, array);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testReverseLong,1714-1714,[        ArrayUtils.reverse(array);],,testReverseLong,1715-1715,[        assertEquals(null, array);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testReverseLongRange,2029-2029,[        ArrayUtils.reverse(array, 0, 3);],,testReverseLongRange,2030-2030,[        assertEquals(null, array);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testReverseObjectRange,2093-2093,[        ArrayUtils.reverse(array, 0, 3);],,testReverseObjectRange,2094-2094,[        assertEquals(null, array);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testReverseShort,1740-1740,[        ArrayUtils.reverse(array);],,testReverseShort,1741-1741,[        assertEquals(null, array);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testReverseShortRange,2061-2061,[        ArrayUtils.reverse(array, 0, 3);],,testReverseShortRange,2062-2062,[        assertEquals(null, array);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testSameLength,1411-1411,[        assertTrue(ArrayUtils.isSameLength(nullArray, nullArray));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testSameLengthBoolean,1439-1439,[        assertTrue(ArrayUtils.isSameLength(nullArray, nullArray));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testSameLengthByte,1579-1579,[        assertTrue(ArrayUtils.isSameLength(nullArray, nullArray));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testSameLengthChar,1551-1551,[        assertTrue(ArrayUtils.isSameLength(nullArray, nullArray));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testSameLengthDouble,1607-1607,[        assertTrue(ArrayUtils.isSameLength(nullArray, nullArray));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testSameLengthFloat,1635-1635,[        assertTrue(ArrayUtils.isSameLength(nullArray, nullArray));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testSameLengthInt,1495-1495,[        assertTrue(ArrayUtils.isSameLength(nullArray, nullArray));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testSameLengthLong,1467-1467,[        assertTrue(ArrayUtils.isSameLength(nullArray, nullArray));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testSameLengthShort,1523-1523,[        assertTrue(ArrayUtils.isSameLength(nullArray, nullArray));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testToObject_boolean,2842-2842,[        assertArrayEquals(null, ArrayUtils.toObject(b));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testToObject_byte,2955-2955,[        assertArrayEquals(null, ArrayUtils.toObject(b));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testToObject_char,2896-2896,[        assertArrayEquals(null, ArrayUtils.toObject(b));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testToObject_double,3254-3254,[        assertArrayEquals(null, ArrayUtils.toObject(b));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testToObject_float,3193-3193,[        assertArrayEquals(null, ArrayUtils.toObject(b));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testToObject_int,3071-3071,[        assertArrayEquals(null, ArrayUtils.toObject(b));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testToObject_long,3132-3132,[        assertArrayEquals(null, ArrayUtils.toObject(b));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testToObject_short,3013-3013,[        assertArrayEquals(null, ArrayUtils.toObject(b));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testToPrimitive_boolean,2808-2808,[        assertEquals(null, ArrayUtils.toPrimitive(b));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testToPrimitive_byte,2914-2914,[        assertEquals(null, ArrayUtils.toPrimitive(b));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testToPrimitive_byte_byte,2933-2933,[        assertEquals(null, ArrayUtils.toPrimitive(b, Byte.MIN_VALUE));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testToPrimitive_char,2855-2855,[        assertEquals(null, ArrayUtils.toPrimitive(b));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testToPrimitive_char_char,2874-2874,[        assertEquals(null, ArrayUtils.toPrimitive(b, Character.MIN_VALUE));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testToPrimitive_double,3214-3214,[         assertEquals(null, ArrayUtils.toPrimitive(b));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testToPrimitive_double_double,3234-3234,[         assertEquals(null, ArrayUtils.toPrimitive(l, Double.MIN_VALUE));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testToPrimitive_float,3153-3153,[         assertEquals(null, ArrayUtils.toPrimitive(b));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testToPrimitive_float_float,3173-3173,[         assertEquals(null, ArrayUtils.toPrimitive(l, Float.MIN_VALUE));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testToPrimitive_int,3031-3031,[         assertEquals(null, ArrayUtils.toPrimitive(b));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testToPrimitive_intNull,3065-3065,[        assertEquals(null, ArrayUtils.toPrimitive(iArray, Integer.MIN_VALUE));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testToPrimitive_int_int,3048-3048,[         assertEquals(null, ArrayUtils.toPrimitive(l, Integer.MIN_VALUE));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testToPrimitive_long,3092-3092,[         assertEquals(null, ArrayUtils.toPrimitive(b));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testToPrimitive_long_long,3112-3112,[         assertEquals(null, ArrayUtils.toPrimitive(l, Long.MIN_VALUE));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testToPrimitive_short,2973-2973,[        assertEquals(null, ArrayUtils.toPrimitive(b));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ArrayUtilsTest.java,testToPrimitive_short_short,2992-2992,[        assertEquals(null, ArrayUtils.toPrimitive(s, Short.MIN_VALUE));],,
STYLE,RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT,org/apache/commons/lang3/ArrayUtilsTest.java,testToPrimitive_boolean,2816-2816,[            ArrayUtils.toPrimitive(new Boolean[] {Boolean.TRUE, null});],,
STYLE,RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT,org/apache/commons/lang3/ArrayUtilsTest.java,testToPrimitive_byte,2925-2925,[            ArrayUtils.toPrimitive(new Byte[] {Byte.valueOf(Byte.MIN_VALUE), null});],,
STYLE,RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT,org/apache/commons/lang3/ArrayUtilsTest.java,testToPrimitive_char,2866-2866,[            ArrayUtils.toPrimitive(new Character[] {new Character(Character.MIN_VALUE), null});],,
STYLE,RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT,org/apache/commons/lang3/ArrayUtilsTest.java,testToPrimitive_double,3226-3226,[             ArrayUtils.toPrimitive(new Float[] {Float.valueOf(Float.MIN_VALUE), null});],,
STYLE,RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT,org/apache/commons/lang3/ArrayUtilsTest.java,testToPrimitive_float,3165-3165,[             ArrayUtils.toPrimitive(new Float[] {Float.valueOf(Float.MIN_VALUE), null});],,
STYLE,RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT,org/apache/commons/lang3/ArrayUtilsTest.java,testToPrimitive_int,3040-3040,[             ArrayUtils.toPrimitive(new Integer[] {Integer.valueOf(Integer.MIN_VALUE), null});],,
STYLE,RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT,org/apache/commons/lang3/ArrayUtilsTest.java,testToPrimitive_long,3104-3104,[             ArrayUtils.toPrimitive(new Long[] {Long.valueOf(Long.MIN_VALUE), null});],,
STYLE,RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT,org/apache/commons/lang3/ArrayUtilsTest.java,testToPrimitive_short,2984-2984,[            ArrayUtils.toPrimitive(new Short[] {Short.valueOf(Short.MIN_VALUE), null});],,
STYLE,EQ_UNUSUAL,org/apache/commons/lang3/ArrayUtilsTest.java,equals,263-263,[                throw new UnsupportedOperationException();],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/ArrayUtilsTest.java,,248-267,[        map = ArrayUtils.toMap(new Object[] {new Map.Entry<Object, Object>() {,             @Override,             public Object getKey() {,                 return "foo";,             },             @Override,             public Object getValue() {,                 return "bar";,             },             @Override,             public Object setValue(final Object value) {,                 throw new UnsupportedOperationException();,             },             @Override,             public boolean equals(final Object o) {,                 throw new UnsupportedOperationException();,             },             @Override,             public int hashCode() {,                 throw new UnsupportedOperationException();],,
BAD_PRACTICE,ES_COMPARING_PARAMETER_STRING_WITH_EQ,org/apache/commons/lang3/BooleanUtils.java,toBooleanObject,554-554,[        if (str == "true") {],,
BAD_PRACTICE,ES_COMPARING_PARAMETER_STRING_WITH_EQ,org/apache/commons/lang3/BooleanUtils.java,toBoolean,730-730,[        } else if (str == falseString) {],,
BAD_PRACTICE,ES_COMPARING_PARAMETER_STRING_WITH_EQ,org/apache/commons/lang3/BooleanUtils.java,toBoolean,728-728,[        if (str == trueString) {],,
BAD_PRACTICE,NP_BOOLEAN_RETURN_NULL,org/apache/commons/lang3/BooleanUtils.java,negate,65-65,[            return null;],,
BAD_PRACTICE,NP_BOOLEAN_RETURN_NULL,org/apache/commons/lang3/BooleanUtils.java,toBooleanObject,332-332,[            return null;],,
BAD_PRACTICE,NP_BOOLEAN_RETURN_NULL,org/apache/commons/lang3/BooleanUtils.java,toBooleanObject,240-240,[            return null;],,
BAD_PRACTICE,NP_BOOLEAN_RETURN_NULL,org/apache/commons/lang3/BooleanUtils.java,toBooleanObject,365-365,[                return null;],,toBooleanObject,372-372,[            return null;],,
BAD_PRACTICE,NP_BOOLEAN_RETURN_NULL,org/apache/commons/lang3/BooleanUtils.java,toBooleanObject,558-558,[            return null;],,toBooleanObject,634-634,[        return null;],,
BAD_PRACTICE,NP_BOOLEAN_RETURN_NULL,org/apache/commons/lang3/BooleanUtils.java,toBooleanObject,665-665,[                return null;],,toBooleanObject,672-672,[            return null;],,
BAD_PRACTICE,RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN,org/apache/commons/lang3/BooleanUtils.java,toBoolean,710-710,[        return toBooleanObject(str) == Boolean.TRUE;],,
PERFORMANCE,BX_UNBOXING_IMMEDIATELY_REBOXED,org/apache/commons/lang3/BooleanUtilsTest.java,testXor_object_validInput_2items,535-535,[            BooleanUtils],,testXor_object_validInput_2items,542-542,[            BooleanUtils],,testXor_object_validInput_2items,549-549,[            BooleanUtils],,testXor_object_validInput_2items,556-556,[            BooleanUtils],,
PERFORMANCE,BX_UNBOXING_IMMEDIATELY_REBOXED,org/apache/commons/lang3/BooleanUtilsTest.java,testXor_object_validInput_3items,566-566,[                BooleanUtils.xor(],,testXor_object_validInput_3items,576-576,[            BooleanUtils],,testXor_object_validInput_3items,587-587,[            BooleanUtils],,testXor_object_validInput_3items,598-598,[            BooleanUtils],,testXor_object_validInput_3items,609-609,[                BooleanUtils.xor(],,testXor_object_validInput_3items,619-619,[            BooleanUtils.xor(],,testXor_object_validInput_3items,629-629,[            BooleanUtils.xor(],,testXor_object_validInput_3items,639-639,[                BooleanUtils],,
PERFORMANCE,DM_STRING_CTOR,org/apache/commons/lang3/BooleanUtilsTest.java,test_toBoolean_String_String_String,365-365,[        assertTrue(BooleanUtils.toBoolean("Y", new String("Y"), new String("N")));],,test_toBoolean_String_String_String,367-367,[        assertFalse(BooleanUtils.toBoolean("N", new String("Y"), new String("N")));],,test_toBoolean_String_String_String,370-370,[        assertTrue(BooleanUtils.toBoolean("Y", new String("Y"), new String("Y")));],,
BAD_PRACTICE,ISC_INSTANTIATE_STATIC_CLASS,org/apache/commons/lang3/BooleanUtilsTest.java,testConstructor,40-40,[        assertNotNull(new BooleanUtils());],,
BAD_PRACTICE,RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN,org/apache/commons/lang3/BooleanUtilsTest.java,test_negate_Boolean,53-53,[        assertSame(Boolean.FALSE, BooleanUtils.negate(Boolean.TRUE));],,
BAD_PRACTICE,RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN,org/apache/commons/lang3/BooleanUtilsTest.java,test_negate_Boolean,52-52,[        assertSame(Boolean.TRUE, BooleanUtils.negate(Boolean.FALSE));],,
BAD_PRACTICE,ISC_INSTANTIATE_STATIC_CLASS,org/apache/commons/lang3/CharEncodingTest.java,testConstructor,45-45,[        new CharEncoding();],,
STYLE,RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT,org/apache/commons/lang3/CharEncodingTest.java,testConstructor,45-45,[        new CharEncoding();],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/CharRangeTest.java,testContainsNullArg,318-318,[            boolean contains = range.contains(null);],,
BAD_PRACTICE,NM_CONFUSING,org/apache/commons/lang3/CharRangeTest.java,testContains_Char,169-194,[        CharRange range = CharRange.is('c');,         assertFalse(range.contains('b'));,         assertTrue(range.contains('c'));,         assertFalse(range.contains('d'));,         assertFalse(range.contains('e'));, ,         range = CharRange.isIn('c', 'd');,         assertFalse(range.contains('b'));,         assertTrue(range.contains('c'));,         assertTrue(range.contains('d'));,         assertFalse(range.contains('e'));, ,         range = CharRange.isIn('d', 'c');,         assertFalse(range.contains('b'));,         assertTrue(range.contains('c'));,         assertTrue(range.contains('d'));,         assertFalse(range.contains('e'));, ,         range = CharRange.isNotIn('c', 'd');,         assertTrue(range.contains('b'));,         assertFalse(range.contains('c'));,         assertFalse(range.contains('d'));,         assertTrue(range.contains('e'));,         assertTrue(range.contains((char) 0));,         assertTrue(range.contains(Character.MAX_VALUE));,     }],,testContains_char,1302-1307,[        final StrBuilder sb = new StrBuilder("abcdefghijklmnopqrstuvwxyz");,         assertTrue(sb.contains('a'));,         assertTrue(sb.contains('o'));,         assertTrue(sb.contains('z'));,         assertFalse(sb.contains('1'));,     }],,
BAD_PRACTICE,ISC_INSTANTIATE_STATIC_CLASS,org/apache/commons/lang3/CharSequenceUtilsTest.java,testConstructor,41-41,[        assertNotNull(new CharSequenceUtils());],,
BAD_PRACTICE,ISC_INSTANTIATE_STATIC_CLASS,org/apache/commons/lang3/CharSetUtilsTest.java,testConstructor,39-39,[        assertNotNull(new CharSetUtils());],,
STYLE,RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT,org/apache/commons/lang3/CharUtilsPerfRun.java,run_CharSet,118-118,[        run_CharSet(WARM_UP);],,run_CharSet,121-121,[        run_CharSet(COUNT);],,
STYLE,RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT,org/apache/commons/lang3/CharUtilsPerfRun.java,run_CharUtils_isAsciiNumeric,106-106,[        run_CharUtils_isAsciiNumeric(WARM_UP);],,run_CharUtils_isAsciiNumeric,109-109,[        run_CharUtils_isAsciiNumeric(COUNT);],,
STYLE,RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT,org/apache/commons/lang3/CharUtilsPerfRun.java,run_inlined_CharUtils_isAsciiNumeric,112-112,[        run_inlined_CharUtils_isAsciiNumeric(WARM_UP);],,run_inlined_CharUtils_isAsciiNumeric,115-115,[        run_inlined_CharUtils_isAsciiNumeric(COUNT);],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/commons/lang3/CharUtilsTest.java,<clinit>,37-37,[    private static final Character CHARACTER_A = new Character('A');],,<clinit>,38-38,[    private static final Character CHARACTER_B = new Character('B');],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/commons/lang3/CharUtilsTest.java,testToCharacterObject_String,78-78,[        assertEquals(new Character('a'), CharUtils.toCharacterObject("a"));],,testToCharacterObject_String,79-79,[        assertEquals(new Character('a'), CharUtils.toCharacterObject("abc"));],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/commons/lang3/CharUtilsTest.java,testToCharacterObject_char,54-54,[        assertEquals(new Character('a'), CharUtils.toCharacterObject('a'));],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/commons/lang3/CharUtilsTest.java,testToIntValue_Character,145-145,[        assertEquals(0, CharUtils.toIntValue(new Character('0')));],,testToIntValue_Character,146-146,[        assertEquals(3, CharUtils.toIntValue(new Character('3')));],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/commons/lang3/CharUtilsTest.java,testToIntValue_Character_int,157-157,[        assertEquals(0, CharUtils.toIntValue(new Character('0'), -1));],,testToIntValue_Character_int,158-158,[        assertEquals(3, CharUtils.toIntValue(new Character('3'), -1));],,testToIntValue_Character_int,159-159,[        assertEquals(-1, CharUtils.toIntValue(new Character('A'), -1));],,
BAD_PRACTICE,ES_COMPARING_STRINGS_WITH_EQ,org/apache/commons/lang3/CharUtilsTest.java,testToString_Character,191-191,[        assertSame(CharUtils.toString(CHARACTER_A), CharUtils.toString(CHARACTER_A));],,
BAD_PRACTICE,ES_COMPARING_STRINGS_WITH_EQ,org/apache/commons/lang3/CharUtilsTest.java,testToString_char,171-171,[            assertSame(str, str2);],,testToString_char,179-179,[            assertTrue(str != str2);],,
BAD_PRACTICE,ES_COMPARING_STRINGS_WITH_EQ,org/apache/commons/lang3/CharUtilsTest.java,testToString_char,166-166,[        assertSame(CharUtils.toString('a'), CharUtils.toString('a'));],,
BAD_PRACTICE,ISC_INSTANTIATE_STATIC_CLASS,org/apache/commons/lang3/CharUtilsTest.java,testConstructor,43-43,[        assertNotNull(new CharUtils());],,
CORRECTNESS,RC_REF_COMPARISON,org/apache/commons/lang3/CharUtilsTest.java,testToCharacterObject_String,80-80,[        assertSame(CharUtils.toCharacterObject("a"), CharUtils.toCharacterObject("a"));],,
CORRECTNESS,RC_REF_COMPARISON,org/apache/commons/lang3/CharUtilsTest.java,testToCharacterObject_char,60-60,[            assertSame(ch, ch2);],,testToCharacterObject_char,67-67,[            assertTrue(ch != ch2);],,
CORRECTNESS,RC_REF_COMPARISON,org/apache/commons/lang3/CharUtilsTest.java,testToCharacterObject_char,71-71,[        assertSame(CharUtils.toCharacterObject("a"), CharUtils.toCharacterObject('a'));],,
CORRECTNESS,RC_REF_COMPARISON,org/apache/commons/lang3/CharUtilsTest.java,testToCharacterObject_char,55-55,[        assertSame(CharUtils.toCharacterObject('a'), CharUtils.toCharacterObject('a'));],,
STYLE,UC_USELESS_CONDITION,org/apache/commons/lang3/CharUtilsTest.java,testIsAscii_char,227-227,[                assertFalse(CharUtils.isAscii((char) i));],,testIsAscii_char,224-224,[            if (i < 128) {],,
BAD_PRACTICE,ISC_INSTANTIATE_STATIC_CLASS,org/apache/commons/lang3/ClassPathUtilsTest.java,testConstructor,36-36,[        assertNotNull(new ClassPathUtils());],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ClassUtils.java,primitivesToWrappers,729-729,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ClassUtils.java,toClass,992-992,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/ClassUtils.java,wrappersToPrimitives,779-779,[            return null;],,
PERFORMANCE,WMI_WRONG_MAP_ITERATOR,org/apache/commons/lang3/ClassUtils.java,<clinit>,98-98,[            final Class<?> wrapperClass = primitiveWrapperMap.get(primitiveClass);],,
BAD_PRACTICE,IT_NO_SUCH_ELEMENT,org/apache/commons/lang3/ClassUtils.java,next,1174-1176,[                        final Class<?> result = next.getValue();,                         next.setValue(result.getSuperclass());,                         return result;],,
PERFORMANCE,DM_NEW_FOR_GETCLASS,org/apache/commons/lang3/ClassUtilsTest.java,test_getPackageCanonicalName_Class,1201-1201,[        assertEquals("org.apache.commons.lang3", ClassUtils.getPackageCanonicalName(new Object(){}.getClass()));],,
PERFORMANCE,DM_NEW_FOR_GETCLASS,org/apache/commons/lang3/ClassUtilsTest.java,test_getPackageName_Class,221-221,[        assertEquals("org.apache.commons.lang3", ClassUtils.getPackageName(new Object(){}.getClass()));],,
PERFORMANCE,DM_NEW_FOR_GETCLASS,org/apache/commons/lang3/ClassUtilsTest.java,test_getShortCanonicalName_Class,1152-1152,[        assertEquals("ClassUtilsTest.7", ClassUtils.getShortCanonicalName(new Object(){}.getClass()));],,
PERFORMANCE,DM_NEW_FOR_GETCLASS,org/apache/commons/lang3/ClassUtilsTest.java,test_getShortClassName_Class,123-123,[        assertEquals("ClassUtilsTest.2", ClassUtils.getShortClassName(new Object(){}.getClass()));],,
PERFORMANCE,DM_NEW_FOR_GETCLASS,org/apache/commons/lang3/ClassUtilsTest.java,test_getSimpleName_Class,175-175,[        assertEquals("", ClassUtils.getSimpleName(new Object(){}.getClass()));],,
PERFORMANCE,DM_NEW_FOR_GETCLASS,org/apache/commons/lang3/ClassUtilsTest.java,test_isInnerClass_Class,334-334,[        }.getClass()));],,
BAD_PRACTICE,ISC_INSTANTIATE_STATIC_CLASS,org/apache/commons/lang3/ClassUtilsTest.java,testConstructor,63-63,[        assertNotNull(new ClassUtils());],,
BAD_PRACTICE,ISC_INSTANTIATE_STATIC_CLASS,org/apache/commons/lang3/ClassUtilsTest.java,test_getPackageCanonicalName_Object,1178-1178,[        assertEquals("org.apache.commons.lang3", ClassUtils.getPackageCanonicalName(new ClassUtils(), "<null>"));],,
BAD_PRACTICE,ISC_INSTANTIATE_STATIC_CLASS,org/apache/commons/lang3/ClassUtilsTest.java,test_getPackageName_Object,190-190,[        assertEquals("org.apache.commons.lang3", ClassUtils.getPackageName(new ClassUtils(), "<null>"));],,
BAD_PRACTICE,ISC_INSTANTIATE_STATIC_CLASS,org/apache/commons/lang3/ClassUtilsTest.java,test_getShortCanonicalName_Object,1129-1129,[        assertEquals("ClassUtils", ClassUtils.getShortCanonicalName(new ClassUtils(), "<null>"));],,
BAD_PRACTICE,ISC_INSTANTIATE_STATIC_CLASS,org/apache/commons/lang3/ClassUtilsTest.java,test_getShortClassName_Object,74-74,[        assertEquals("ClassUtils", ClassUtils.getShortClassName(new ClassUtils(), "<null>"));],,
BAD_PRACTICE,ISC_INSTANTIATE_STATIC_CLASS,org/apache/commons/lang3/ClassUtilsTest.java,test_getSimpleName_Object,181-181,[        assertEquals("ClassUtils", ClassUtils.getSimpleName(new ClassUtils(), "<null>"));],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/ClassUtilsTest.java,,81-81,[        assertEquals("ClassUtilsTest.1", ClassUtils.getShortClassName(new Object(){}, "<null>"));],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/ClassUtilsTest.java,,80-80,[        class Named extends Object {}],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/ClassUtilsTest.java,,123-123,[        assertEquals("ClassUtilsTest.2", ClassUtils.getShortClassName(new Object(){}.getClass()));],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/ClassUtilsTest.java,,175-175,[        assertEquals("", ClassUtils.getSimpleName(new Object(){}.getClass()));],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/ClassUtilsTest.java,,221-221,[        assertEquals("org.apache.commons.lang3", ClassUtils.getPackageName(new Object(){}.getClass()));],,
BAD_PRACTICE,CN_IDIOM,org/apache/commons/lang3/ClassUtilsTest.java,,333-333,[        assertTrue(ClassUtils.isInnerClass(new Cloneable() {],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/ClassUtilsTest.java,,333-333,[        assertTrue(ClassUtils.isInnerClass(new Cloneable() {],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/ClassUtilsTest.java,,1136-1136,[        class Named extends Object {}],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/ClassUtilsTest.java,,1137-1137,[        assertEquals("ClassUtilsTest.6", ClassUtils.getShortCanonicalName(new Object(){}, "<null>"));],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/ClassUtilsTest.java,,1152-1152,[        assertEquals("ClassUtilsTest.7", ClassUtils.getShortCanonicalName(new Object(){}.getClass()));],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/ClassUtilsTest.java,,1185-1185,[        class Named extends Object {}],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/ClassUtilsTest.java,,1186-1186,[        assertEquals("org.apache.commons.lang3", ClassUtils.getPackageCanonicalName(new Object(){}, "<null>"));],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/ClassUtilsTest.java,,1201-1201,[        assertEquals("org.apache.commons.lang3", ClassUtils.getPackageCanonicalName(new Object(){}.getClass()));],,
STYLE,RI_REDUNDANT_INTERFACES,org/apache/commons/lang3/ClassUtilsTest.java,,272-272,[    private static class CY extends CX implements IB, IC {],,
BAD_PRACTICE,ISC_INSTANTIATE_STATIC_CLASS,org/apache/commons/lang3/EnumUtilsTest.java,testConstructable,43-43,[        new EnumUtils();],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/EnumUtilsTest.java,test_processBitVector_nullClass,268-268,[        EnumUtils.processBitVector(empty, 0L);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/EnumUtilsTest.java,test_processBitVectors_nullClass,274-274,[        EnumUtils.processBitVectors(empty, 0L);],,
STYLE,RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT,org/apache/commons/lang3/EnumUtilsTest.java,testConstructable,43-43,[        new EnumUtils();],,
BAD_PRACTICE,ISC_INSTANTIATE_STATIC_CLASS,org/apache/commons/lang3/LocaleUtilsTest.java,testConstructor,68-68,[        assertNotNull(new LocaleUtils());],,
STYLE,RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT,org/apache/commons/lang3/LocaleUtilsTest.java,setUp,59-59,[        LocaleUtils.isAvailableLocale(Locale.getDefault());],,
STYLE,BC_VACUOUS_INSTANCEOF,org/apache/commons/lang3/ObjectUtilsTest.java,testNull,303-303,[        assertTrue(ObjectUtils.NULL instanceof ObjectUtils.Null);],,
PERFORMANCE,DM_STRING_CTOR,org/apache/commons/lang3/ObjectUtilsTest.java,testCloneOfNotCloneable,465-465,[        final String string = new String("apache");],,
PERFORMANCE,DM_STRING_CTOR,org/apache/commons/lang3/ObjectUtilsTest.java,testPossibleCloneOfNotCloneable,515-515,[        final String string = new String("apache");],,
BAD_PRACTICE,ES_COMPARING_STRINGS_WITH_EQ,org/apache/commons/lang3/ObjectUtilsTest.java,testPossibleCloneOfNotCloneable,516-516,[        assertSame(string, ObjectUtils.cloneIfPossible(string));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ObjectUtilsTest.java,testCompare,368-368,[        assertEquals("Null Null false", 0, ObjectUtils.compare(nullValue, nullValue));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ObjectUtilsTest.java,testHashCodeMulti_multiple_nullArray,128-128,[        assertEquals(1, ObjectUtils.hashCodeMulti(array));],,
BAD_PRACTICE,RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN,org/apache/commons/lang3/ObjectUtilsTest.java,testFirstNonNull,79-79,[        assertSame(Boolean.TRUE, ObjectUtils.firstNonNull(Boolean.TRUE));],,
BAD_PRACTICE,SE_COMPARATOR_SHOULD_BE_SERIALIZABLE,org/apache/commons/lang3/ObjectUtilsTest.java,,670-674,[    static final class CharSequenceComparator implements Comparator<CharSequence> {, ,         @Override,         public int compare(final CharSequence o1, final CharSequence o2) {,             return o1.toString().compareTo(o2.toString());],,
BAD_PRACTICE,CN_IDIOM,org/apache/commons/lang3/ObjectUtilsTest.java,,631-632,[            super(s);,         }],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/commons/lang3/RandomStringUtilsTest.java,testLang100,352-352,[            assertEquals("differs at " + i + "(" + Integer.toHexString(new Character(o).hashCode()) + "," +],,
BAD_PRACTICE,ISC_INSTANTIATE_STATIC_CLASS,org/apache/commons/lang3/RandomStringUtilsTest.java,testConstructor,41-41,[        assertNotNull(new RandomStringUtils());],,
BAD_PRACTICE,EQ_COMPARETO_USE_OBJECT_EQUALS,org/apache/commons/lang3/RangeTest.java,compareTo,72-72,[                    return 1;],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/RangeTest.java,,69-72,[            new Comparable() { ,                 @Override,                 public int compareTo(final Object other) {,                     return 1;],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/RangeTest.java,,83-86,[        final Comparator<Integer> c = new Comparator<Integer>(){,             @Override,             public int compare(final Integer o1, final Integer o2) {,                 return 0; // all integers are equal],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/RangeTest.java,,102-105,[        final Comparator<Integer> c = new Comparator<Integer>(){,             @Override,             public int compare(final Integer o1, final Integer o2) {,                 return 0; // all integers are equal],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/SerializationUtilsTest.java,testDeserializeClassCastException,220-220,[        final Integer i = SerializationUtils.deserialize(serialized);],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/SerializationUtilsTest.java,testDeserializeStreamClassNotFound,268-268,[            Object test = SerializationUtils.deserialize(inTest);],,
BAD_PRACTICE,ES_COMPARING_STRINGS_WITH_EQ,org/apache/commons/lang3/SerializationUtilsTest.java,testClone,391-391,[        assertTrue(iString != testMap.get("FOO"));],,
BAD_PRACTICE,ES_COMPARING_STRINGS_WITH_EQ,org/apache/commons/lang3/SerializationUtilsTest.java,testDeserializeBytes,343-343,[        assertTrue(iString != testMap.get("FOO"));],,
BAD_PRACTICE,ES_COMPARING_STRINGS_WITH_EQ,org/apache/commons/lang3/SerializationUtilsTest.java,testDeserializeStream,207-207,[        assertTrue(iString != testMap.get("FOO"));],,
BAD_PRACTICE,ISC_INSTANTIATE_STATIC_CLASS,org/apache/commons/lang3/SerializationUtilsTest.java,testConstructor,70-70,[        assertNotNull(new SerializationUtils());],,
CORRECTNESS,RC_REF_COMPARISON,org/apache/commons/lang3/SerializationUtilsTest.java,testClone,393-393,[        assertTrue(iInteger != testMap.get("BAR"));],,
CORRECTNESS,RC_REF_COMPARISON,org/apache/commons/lang3/SerializationUtilsTest.java,testDeserializeBytes,345-345,[        assertTrue(iInteger != testMap.get("BAR"));],,
CORRECTNESS,RC_REF_COMPARISON,org/apache/commons/lang3/SerializationUtilsTest.java,testDeserializeStream,209-209,[        assertTrue(iInteger != testMap.get("BAR"));],,
STYLE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,org/apache/commons/lang3/SerializationUtilsTest.java,testCloneUnserializable,406-406,[            iMap.put(new Object(), new Object());],,
STYLE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,org/apache/commons/lang3/SerializationUtilsTest.java,testSerializeBytesUnserializable,302-302,[            iMap.put(new Object(), new Object());],,
STYLE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,org/apache/commons/lang3/SerializationUtilsTest.java,testSerializeStreamUnserializable,125-125,[            iMap.put(new Object(), new Object());],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/SerializationUtilsTest.java,,176-179,[        final OutputStream streamTest = new OutputStream() {,             @Override,             public void write(final int arg0) throws IOException {,                 throw new IOException(SERIALIZE_IO_EXCEPTION_MESSAGE);],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/commons/lang3/StringEscapeUtilsTest.java,testUnescapeHexCharsHtml,271-271,[            final Character c1 = new Character(i);],,testUnescapeHexCharsHtml,272-272,[            final Character c2 = new Character((char)(i+1));],,
BAD_PRACTICE,ISC_INSTANTIATE_STATIC_CLASS,org/apache/commons/lang3/StringEscapeUtilsTest.java,testConstructor,46-46,[        assertNotNull(new StringEscapeUtils());],,
I18N,DM_CONVERT_CASE,org/apache/commons/lang3/StringUtils.java,lowerCase,5641-5641,[        return str.toLowerCase();],,
I18N,DM_CONVERT_CASE,org/apache/commons/lang3/StringUtils.java,score,7040-7040,[            longer = first.toString().toLowerCase();],,score,7041-7041,[            shorter = second.toString().toLowerCase();],,score,7043-7043,[            longer = second.toString().toLowerCase();],,score,7044-7044,[            shorter = first.toString().toLowerCase();],,
I18N,DM_CONVERT_CASE,org/apache/commons/lang3/StringUtils.java,upperCase,5592-5592,[        return str.toUpperCase();],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/StringUtils.java,splitByCharacterType,3223-3223,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/StringUtils.java,splitByWholeSeparatorWorker,2806-2806,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/StringUtils.java,splitWorker,2950-2950,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/StringUtils.java,splitWorker,3077-3077,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/commons/lang3/StringUtils.java,substringsBetween,2518-2518,[            return null;],,substringsBetween,2542-2542,[            return null;],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/StringUtilsTest.java,testAbbreviate_StringInt,1752-1752,[            String res = StringUtils.abbreviate("abc", 3);],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/StringUtilsTest.java,testAbbreviate_StringIntInt,1768-1768,[            String res = StringUtils.abbreviate("abcdefghij", 0, 3);],,testAbbreviate_StringIntInt,1776-1776,[            String res = StringUtils.abbreviate("abcdefghij", 5, 6);],,
CORRECTNESS,DMI_DOH,org/apache/commons/lang3/StringUtilsTest.java,testEMPTY,2057-2057,[        assertNotNull(StringUtils.EMPTY);],,
I18N,DM_DEFAULT_ENCODING,org/apache/commons/lang3/StringUtilsTest.java,testToEncodedString,2480-2480,[        assertArrayEquals(expectedBytes, expectedString.getBytes());],,
I18N,DM_DEFAULT_ENCODING,org/apache/commons/lang3/StringUtilsTest.java,testToString,2329-2329,[        assertArrayEquals(expectedBytes, expectedString.getBytes());],,
BAD_PRACTICE,ES_COMPARING_STRINGS_WITH_EQ,org/apache/commons/lang3/StringUtilsTest.java,testReplace_StringStringStringInt,1167-1167,[        assertSame(str, StringUtils.replace(str, "x", "", -1));],,
BAD_PRACTICE,ISC_INSTANTIATE_STATIC_CLASS,org/apache/commons/lang3/StringUtilsTest.java,testConstructor,118-118,[        assertNotNull(new StringUtils());],,
PERFORMANCE,SBSC_USE_STRINGBUFFER_CONCATENATION,org/apache/commons/lang3/StringUtilsTest.java,<clinit>,68-68,[                nws += String.valueOf((char) i);],,
BAD_PRACTICE,NP_TOSTRING_COULD_RETURN_NULL,org/apache/commons/lang3/StringUtilsTest.java,toString,88-88,[                return null;],,
BAD_PRACTICE,ISC_INSTANTIATE_STATIC_CLASS,org/apache/commons/lang3/SystemUtilsTest.java,testConstructor,44-44,[        assertNotNull(new SystemUtils());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/SystemUtilsTest.java,testJavaVersionMatches,218-218,[        assertFalse(SystemUtils.isJavaVersionMatch(javaVersion, "1.0"));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/SystemUtilsTest.java,testOSMatchesName,339-339,[        assertFalse(SystemUtils.isOSNameMatch(osName, "Windows"));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/SystemUtilsTest.java,testOSMatchesNameAndVersion,354-354,[        assertFalse(SystemUtils.isOSMatch(osName, osVersion, "Windows 9", "4.1"));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/SystemUtilsTest.java,testOSMatchesNameAndVersion,354-354,[        assertFalse(SystemUtils.isOSMatch(osName, osVersion, "Windows 9", "4.1"));],,
BAD_PRACTICE,ISC_INSTANTIATE_STATIC_CLASS,org/apache/commons/lang3/ValidateTest.java,testConstructor,648-648,[        assertNotNull(new Validate());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ValidateTest.java,testNotBlankMsgNullStringShouldThrow,351-351,[            Validate.notBlank(string, "Message");],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/ValidateTest.java,testNotBlankNullStringShouldThrow,335-335,[            Validate.notBlank(string);],,
BAD_PRACTICE,HE_EQUALS_NO_HASHCODE,org/apache/commons/lang3/builder/CompareToBuilderTest.java,equals,81-88,[            if (o == this) {,                 return true;,             },             if (!(o instanceof TestSubObject)) {,                 return false;,             },             final TestSubObject rhs = (TestSubObject) o;,             return super.equals(o) && b == rhs.b;],,
PERFORMANCE,URF_UNREAD_FIELD,org/apache/commons/lang3/builder/CompareToBuilderTest.java,,97-97,[            this.t = t;],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/DefaultToStringStyleTest.java,testLongArray,117-117,[        assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append(array).toString());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/DefaultToStringStyleTest.java,testLongArrayArray,127-127,[        assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append(array).toString());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/DefaultToStringStyleTest.java,testObjectArray,107-107,[        assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append(array).toString());],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/builder/DiffBuilder.java,,139-149,[            diffs.add(new Diff<Boolean>(fieldName) {,                 private static final long serialVersionUID = 1L;, ,                 @Override,                 public Boolean getLeft() {,                     return Boolean.valueOf(lhs);,                 }, ,                 @Override,                 public Boolean getRight() {,                     return Boolean.valueOf(rhs);],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/builder/DiffBuilder.java,,515-525,[            diffs.add(new Diff<Float[]>(fieldName) {,                 private static final long serialVersionUID = 1L;, ,                 @Override,                 public Float[] getLeft() {,                     return ArrayUtils.toObject(lhs);,                 }, ,                 @Override,                 public Float[] getRight() {,                     return ArrayUtils.toObject(rhs);],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/builder/DiffBuilder.java,,557-567,[            diffs.add(new Diff<Integer>(fieldName) {,                 private static final long serialVersionUID = 1L;, ,                 @Override,                 public Integer getLeft() {,                     return Integer.valueOf(lhs);,                 }, ,                 @Override,                 public Integer getRight() {,                     return Integer.valueOf(rhs);],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/builder/DiffBuilder.java,,599-609,[            diffs.add(new Diff<Integer[]>(fieldName) {,                 private static final long serialVersionUID = 1L;, ,                 @Override,                 public Integer[] getLeft() {,                     return ArrayUtils.toObject(lhs);,                 }, ,                 @Override,                 public Integer[] getRight() {,                     return ArrayUtils.toObject(rhs);],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/builder/DiffBuilder.java,,641-651,[            diffs.add(new Diff<Long>(fieldName) {,                 private static final long serialVersionUID = 1L;, ,                 @Override,                 public Long getLeft() {,                     return Long.valueOf(lhs);,                 }, ,                 @Override,                 public Long getRight() {,                     return Long.valueOf(rhs);],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/builder/DiffBuilder.java,,683-693,[            diffs.add(new Diff<Long[]>(fieldName) {,                 private static final long serialVersionUID = 1L;, ,                 @Override,                 public Long[] getLeft() {,                     return ArrayUtils.toObject(lhs);,                 }, ,                 @Override,                 public Long[] getRight() {,                     return ArrayUtils.toObject(rhs);],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/builder/DiffBuilder.java,,725-735,[            diffs.add(new Diff<Short>(fieldName) {,                 private static final long serialVersionUID = 1L;, ,                 @Override,                 public Short getLeft() {,                     return Short.valueOf(lhs);,                 }, ,                 @Override,                 public Short getRight() {,                     return Short.valueOf(rhs);],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/builder/DiffBuilder.java,,767-777,[            diffs.add(new Diff<Short[]>(fieldName) {,                 private static final long serialVersionUID = 1L;, ,                 @Override,                 public Short[] getLeft() {,                     return ArrayUtils.toObject(lhs);,                 }, ,                 @Override,                 public Short[] getRight() {,                     return ArrayUtils.toObject(rhs);],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/builder/DiffBuilder.java,,845-855,[        diffs.add(new Diff<Object>(fieldName) {,             private static final long serialVersionUID = 1L;, ,             @Override,             public Object getLeft() {,                 return lhs;,             }, ,             @Override,             public Object getRight() {,                 return rhs;],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/builder/DiffBuilder.java,,882-892,[            diffs.add(new Diff<Object[]>(fieldName) {,                 private static final long serialVersionUID = 1L;, ,                 @Override,                 public Object[] getLeft() {,                     return lhs;,                 }, ,                 @Override,                 public Object[] getRight() {,                     return rhs;],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/builder/DiffBuilder.java,,180-190,[            diffs.add(new Diff<Boolean[]>(fieldName) {,                 private static final long serialVersionUID = 1L;, ,                 @Override,                 public Boolean[] getLeft() {,                     return ArrayUtils.toObject(lhs);,                 }, ,                 @Override,                 public Boolean[] getRight() {,                     return ArrayUtils.toObject(rhs);],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/builder/DiffBuilder.java,,221-231,[            diffs.add(new Diff<Byte>(fieldName) {,                 private static final long serialVersionUID = 1L;, ,                 @Override,                 public Byte getLeft() {,                     return Byte.valueOf(lhs);,                 }, ,                 @Override,                 public Byte getRight() {,                     return Byte.valueOf(rhs);],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/builder/DiffBuilder.java,,263-273,[            diffs.add(new Diff<Byte[]>(fieldName) {,                 private static final long serialVersionUID = 1L;, ,                 @Override,                 public Byte[] getLeft() {,                     return ArrayUtils.toObject(lhs);,                 }, ,                 @Override,                 public Byte[] getRight() {,                     return ArrayUtils.toObject(rhs);],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/builder/DiffBuilder.java,,305-315,[            diffs.add(new Diff<Character>(fieldName) {,                 private static final long serialVersionUID = 1L;, ,                 @Override,                 public Character getLeft() {,                     return Character.valueOf(lhs);,                 }, ,                 @Override,                 public Character getRight() {,                     return Character.valueOf(rhs);],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/builder/DiffBuilder.java,,347-357,[            diffs.add(new Diff<Character[]>(fieldName) {,                 private static final long serialVersionUID = 1L;, ,                 @Override,                 public Character[] getLeft() {,                     return ArrayUtils.toObject(lhs);,                 }, ,                 @Override,                 public Character[] getRight() {,                     return ArrayUtils.toObject(rhs);],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/builder/DiffBuilder.java,,389-399,[            diffs.add(new Diff<Double>(fieldName) {,                 private static final long serialVersionUID = 1L;, ,                 @Override,                 public Double getLeft() {,                     return Double.valueOf(lhs);,                 }, ,                 @Override,                 public Double getRight() {,                     return Double.valueOf(rhs);],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/builder/DiffBuilder.java,,431-441,[            diffs.add(new Diff<Double[]>(fieldName) {,                 private static final long serialVersionUID = 1L;, ,                 @Override,                 public Double[] getLeft() {,                     return ArrayUtils.toObject(lhs);,                 }, ,                 @Override,                 public Double[] getRight() {,                     return ArrayUtils.toObject(rhs);],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/builder/DiffBuilder.java,,473-483,[            diffs.add(new Diff<Float>(fieldName) {,                 private static final long serialVersionUID = 1L;, ,                 @Override,                 public Float getLeft() {,                     return Float.valueOf(lhs);,                 }, ,                 @Override,                 public Float getRight() {,                     return Float.valueOf(rhs);],,
STYLE,BC_UNCONFIRMED_CAST,org/apache/commons/lang3/builder/EqualsBuilderTest.java,testReflectionEqualsEquivalenceRelationship,275-275,[            ((TestSubObject) oToChange).setB(((TestSubObject) to).getB());],,testReflectionEqualsEquivalenceRelationship,281-281,[            ((TestSubObject) oToChange).setB(((TestSubObject) to).getB() + 1);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/EqualsBuilderTest.java,testBooleanArray,604-604,[        assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/EqualsBuilderTest.java,testBooleanArray,602-602,[        assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/EqualsBuilderTest.java,testByteArray,547-547,[        assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/EqualsBuilderTest.java,testByteArray,545-545,[        assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/EqualsBuilderTest.java,testCharArray,528-528,[        assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/EqualsBuilderTest.java,testCharArray,526-526,[        assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/EqualsBuilderTest.java,testDoubleArray,566-566,[        assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/EqualsBuilderTest.java,testDoubleArray,564-564,[        assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/EqualsBuilderTest.java,testFloatArray,585-585,[        assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/EqualsBuilderTest.java,testFloatArray,583-583,[        assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/EqualsBuilderTest.java,testIntArray,490-490,[        assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/EqualsBuilderTest.java,testIntArray,488-488,[        assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/EqualsBuilderTest.java,testLongArray,471-471,[        assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/EqualsBuilderTest.java,testLongArray,469-469,[        assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/EqualsBuilderTest.java,testObjectArray,452-452,[        assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/EqualsBuilderTest.java,testObjectArray,450-450,[        assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/EqualsBuilderTest.java,testShortArray,509-509,[        assertTrue(new EqualsBuilder().append(obj1, obj2).isEquals());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/EqualsBuilderTest.java,testShortArray,507-507,[        assertTrue(!new EqualsBuilder().append(obj1, obj2).isEquals());],,
BAD_PRACTICE,EQ_CHECK_FOR_OPERAND_NOT_COMPATIBLE_WITH_THIS,org/apache/commons/lang3/builder/EqualsBuilderTest.java,equals,955-955,[            if (o instanceof TestBCanEqualA) {],,equals,956-956,[                return this.a == ((TestBCanEqualA) o).getB();],,
BAD_PRACTICE,EQ_CHECK_FOR_OPERAND_NOT_COMPATIBLE_WITH_THIS,org/apache/commons/lang3/builder/EqualsBuilderTest.java,equals,983-983,[            if (o instanceof TestACanEqualB) {],,equals,984-984,[                return this.b == ((TestACanEqualB) o).getA();],,
BAD_PRACTICE,HE_EQUALS_USE_HASHCODE,org/apache/commons/lang3/builder/EqualsBuilderTest.java,equals,1126-1126,[            return EqualsBuilder.reflectionEquals(this, obj);],,
PERFORMANCE,URF_UNREAD_FIELD,org/apache/commons/lang3/builder/EqualsBuilderTest.java,,1121-1121,[            this.reference = reference;],,
PERFORMANCE,URF_UNREAD_FIELD,org/apache/commons/lang3/builder/EqualsBuilderTest.java,,1117-1117,[            this.one = new TestObject(one);],,
PERFORMANCE,URF_UNREAD_FIELD,org/apache/commons/lang3/builder/EqualsBuilderTest.java,,1075-1075,[            this.one = new TestObject(one);],,
PERFORMANCE,URF_UNREAD_FIELD,org/apache/commons/lang3/builder/EqualsBuilderTest.java,,1077-1077,[            this.three = new TestObject(three);],,
PERFORMANCE,URF_UNREAD_FIELD,org/apache/commons/lang3/builder/EqualsBuilderTest.java,,1076-1076,[            this.two = new TestObject(two);],,
PERFORMANCE,URF_UNREAD_FIELD,org/apache/commons/lang3/builder/EqualsBuilderTest.java,,116-116,[            this.t = t;],,
STYLE,EQ_DOESNT_OVERRIDE_EQUALS,org/apache/commons/lang3/builder/EqualsBuilderTest.java,equals,46-53,[            if (o == null) { return false; },             if (o == this) { return true; },             if (o.getClass() != getClass()) {,                 return false;,             }, ,             final TestObject rhs = (TestObject) o;,             return a == rhs.a;],,
PERFORMANCE,URF_UNREAD_FIELD,org/apache/commons/lang3/builder/EqualsBuilderTest.java,,134-134,[            this.leafValue = leafValue;],,
PERFORMANCE,URF_UNREAD_FIELD,org/apache/commons/lang3/builder/EqualsBuilderTest.java,,125-125,[            this.tt = tt;],,
BAD_PRACTICE,HE_HASHCODE_USE_OBJECT_EQUALS,org/apache/commons/lang3/builder/HashCodeBuilder.java,hashCode,950-950,[        return toHashCode();],,
PERFORMANCE,URF_UNREAD_FIELD,org/apache/commons/lang3/builder/HashCodeBuilderAndEqualsBuilderTest.java,,124-124,[            this.c = c;],,
PERFORMANCE,URF_UNREAD_FIELD,org/apache/commons/lang3/builder/HashCodeBuilderAndEqualsBuilderTest.java,,123-123,[            this.i = i;],,
PERFORMANCE,URF_UNREAD_FIELD,org/apache/commons/lang3/builder/HashCodeBuilderAndEqualsBuilderTest.java,,126-126,[            this.s = s;],,
PERFORMANCE,URF_UNREAD_FIELD,org/apache/commons/lang3/builder/HashCodeBuilderAndEqualsBuilderTest.java,,125-125,[            this.string = string;],,
PERFORMANCE,URF_UNREAD_FIELD,org/apache/commons/lang3/builder/HashCodeBuilderAndEqualsBuilderTest.java,,135-135,[            this.tString = tString;],,
PERFORMANCE,URF_UNREAD_FIELD,org/apache/commons/lang3/builder/HashCodeBuilderAndEqualsBuilderTest.java,,112-112,[            this.tString = tString;],,
PERFORMANCE,URF_UNREAD_FIELD,org/apache/commons/lang3/builder/HashCodeBuilderAndEqualsBuilderTest.java,,101-101,[            this.c = c;],,
PERFORMANCE,URF_UNREAD_FIELD,org/apache/commons/lang3/builder/HashCodeBuilderAndEqualsBuilderTest.java,,100-100,[            this.i = i;],,
PERFORMANCE,URF_UNREAD_FIELD,org/apache/commons/lang3/builder/HashCodeBuilderAndEqualsBuilderTest.java,,103-103,[            this.s = s;],,
PERFORMANCE,URF_UNREAD_FIELD,org/apache/commons/lang3/builder/HashCodeBuilderAndEqualsBuilderTest.java,,102-102,[            this.string = string;],,
STYLE,ICAST_INTEGER_MULTIPLY_CAST_TO_LONG,org/apache/commons/lang3/builder/HashCodeBuilderTest.java,testDoubleArray,406-406,[        assertEquals((17 * 37 + h1) * 37, new HashCodeBuilder(17, 37).append(obj).toHashCode());],,
STYLE,ICAST_INTEGER_MULTIPLY_CAST_TO_LONG,org/apache/commons/lang3/builder/HashCodeBuilderTest.java,testDoubleArrayAsObject,420-420,[        assertEquals((17 * 37 + h1) * 37, new HashCodeBuilder(17, 37).append((Object) obj).toHashCode());],,
STYLE,ICAST_INTEGER_MULTIPLY_CAST_TO_LONG,org/apache/commons/lang3/builder/HashCodeBuilderTest.java,testFloatArray,434-434,[        assertEquals((17 * 37 + h1) * 37, new HashCodeBuilder(17, 37).append(obj).toHashCode());],,
STYLE,ICAST_INTEGER_MULTIPLY_CAST_TO_LONG,org/apache/commons/lang3/builder/HashCodeBuilderTest.java,testFloatArrayAsObject,446-446,[        assertEquals((17 * 37 + h1) * 37, new HashCodeBuilder(17, 37).append((Object) obj).toHashCode());],,
STYLE,ICAST_INTEGER_MULTIPLY_CAST_TO_LONG,org/apache/commons/lang3/builder/HashCodeBuilderTest.java,testObjectArray,272-272,[        assertEquals((17 * 37 + obj[0].hashCode()) * 37, new HashCodeBuilder(17, 37).append(obj).toHashCode());],,
STYLE,ICAST_INTEGER_MULTIPLY_CAST_TO_LONG,org/apache/commons/lang3/builder/HashCodeBuilderTest.java,testObjectArrayAsObject,283-283,[        assertEquals((17 * 37 + obj[0].hashCode()) * 37, new HashCodeBuilder(17, 37).append((Object) obj).toHashCode());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/HashCodeBuilderTest.java,testObject,196-196,[        assertEquals(17 * 37, new HashCodeBuilder(17, 37).append(obj).toHashCode());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/HashCodeBuilderTest.java,testObjectBuild,204-204,[        assertEquals(17 * 37, new HashCodeBuilder(17, 37).append(obj).build().intValue());],,
BAD_PRACTICE,HE_HASHCODE_USE_OBJECT_EQUALS,org/apache/commons/lang3/builder/HashCodeBuilderTest.java,hashCode,39-39,[            return HashCodeBuilder.reflectionHashCode(this);],,
PERFORMANCE,URF_UNREAD_FIELD,org/apache/commons/lang3/builder/HashCodeBuilderTest.java,,532-532,[        a.b = b;],,
BAD_PRACTICE,HE_HASHCODE_USE_OBJECT_EQUALS,org/apache/commons/lang3/builder/HashCodeBuilderTest.java,hashCode,51-51,[            return HashCodeBuilder.reflectionHashCode(this);],,
PERFORMANCE,URF_UNREAD_FIELD,org/apache/commons/lang3/builder/HashCodeBuilderTest.java,,533-533,[        b.a = a;],,
PERFORMANCE,URF_UNREAD_FIELD,org/apache/commons/lang3/builder/HashCodeBuilderTest.java,,509-509,[        @SuppressWarnings("unused")],,
PERFORMANCE,URF_UNREAD_FIELD,org/apache/commons/lang3/builder/HashCodeBuilderTest.java,,515-515,[        @SuppressWarnings("unused")],,
PERFORMANCE,URF_UNREAD_FIELD,org/apache/commons/lang3/builder/HashCodeBuilderTest.java,,512-512,[        @SuppressWarnings("unused")],,
PERFORMANCE,URF_UNREAD_FIELD,org/apache/commons/lang3/builder/HashCodeBuilderTest.java,,123-123,[            this.t = t;],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/MultiLineToStringStyleTest.java,testLongArray,118-118,[        assertEquals(baseStr + "[" + SystemUtils.LINE_SEPARATOR + "  <null>" + SystemUtils.LINE_SEPARATOR + "]", new ToStringBuilder(base).append(array).toString());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/MultiLineToStringStyleTest.java,testLongArrayArray,128-128,[        assertEquals(baseStr + "[" + SystemUtils.LINE_SEPARATOR + "  <null>" + SystemUtils.LINE_SEPARATOR + "]", new ToStringBuilder(base).append(array).toString());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/MultiLineToStringStyleTest.java,testObjectArray,108-108,[        assertEquals(baseStr + "[" + SystemUtils.LINE_SEPARATOR + "  <null>" + SystemUtils.LINE_SEPARATOR + "]", new ToStringBuilder(base).append(array).toString());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/NoFieldNamesToStringStyleTest.java,testLongArray,117-117,[        assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append(array).toString());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/NoFieldNamesToStringStyleTest.java,testLongArrayArray,127-127,[        assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append(array).toString());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/NoFieldNamesToStringStyleTest.java,testObjectArray,107-107,[        assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append(array).toString());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/RecursiveToStringStyleTest.java,testLongArray,120-120,[        assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append(array).toString());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/RecursiveToStringStyleTest.java,testLongArrayArray,130-130,[        assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append(array).toString());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/RecursiveToStringStyleTest.java,testObjectArray,110-110,[        assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append(array).toString());],,
PERFORMANCE,URF_UNREAD_FIELD,org/apache/commons/lang3/builder/RecursiveToStringStyleTest.java,,90-90,[        p.job.title = "Manager";],,
PERFORMANCE,URF_UNREAD_FIELD,org/apache/commons/lang3/builder/RecursiveToStringStyleTest.java,,87-87,[        p.age = 33;],,
PERFORMANCE,URF_UNREAD_FIELD,org/apache/commons/lang3/builder/RecursiveToStringStyleTest.java,,86-86,[        p.name = "John Doe";],,
PERFORMANCE,URF_UNREAD_FIELD,org/apache/commons/lang3/builder/RecursiveToStringStyleTest.java,,88-88,[        p.smoker = false;],,
STYLE,BC_BAD_CAST_TO_ABSTRACT_COLLECTION,org/apache/commons/lang3/builder/ReflectionToStringBuilderConcurrencyTest.java,testConcurrency,84-84,[        final List<Integer> list = holder.collection;],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/builder/ReflectionToStringBuilderConcurrencyTest.java,,92-99,[        final Callable<Integer> consumer = new Callable<Integer>() {,             @Override,             public Integer call() {,                 for (int i = 0; i < REPEAT; i++) {,                     final String s = ReflectionToStringBuilder.toString(holder);,                     Assert.assertNotNull(s);,                 },                 return Integer.valueOf(REPEAT);],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/builder/ReflectionToStringBuilderConcurrencyTest.java,,103-109,[        final Callable<Integer> producer = new Callable<Integer>() {,             @Override,             public Integer call() {,                 for (int i = 0; i < DATA_SIZE; i++) {,                     list.remove(list.get(0));,                 },                 return Integer.valueOf(REPEAT);],,
STYLE,RV_CHECK_FOR_POSITIVE_INDEXOF,org/apache/commons/lang3/builder/ReflectionToStringBuilderExcludeTest.java,validateSecretFieldPresent,134-134,[        Assert.assertTrue(toString.indexOf(SECRET_VALUE) > 0);],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC,org/apache/commons/lang3/builder/ReflectionToStringBuilderExcludeTest.java,,34-38,[    class TestFixture {,         @SuppressWarnings("unused"),         private final String secretField = SECRET_VALUE;, ,         @SuppressWarnings("unused")],,
PERFORMANCE,SS_SHOULD_BE_STATIC,org/apache/commons/lang3/builder/ReflectionToStringBuilderExcludeTest.java,,35-35,[        @SuppressWarnings("unused")],,
PERFORMANCE,SS_SHOULD_BE_STATIC,org/apache/commons/lang3/builder/ReflectionToStringBuilderExcludeTest.java,,38-38,[        @SuppressWarnings("unused")],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC,org/apache/commons/lang3/builder/ReflectionToStringBuilderMutateInspectConcurrencyTest.java,,83-90,[        public InspectingClient(final TestFixture testFixture) {,             this.testFixture = testFixture;,         }, ,         @Override,         public void run() {,             ReflectionToStringBuilder.toString(testFixture);,         }],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC,org/apache/commons/lang3/builder/ReflectionToStringBuilderMutateInspectConcurrencyTest.java,,64-77,[        final private Random random = new Random();, ,         public MutatingClient(final TestFixture testFixture) {,             this.testFixture = testFixture;,         }, ,         @Override,         public void run() {,             if (random.nextBoolean()) {,                 testFixture.add();,             } else {,                 testFixture.delete();,             },         }],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC,org/apache/commons/lang3/builder/ReflectionToStringBuilderMutateInspectConcurrencyTest.java,,41-59,[        final private LinkedList<Integer> listField = new LinkedList<Integer>();,         final private Random random = new Random();,         private final int N = 100;, ,         public TestFixture() {,             synchronized (this) {,                 for (int i = 0; i < N; i++) {,                     listField.add(Integer.valueOf(i));,                 },             },         }, ,         public synchronized void add() {,             listField.add(Integer.valueOf(random.nextInt(N)));,         }, ,         public synchronized void delete() {,             listField.remove(Integer.valueOf(random.nextInt(N)));,         }],,
PERFORMANCE,SS_SHOULD_BE_STATIC,org/apache/commons/lang3/builder/ReflectionToStringBuilderMutateInspectConcurrencyTest.java,,43-43,[        private final int N = 100;],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/ShortPrefixToStringStyleTest.java,testLongArray,117-117,[        assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append(array).toString());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/ShortPrefixToStringStyleTest.java,testLongArrayArray,127-127,[        assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append(array).toString());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/ShortPrefixToStringStyleTest.java,testObjectArray,107-107,[        assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append(array).toString());],,
PERFORMANCE,SS_SHOULD_BE_STATIC,org/apache/commons/lang3/builder/ShortPrefixToStringStyleTest.java,,37-37,[    private final String baseStr = "Integer";],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/SimpleToStringStyleTest.java,testLongArray,115-115,[        assertEquals("<null>", new ToStringBuilder(base).append(array).toString());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/SimpleToStringStyleTest.java,testLongArrayArray,125-125,[        assertEquals("<null>", new ToStringBuilder(base).append(array).toString());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/SimpleToStringStyleTest.java,testObjectArray,105-105,[        assertEquals("<null>", new ToStringBuilder(base).append(array).toString());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/StandardToStringStyleTest.java,testLongArray,132-132,[        assertEquals(baseStr + "[%NULL%]", new ToStringBuilder(base).append(array).toString());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/StandardToStringStyleTest.java,testLongArrayArray,142-142,[        assertEquals(baseStr + "[%NULL%]", new ToStringBuilder(base).append(array).toString());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/StandardToStringStyleTest.java,testObjectArray,122-122,[        assertEquals(baseStr + "[%NULL%]", new ToStringBuilder(base).append(array).toString());],,
PERFORMANCE,SS_SHOULD_BE_STATIC,org/apache/commons/lang3/builder/StandardToStringStyleTest.java,,37-37,[    private final String baseStr = "Integer";],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/commons/lang3/builder/ToStringBuilderTest.java,testReflectionCharacter,105-105,[        final Character c = new Character('A');],,
PERFORMANCE,DM_STRING_TOSTRING,org/apache/commons/lang3/builder/ToStringBuilderTest.java,testSelfInstanceTwoVarsReflectionObjectCycle,555-555,[        assertEquals(this.toBaseString(test) + "[typeIsSelf=" + this.toBaseString(test) + ",otherType=" + test.getOtherType().toString() + "]", test.toString());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/ToStringBuilderTest.java,testBooleanArray,810-810,[        assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append(array).toString());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/ToStringBuilderTest.java,testBooleanArrayArray,890-890,[        assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append(array).toString());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/ToStringBuilderTest.java,testByteArray,770-770,[        assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append(array).toString());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/ToStringBuilderTest.java,testByteArrayArray,850-850,[        assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append(array).toString());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/ToStringBuilderTest.java,testCharArray,780-780,[        assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append(array).toString());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/ToStringBuilderTest.java,testCharArrayArray,860-860,[        assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append(array).toString());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/ToStringBuilderTest.java,testDoubleArray,790-790,[        assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append(array).toString());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/ToStringBuilderTest.java,testDoubleArrayArray,870-870,[        assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append(array).toString());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/ToStringBuilderTest.java,testFloatArray,800-800,[        assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append(array).toString());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/ToStringBuilderTest.java,testFloatArrayArray,880-880,[        assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append(array).toString());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/ToStringBuilderTest.java,testIntArray,750-750,[        assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append(array).toString());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/ToStringBuilderTest.java,testIntArrayArray,830-830,[        assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append(array).toString());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/ToStringBuilderTest.java,testLongArray,740-740,[        assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append(array).toString());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/ToStringBuilderTest.java,testLongArrayArray,820-820,[        assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append(array).toString());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/ToStringBuilderTest.java,testObjectArray,730-730,[        assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append(array).toString());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/ToStringBuilderTest.java,testReflectionBooleanArray,234-234,[        assertReflectionArray("<null>", array);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/ToStringBuilderTest.java,testReflectionBooleanArrayArray,310-310,[        assertReflectionArray("<null>", array);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/ToStringBuilderTest.java,testReflectionByteArrayArray,282-282,[        assertReflectionArray("<null>", array);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/ToStringBuilderTest.java,testReflectionCharArray,207-207,[        assertReflectionArray("<null>", array);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/ToStringBuilderTest.java,testReflectionCharArrayArray,291-291,[        assertReflectionArray("<null>", array);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/ToStringBuilderTest.java,testReflectionDoubleArray,216-216,[        assertReflectionArray("<null>", array);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/ToStringBuilderTest.java,testReflectionDoubleArrayArray,300-300,[        assertReflectionArray("<null>", array);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/ToStringBuilderTest.java,testReflectionFloatArray,225-225,[        assertReflectionArray("<null>", array);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/ToStringBuilderTest.java,testReflectionFloatArrayArray,245-245,[        assertReflectionArray("<null>", array);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/ToStringBuilderTest.java,testReflectionIntArray,180-180,[        assertReflectionArray("<null>", array);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/ToStringBuilderTest.java,testReflectionIntArrayArray,264-264,[        assertReflectionArray("<null>", array);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/ToStringBuilderTest.java,testReflectionLongArray,171-171,[        assertReflectionArray("<null>", array);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/ToStringBuilderTest.java,testReflectionLongArrayArray,255-255,[        assertReflectionArray("<null>", array);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/ToStringBuilderTest.java,testReflectionObjectArray,162-162,[        assertReflectionArray("<null>", array);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/ToStringBuilderTest.java,testReflectionShortArray,189-189,[        assertReflectionArray("<null>", array);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/ToStringBuilderTest.java,testReflectionhortArrayArray,273-273,[        assertReflectionArray("<null>", array);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/ToStringBuilderTest.java,testReflectionyteArray,198-198,[        assertReflectionArray("<null>", array);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/ToStringBuilderTest.java,testShortArray,760-760,[        assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append(array).toString());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/builder/ToStringBuilderTest.java,testShortArrayArray,840-840,[        assertEquals(baseStr + "[<null>]", new ToStringBuilder(base).append(array).toString());],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC,org/apache/commons/lang3/builder/ToStringBuilderTest.java,,1064-1068,[    class MultiLineTestObject {,         Integer i = Integer.valueOf(31337);,         @Override,         public String toString() {,             return new ToStringBuilder(this).append("testInt", i).toString();],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC,org/apache/commons/lang3/builder/ToStringBuilderTest.java,,381-384,[        class Inner {,             @Override,             public String toString() {,                 return ToStringBuilder.reflectionToString(this);],,
PERFORMANCE,URF_UNREAD_FIELD,org/apache/commons/lang3/builder/ToStringBuilderTest.java,,568-568,[        a.b = b;],,
PERFORMANCE,URF_UNREAD_FIELD,org/apache/commons/lang3/builder/ToStringBuilderTest.java,,569-569,[        b.a = a;],,
PERFORMANCE,SS_SHOULD_BE_STATIC,org/apache/commons/lang3/builder/ToStringBuilderTest.java,,506-506,[        private final String otherType = "The Other Type";],,
PERFORMANCE,URF_UNREAD_FIELD,org/apache/commons/lang3/builder/ToStringBuilderTest.java,,509-509,[            this.typeIsSelf = this;],,
PERFORMANCE,URF_UNREAD_FIELD,org/apache/commons/lang3/builder/ToStringBuilderTest.java,,494-494,[            this.typeIsSelf = this;],,
PERFORMANCE,URF_UNREAD_FIELD,org/apache/commons/lang3/builder/ToStringBuilderTest.java,,480-480,[            this.o = o;],,
STYLE,BC_BAD_CAST_TO_ABSTRACT_COLLECTION,org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,testConcurrency,86-86,[        final List<Integer> list = holder.collection;],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/builder/ToStringStyleConcurrencyTest.java,,92-99,[        final Callable<Integer> consumer = new Callable<Integer>() {,             @Override,             public Integer call() {,                 for (int i = 0; i < REPEAT; i++) {,                     // Calls ToStringStyle,                     new ToStringBuilder(holder).append(holder.collection);,                 },                 return Integer.valueOf(REPEAT);],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/concurrent/AbstractConcurrentInitializerTest.java,,71-86,[        class GetThread extends Thread {,             Object object;, ,             @Override,             public void run() {,                 try {,                     // wait until all threads are ready for maximum parallelism,                     startLatch.await();,                     // access the initializer,                     object = initializer.get();,                 } catch (final InterruptedException iex) {,                     // ignore,                 } catch (final ConcurrentException cex) {,                     object = cex;,                 },             }],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/concurrent/AtomicInitializerTest.java,,32-35,[        return new AtomicInitializer<Object>() {,             @Override,             protected Object initialize() throws ConcurrentException {,                 return new Object();],,
STYLE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,org/apache/commons/lang3/concurrent/AtomicSafeInitializerTest.java,testNumberOfInitializeInvocations,58-58,[        assertEquals("Wrong number of invocations", 1,],,
STYLE,BC_UNCONFIRMED_CAST_OF_RETURN_VALUE,org/apache/commons/lang3/concurrent/BackgroundInitializerTest.java,run,220-220,[                        iex.set((InterruptedException) cex.getCause());],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/concurrent/BackgroundInitializerTest.java,,213-226,[        final Thread getThread = new Thread() {,             @Override,             public void run() {,                 try {,                     init.get();,                 } catch (final ConcurrentException cex) {,                     if (cex.getCause() instanceof InterruptedException) {,                         iex.set((InterruptedException) cex.getCause());,                     },                 } finally {,                     assertTrue("Thread not interrupted", isInterrupted());,                     latch1.countDown();,                 },             }],,
MT_CORRECTNESS,DM_USELESS_THREAD,org/apache/commons/lang3/concurrent/BasicThreadFactoryTest.java,checkDaemonFlag,176-176,[        final Thread t = new Thread();],,
MT_CORRECTNESS,DM_USELESS_THREAD,org/apache/commons/lang3/concurrent/BasicThreadFactoryTest.java,testNewThreadExHandler,271-271,[        final Thread t = new Thread();],,
MT_CORRECTNESS,DM_USELESS_THREAD,org/apache/commons/lang3/concurrent/BasicThreadFactoryTest.java,testNewThreadNamingPattern,136-136,[            EasyMock.expect(wrapped.newThread(r)).andReturn(new Thread());],,
MT_CORRECTNESS,DM_USELESS_THREAD,org/apache/commons/lang3/concurrent/BasicThreadFactoryTest.java,testNewThreadNoDaemonFlag,211-211,[        final Thread t1 = new Thread();],,testNewThreadNoDaemonFlag,212-212,[        final Thread t2 = new Thread();],,
MT_CORRECTNESS,DM_USELESS_THREAD,org/apache/commons/lang3/concurrent/BasicThreadFactoryTest.java,testNewThreadNoExHandler,292-292,[        final Thread t = new Thread();],,
MT_CORRECTNESS,DM_USELESS_THREAD,org/apache/commons/lang3/concurrent/BasicThreadFactoryTest.java,testNewThreadNoNamingPattern,159-159,[        final Thread t = new Thread(name);],,
MT_CORRECTNESS,DM_USELESS_THREAD,org/apache/commons/lang3/concurrent/BasicThreadFactoryTest.java,testNewThreadNoPriority,252-252,[        final Thread t = new Thread();],,
MT_CORRECTNESS,DM_USELESS_THREAD,org/apache/commons/lang3/concurrent/BasicThreadFactoryTest.java,testNewThreadPriority,232-232,[        final Thread t = new Thread();],,
STYLE,BC_UNCONFIRMED_CAST_OF_RETURN_VALUE,org/apache/commons/lang3/concurrent/ConcurrentUtils.java,throwCause,164-164,[            throw (Error) ex.getCause();],,
STYLE,BC_UNCONFIRMED_CAST_OF_RETURN_VALUE,org/apache/commons/lang3/concurrent/ConcurrentUtils.java,throwCause,160-160,[            throw (RuntimeException) ex.getCause();],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/concurrent/ConcurrentUtilsTest.java,testConstantFuture_null,403-403,[        final Future<Integer> test = ConcurrentUtils.constantFuture(value);],,
CORRECTNESS,NP_NONNULL_PARAM_VIOLATION,org/apache/commons/lang3/concurrent/ConcurrentUtilsTest.java,testConstantFuture_Integer,391-391,[        assertSame(value, test.get(1000, null));],,
CORRECTNESS,NP_NONNULL_PARAM_VIOLATION,org/apache/commons/lang3/concurrent/ConcurrentUtilsTest.java,testConstantFuture_null,407-407,[        assertSame(value, test.get(1000, null));],,
CORRECTNESS,RC_REF_COMPARISON,org/apache/commons/lang3/concurrent/ConcurrentUtilsTest.java,testConstantFuture_Integer,389-389,[        assertSame(value, test.get());],,
CORRECTNESS,RC_REF_COMPARISON,org/apache/commons/lang3/concurrent/ConcurrentUtilsTest.java,testConstantFuture_Integer,390-390,[        assertSame(value, test.get(1000, TimeUnit.SECONDS));],,testConstantFuture_Integer,391-391,[        assertSame(value, test.get(1000, null));],,
CORRECTNESS,RV_EXCEPTION_NOT_THROWN,org/apache/commons/lang3/concurrent/ConcurrentUtilsTest.java,testConcurrentExceptionCauseError,54-54,[        new ConcurrentException("An error", new Error());],,
CORRECTNESS,RV_EXCEPTION_NOT_THROWN,org/apache/commons/lang3/concurrent/ConcurrentUtilsTest.java,testConcurrentExceptionCauseNull,62-62,[        new ConcurrentException(null);],,
CORRECTNESS,RV_EXCEPTION_NOT_THROWN,org/apache/commons/lang3/concurrent/ConcurrentUtilsTest.java,testConcurrentExceptionCauseUnchecked,46-46,[        new ConcurrentException(new RuntimeException());],,
CORRECTNESS,RV_EXCEPTION_NOT_THROWN,org/apache/commons/lang3/concurrent/ConcurrentUtilsTest.java,testConcurrentRuntimeExceptionCauseError,78-78,[        new ConcurrentRuntimeException("An error", new Error());],,
CORRECTNESS,RV_EXCEPTION_NOT_THROWN,org/apache/commons/lang3/concurrent/ConcurrentUtilsTest.java,testConcurrentRuntimeExceptionCauseNull,86-86,[        new ConcurrentRuntimeException(null);],,
CORRECTNESS,RV_EXCEPTION_NOT_THROWN,org/apache/commons/lang3/concurrent/ConcurrentUtilsTest.java,testConcurrentRuntimeExceptionCauseUnchecked,70-70,[        new ConcurrentRuntimeException(new RuntimeException());],,
PERFORMANCE,BX_UNBOXING_IMMEDIATELY_REBOXED,org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,testEqualsTrue,84-84,[                Integer.valueOf(VALUE.intValue()));],,
STYLE,RV_CHECK_FOR_POSITIVE_INDEXOF,org/apache/commons/lang3/concurrent/ConstantInitializerTest.java,testToStringNull,131-131,[        assertTrue("Object not found: " + s, s.indexOf("object = null") > 0);],,
MT_CORRECTNESS,VO_VOLATILE_INCREMENT,org/apache/commons/lang3/concurrent/MultiBackgroundInitializerTest.java,initialize,372-372,[            initializeCalls++;],,
CORRECTNESS,UWF_UNWRITTEN_FIELD,org/apache/commons/lang3/concurrent/TimedSemaphoreTest.java,,429-429,[            return schedFuture != null ? schedFuture : super.startTimer();],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/event/EventListenerSupportTest.java,,126-130,[        listenerSupport.addListener(new VetoableChangeListener() {,             ,             @Override,             public void vetoableChange(final PropertyChangeEvent e) {,             }],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/event/EventListenerSupportTest.java,,170-175,[                VetoableChangeListener.class) {,             private static final long serialVersionUID = 1L;, ,             @Override,             protected java.lang.reflect.InvocationHandler createInvocationHandler() {,                 return new ProxyInvocationHandler() {],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/event/EventListenerSupportTest.java,,205-210,[        {,             @Override,             public void vetoableChange(final PropertyChangeEvent e),             {,                 listenerSupport.removeListener(this);,             }],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/event/EventListenerSupportTest.java,,217-222,[        {,             @Override,             public void vetoableChange(final PropertyChangeEvent e),             {,                 calledListeners.add(this);,             }],,
BAD_PRACTICE,ISC_INSTANTIATE_STATIC_CLASS,org/apache/commons/lang3/event/EventUtilsTest.java,testConstructor,50-50,[        assertNotNull(new EventUtils());],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/event/EventUtilsTest.java,,95-100,[            {,                 @Override,                 public void propertyChange(final PropertyChangeEvent e),                 {,                     // Do nothing!,                 }],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/exception/ContextedRuntimeExceptionTest.java,,84-84,[        new DefaultExceptionContext() {private static final long serialVersionUID = 1L;});],,
STYLE,BC_UNCONFIRMED_CAST_OF_RETURN_VALUE,org/apache/commons/lang3/exception/ExceptionUtilsTest.java,testGetCause_Throwable,126-126,[        assertSame(((ExceptionWithCause) cyclicCause.getCause()).getCause(), ExceptionUtils.getCause(cyclicCause.getCause()));],,testGetCause_Throwable,127-127,[        assertSame(cyclicCause.getCause(), ExceptionUtils.getCause(((ExceptionWithCause) cyclicCause.getCause()).getCause()));],,
STYLE,BC_UNCONFIRMED_CAST_OF_RETURN_VALUE,org/apache/commons/lang3/exception/ExceptionUtilsTest.java,testGetRootCause_Throwable,157-157,[        assertSame(((ExceptionWithCause) cyclicCause.getCause()).getCause(), ExceptionUtils.getRootCause(cyclicCause));],,
STYLE,BC_UNCONFIRMED_CAST_OF_RETURN_VALUE,org/apache/commons/lang3/exception/ExceptionUtilsTest.java,testGetThrowableList_Throwable_recursiveCause,261-261,[        assertSame(((ExceptionWithCause) cyclicCause.getCause()).getCause(), throwables.get(2));],,
STYLE,BC_UNCONFIRMED_CAST_OF_RETURN_VALUE,org/apache/commons/lang3/exception/ExceptionUtilsTest.java,testGetThrowables_Throwable_recursiveCause,214-214,[        assertSame(((ExceptionWithCause) cyclicCause.getCause()).getCause(), throwables[2]);],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/exception/ExceptionUtilsTest.java,testPrintRootCauseStackTrace_ThrowableStream,383-383,[        out = new ByteArrayOutputStream(1024);],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/exception/ExceptionUtilsTest.java,testPrintRootCauseStackTrace_ThrowableWriter,409-409,[        writer = new StringWriter(1024);],,
I18N,DM_DEFAULT_ENCODING,org/apache/commons/lang3/exception/ExceptionUtilsTest.java,testPrintRootCauseStackTrace_ThrowableStream,381-381,[        assertEquals(0, out.toString().length());],,testPrintRootCauseStackTrace_ThrowableStream,393-393,[        String stackTrace = out.toString();],,testPrintRootCauseStackTrace_ThrowableStream,398-398,[        stackTrace = out.toString();],,
I18N,DM_DEFAULT_ENCODING,org/apache/commons/lang3/exception/ExceptionUtilsTest.java,testPrintRootCauseStackTrace_ThrowableStream,380-380,[        ExceptionUtils.printRootCauseStackTrace(null, new PrintStream(out));],,testPrintRootCauseStackTrace_ThrowableStream,392-392,[        ExceptionUtils.printRootCauseStackTrace(cause, new PrintStream(out));],,testPrintRootCauseStackTrace_ThrowableStream,397-397,[        ExceptionUtils.printRootCauseStackTrace(withoutCause, new PrintStream(out));],,
BAD_PRACTICE,ISC_INSTANTIATE_STATIC_CLASS,org/apache/commons/lang3/exception/ExceptionUtilsTest.java,testConstructor,108-108,[        assertNotNull(new ExceptionUtils());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/exception/ExceptionUtilsTest.java,test_getMessage_Throwable,463-463,[        assertEquals("", ExceptionUtils.getMessage(th));],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/exception/ExceptionUtilsTest.java,test_getRootCauseMessage_Throwable,475-475,[        assertEquals("", ExceptionUtils.getRootCauseMessage(th));],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/math/FractionTest.java,testAbs,757-757,[            f = f.abs();],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/math/FractionTest.java,testDivide,1229-1229,[            f = f1.divideBy(f1.invert());  // should overflow],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/math/FractionTest.java,testFactory_String_double,470-470,[            f = Fraction.getFraction(".");],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/math/FractionTest.java,testFactory_String_improper,578-578,[            f = Fraction.getFraction("/");],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/math/FractionTest.java,testFactory_String_proper,529-529,[            f = Fraction.getFraction(" ");],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/math/FractionTest.java,testFactory_int_int,144-144,[            f = Fraction.getFraction(1, Integer.MIN_VALUE);],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/math/FractionTest.java,testFactory_int_int_int,248-248,[            f = Fraction.getFraction(-1, 2, Integer.MAX_VALUE);],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/math/FractionTest.java,testMultiply,1171-1171,[            f = f1.multiplyBy(f1);  // should overflow],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/math/FractionTest.java,testNegate,726-726,[            f = f.negate();],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/math/FractionTest.java,testPow,870-870,[            f = f.pow(2);],,
BAD_PRACTICE,ES_COMPARING_STRINGS_WITH_EQ,org/apache/commons/lang3/math/FractionTest.java,testToProperString,1341-1341,[        assertSame(str, f.toProperString());],,
BAD_PRACTICE,ES_COMPARING_STRINGS_WITH_EQ,org/apache/commons/lang3/math/FractionTest.java,testToString,1313-1313,[        assertSame(str, f.toString());],,
STYLE,RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT,org/apache/commons/lang3/math/FractionTest.java,testCompareTo,1280-1280,[            f1.compareTo(null);],,
BAD_PRACTICE,ISC_INSTANTIATE_STATIC_CLASS,org/apache/commons/lang3/math/IEEE754rUtilsTest.java,testConstructorExists,104-104,[        new IEEE754rUtils();],,
STYLE,RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT,org/apache/commons/lang3/math/IEEE754rUtilsTest.java,testConstructorExists,104-104,[        new IEEE754rUtils();],,
CORRECTNESS,RpC_REPEATED_CONDITIONAL_TEST,org/apache/commons/lang3/math/NumberUtils.java,createBigInteger,737-737,[        if (str.startsWith("0x", pos) || str.startsWith("0x", pos)) { // hex],,
STYLE,SF_SWITCH_FALLTHROUGH,org/apache/commons/lang3/math/NumberUtils.java,createNumber,553-560,[                    } catch (final NumberFormatException nfe) { // NOPMD,                         // ignore the bad number,                     },                     //$FALL-THROUGH$,                 case 'd' :,                 case 'D' :,                     try {,                         final Double d = NumberUtils.createDouble(numeric);],,
STYLE,SF_SWITCH_NO_DEFAULT,org/apache/commons/lang3/math/NumberUtils.java,createNumber,528-569,[            switch (lastChar) {,                 case 'l' :,                 case 'L' :,                     if (dec == null,                         && exp == null,                         && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {,                         try {,                             return createLong(numeric);,                         } catch (final NumberFormatException nfe) { // NOPMD,                             // Too big for a long,                         },                         return createBigInteger(numeric);, ,                     },                     throw new NumberFormatException(str + " is not a valid number.");,                 case 'f' :,                 case 'F' :,                     try {,                         final Float f = NumberUtils.createFloat(numeric);,                         if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {,                             //If it's too big for a float or the float value = 0 and the string,                             //has non-zeros in it, then float does not have the precision we want,                             return f;,                         }, ,                     } catch (final NumberFormatException nfe) { // NOPMD,                         // ignore the bad number,                     },                     //$FALL-THROUGH$,                 case 'd' :,                 case 'D' :,                     try {,                         final Double d = NumberUtils.createDouble(numeric);,                         if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {,                             return d;,                         },                     } catch (final NumberFormatException nfe) { // NOPMD,                         // ignore the bad number,                     },                     try {,                         return createBigDecimal(numeric);,                     } catch (final NumberFormatException e) { // NOPMD],,
STYLE,BC_VACUOUS_INSTANCEOF,org/apache/commons/lang3/math/NumberUtilsTest.java,testConstants,1298-1298,[        assertTrue(NumberUtils.BYTE_ZERO instanceof Byte);],,testConstants,1299-1299,[        assertTrue(NumberUtils.BYTE_ONE instanceof Byte);],,testConstants,1300-1300,[        assertTrue(NumberUtils.BYTE_MINUS_ONE instanceof Byte);],,
STYLE,BC_VACUOUS_INSTANCEOF,org/apache/commons/lang3/math/NumberUtilsTest.java,testConstants,1301-1301,[        assertTrue(NumberUtils.DOUBLE_ZERO instanceof Double);],,testConstants,1302-1302,[        assertTrue(NumberUtils.DOUBLE_ONE instanceof Double);],,testConstants,1303-1303,[        assertTrue(NumberUtils.DOUBLE_MINUS_ONE instanceof Double);],,
STYLE,BC_VACUOUS_INSTANCEOF,org/apache/commons/lang3/math/NumberUtilsTest.java,testConstants,1304-1304,[        assertTrue(NumberUtils.FLOAT_ZERO instanceof Float);],,testConstants,1305-1305,[        assertTrue(NumberUtils.FLOAT_ONE instanceof Float);],,testConstants,1306-1306,[        assertTrue(NumberUtils.FLOAT_MINUS_ONE instanceof Float);],,
STYLE,BC_VACUOUS_INSTANCEOF,org/apache/commons/lang3/math/NumberUtilsTest.java,testConstants,1292-1292,[        assertTrue(NumberUtils.INTEGER_ZERO instanceof Integer);],,testConstants,1293-1293,[        assertTrue(NumberUtils.INTEGER_ONE instanceof Integer);],,testConstants,1294-1294,[        assertTrue(NumberUtils.INTEGER_MINUS_ONE instanceof Integer);],,
STYLE,BC_VACUOUS_INSTANCEOF,org/apache/commons/lang3/math/NumberUtilsTest.java,testConstants,1289-1289,[        assertTrue(NumberUtils.LONG_ZERO instanceof Long);],,testConstants,1290-1290,[        assertTrue(NumberUtils.LONG_ONE instanceof Long);],,testConstants,1291-1291,[        assertTrue(NumberUtils.LONG_MINUS_ONE instanceof Long);],,
STYLE,BC_VACUOUS_INSTANCEOF,org/apache/commons/lang3/math/NumberUtilsTest.java,testConstants,1295-1295,[        assertTrue(NumberUtils.SHORT_ZERO instanceof Short);],,testConstants,1296-1296,[        assertTrue(NumberUtils.SHORT_ONE instanceof Short);],,testConstants,1297-1297,[        assertTrue(NumberUtils.SHORT_MINUS_ONE instanceof Short);],,
STYLE,FE_FLOATING_POINT_EQUALITY,org/apache/commons/lang3/math/NumberUtilsTest.java,testStringToDoubleString,137-137,[        assertTrue("toDouble(String) 1 failed", NumberUtils.toDouble("-1.2345") == -1.2345d);],,testStringToDoubleString,138-138,[        assertTrue("toDouble(String) 2 failed", NumberUtils.toDouble("1.2345") == 1.2345d);],,testStringToDoubleString,141-141,[        assertTrue("toDouble(Double.MIN_VALUE) failed", NumberUtils.toDouble(Double.MIN_VALUE+"") == Double.MIN_VALUE);],,
STYLE,FE_FLOATING_POINT_EQUALITY,org/apache/commons/lang3/math/NumberUtilsTest.java,testStringToDoubleStringD,151-151,[        assertTrue("toDouble(String,int) 1 failed", NumberUtils.toDouble("1.2345", 5.1d) == 1.2345d);],,
STYLE,FE_FLOATING_POINT_EQUALITY,org/apache/commons/lang3/math/NumberUtilsTest.java,testToFloatString,101-101,[        assertTrue("toFloat(String) 1 failed", NumberUtils.toFloat("-1.2345") == -1.2345f);],,testToFloatString,102-102,[        assertTrue("toFloat(String) 2 failed", NumberUtils.toFloat("1.2345") == 1.2345f);],,testToFloatString,105-105,[        assertTrue("toFloat(Float.MIN_VALUE) failed", NumberUtils.toFloat(Float.MIN_VALUE+"") == Float.MIN_VALUE);],,
STYLE,FE_FLOATING_POINT_EQUALITY,org/apache/commons/lang3/math/NumberUtilsTest.java,testToFloatStringF,115-115,[        assertTrue("toFloat(String,int) 1 failed", NumberUtils.toFloat("1.2345", 5.1f) == 1.2345f);],,
BAD_PRACTICE,ISC_INSTANTIATE_STATIC_CLASS,org/apache/commons/lang3/math/NumberUtilsTest.java,testConstructor,42-42,[        assertNotNull(new NumberUtils());],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/commons/lang3/math/NumberUtilsTest.java,TestLang747,251-284,[        assertEquals(Integer.valueOf(0x8000),      NumberUtils.createNumber("0x8000"));,         assertEquals(Integer.valueOf(0x80000),     NumberUtils.createNumber("0x80000"));,         assertEquals(Integer.valueOf(0x800000),    NumberUtils.createNumber("0x800000"));,         assertEquals(Integer.valueOf(0x8000000),   NumberUtils.createNumber("0x8000000"));,         assertEquals(Integer.valueOf(0x7FFFFFFF),  NumberUtils.createNumber("0x7FFFFFFF"));,         assertEquals(Long.valueOf(0x80000000L),    NumberUtils.createNumber("0x80000000"));,         assertEquals(Long.valueOf(0xFFFFFFFFL),    NumberUtils.createNumber("0xFFFFFFFF"));, ,         // Leading zero tests,         assertEquals(Integer.valueOf(0x8000000),   NumberUtils.createNumber("0x08000000"));,         assertEquals(Integer.valueOf(0x7FFFFFFF),  NumberUtils.createNumber("0x007FFFFFFF"));,         assertEquals(Long.valueOf(0x80000000L),    NumberUtils.createNumber("0x080000000"));,         assertEquals(Long.valueOf(0xFFFFFFFFL),    NumberUtils.createNumber("0x00FFFFFFFF"));, ,         assertEquals(Long.valueOf(0x800000000L),        NumberUtils.createNumber("0x800000000"));,         assertEquals(Long.valueOf(0x8000000000L),       NumberUtils.createNumber("0x8000000000"));,         assertEquals(Long.valueOf(0x80000000000L),      NumberUtils.createNumber("0x80000000000"));,         assertEquals(Long.valueOf(0x800000000000L),     NumberUtils.createNumber("0x800000000000"));,         assertEquals(Long.valueOf(0x8000000000000L),    NumberUtils.createNumber("0x8000000000000"));,         assertEquals(Long.valueOf(0x80000000000000L),   NumberUtils.createNumber("0x80000000000000"));,         assertEquals(Long.valueOf(0x800000000000000L),  NumberUtils.createNumber("0x800000000000000"));,         assertEquals(Long.valueOf(0x7FFFFFFFFFFFFFFFL), NumberUtils.createNumber("0x7FFFFFFFFFFFFFFF"));,         // N.B. Cannot use a hex constant such as 0x8000000000000000L here as that is interpreted as a negative long,         assertEquals(new BigInteger("8000000000000000", 16), NumberUtils.createNumber("0x8000000000000000"));,         assertEquals(new BigInteger("FFFFFFFFFFFFFFFF", 16), NumberUtils.createNumber("0xFFFFFFFFFFFFFFFF"));, ,         // Leading zero tests,         assertEquals(Long.valueOf(0x80000000000000L),   NumberUtils.createNumber("0x00080000000000000"));,         assertEquals(Long.valueOf(0x800000000000000L),  NumberUtils.createNumber("0x0800000000000000"));,         assertEquals(Long.valueOf(0x7FFFFFFFFFFFFFFFL), NumberUtils.createNumber("0x07FFFFFFFFFFFFFFF"));,         // N.B. Cannot use a hex constant such as 0x8000000000000000L here as that is interpreted as a negative long,         assertEquals(new BigInteger("8000000000000000", 16), NumberUtils.createNumber("0x00008000000000000000"));,         assertEquals(new BigInteger("FFFFFFFFFFFFFFFF", 16), NumberUtils.createNumber("0x0FFFFFFFFFFFFFFFF"));,     }],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/math/NumberUtilsTest.java,testMaxDouble,784-784,[            NumberUtils.max(d);],,
CORRECTNESS,NP_NULL_PARAM_DEREF_NONVIRTUAL,org/apache/commons/lang3/math/NumberUtilsTest.java,testMaxByte_nullArray,742-742,[        NumberUtils.max((byte[]) null);],,
CORRECTNESS,NP_NULL_PARAM_DEREF_NONVIRTUAL,org/apache/commons/lang3/math/NumberUtilsTest.java,testMaxDouble,784-784,[            NumberUtils.max(d);],,
CORRECTNESS,NP_NULL_PARAM_DEREF_NONVIRTUAL,org/apache/commons/lang3/math/NumberUtilsTest.java,testMaxDouble_nullArray,772-772,[        NumberUtils.max((double[]) null);],,
CORRECTNESS,NP_NULL_PARAM_DEREF_NONVIRTUAL,org/apache/commons/lang3/math/NumberUtilsTest.java,testMaxFloat_nullArray,816-816,[        NumberUtils.max((float[]) null);],,
CORRECTNESS,NP_NULL_PARAM_DEREF_NONVIRTUAL,org/apache/commons/lang3/math/NumberUtilsTest.java,testMaxInt_nullArray,682-682,[        NumberUtils.max((int[]) null);],,
CORRECTNESS,NP_NULL_PARAM_DEREF_NONVIRTUAL,org/apache/commons/lang3/math/NumberUtilsTest.java,testMaxLong_nullArray,652-652,[        NumberUtils.max((long[]) null);],,
CORRECTNESS,NP_NULL_PARAM_DEREF_NONVIRTUAL,org/apache/commons/lang3/math/NumberUtilsTest.java,testMaxShort_nullArray,712-712,[        NumberUtils.max((short[]) null);],,
CORRECTNESS,NP_NULL_PARAM_DEREF_NONVIRTUAL,org/apache/commons/lang3/math/NumberUtilsTest.java,testMinByte_nullArray,560-560,[        NumberUtils.min((byte[]) null);],,
CORRECTNESS,NP_NULL_PARAM_DEREF_NONVIRTUAL,org/apache/commons/lang3/math/NumberUtilsTest.java,testMinDouble_nullArray,586-586,[        NumberUtils.min((double[]) null);],,
CORRECTNESS,NP_NULL_PARAM_DEREF_NONVIRTUAL,org/apache/commons/lang3/math/NumberUtilsTest.java,testMinFloat_nullArray,619-619,[        NumberUtils.min((float[]) null);],,
CORRECTNESS,NP_NULL_PARAM_DEREF_NONVIRTUAL,org/apache/commons/lang3/math/NumberUtilsTest.java,testMinInt_nullArray,508-508,[        NumberUtils.min((int[]) null);],,
CORRECTNESS,NP_NULL_PARAM_DEREF_NONVIRTUAL,org/apache/commons/lang3/math/NumberUtilsTest.java,testMinLong_nullArray,482-482,[        NumberUtils.min((long[]) null);],,
CORRECTNESS,NP_NULL_PARAM_DEREF_NONVIRTUAL,org/apache/commons/lang3/math/NumberUtilsTest.java,testMinShort_nullArray,534-534,[        NumberUtils.min((short[]) null);],,
STYLE,RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT,org/apache/commons/lang3/mutable/MutableBooleanTest.java,testCompareToNull,46-46,[        mutBool.compareTo(null);],,
STYLE,RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT,org/apache/commons/lang3/mutable/MutableBooleanTest.java,testConstructorNull,64-64,[        new MutableBoolean(null);],,
STYLE,UC_USELESS_OBJECT,org/apache/commons/lang3/mutable/MutableBooleanTest.java,testSetNull,118-118,[        final MutableBoolean mutBool = new MutableBoolean(false);],,
STYLE,UC_USELESS_VOID_METHOD,org/apache/commons/lang3/mutable/MutableBooleanTest.java,testSetNull,120-120,[    }],,
STYLE,RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT,org/apache/commons/lang3/mutable/MutableByteTest.java,testCompareToNull,116-116,[        mutNum.compareTo(null);],,
STYLE,RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT,org/apache/commons/lang3/mutable/MutableDoubleTest.java,testCompareToNull,128-128,[        mutNum.compareTo(null);],,
STYLE,RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT,org/apache/commons/lang3/mutable/MutableFloatTest.java,testCompareToNull,128-128,[        mutNum.compareTo(null);],,
STYLE,RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT,org/apache/commons/lang3/mutable/MutableIntTest.java,testCompareToNull,123-123,[        mutNum.compareTo(null);],,
STYLE,RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT,org/apache/commons/lang3/mutable/MutableLongTest.java,testCompareToNull,116-116,[        mutNum.compareTo(null);],,
CORRECTNESS,RC_REF_COMPARISON,org/apache/commons/lang3/mutable/MutableObjectTest.java,testConstructors,36-36,[        assertSame(i, new MutableObject<Integer>(i).getValue());],,
STYLE,RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT,org/apache/commons/lang3/mutable/MutableShortTest.java,testCompareTo,109-109,[            mutNum.compareTo(null);],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC,org/apache/commons/lang3/reflect/TypeUtilsTest.java,,797-797,[    public class GClass<T extends BClass<? extends T> & AInterface<AInterface<? super T>>> {],,
MALICIOUS_CODE,DP_DO_INSIDE_DO_PRIVILEGED,org/apache/commons/lang3/reflect/FieldUtils.java,getDeclaredField,174-174,[                    field.setAccessible(true);],,
MALICIOUS_CODE,DP_DO_INSIDE_DO_PRIVILEGED,org/apache/commons/lang3/reflect/FieldUtils.java,getField,108-108,[                        field.setAccessible(true);],,
MALICIOUS_CODE,DP_DO_INSIDE_DO_PRIVILEGED,org/apache/commons/lang3/reflect/FieldUtils.java,readField,383-383,[            field.setAccessible(true);],,
MALICIOUS_CODE,DP_DO_INSIDE_DO_PRIVILEGED,org/apache/commons/lang3/reflect/FieldUtils.java,removeFinalModifier,687-687,[                    modifiersField.setAccessible(true);],,removeFinalModifier,693-693,[                        modifiersField.setAccessible(false);],,
MALICIOUS_CODE,DP_DO_INSIDE_DO_PRIVILEGED,org/apache/commons/lang3/reflect/FieldUtils.java,writeField,645-645,[            field.setAccessible(true);],,
BAD_PRACTICE,ISC_INSTANTIATE_STATIC_CLASS,org/apache/commons/lang3/reflect/FieldUtilsTest.java,testConstructor,61-61,[        assertNotNull(new FieldUtils());],,
CORRECTNESS,NP_NULL_PARAM_DEREF_NONVIRTUAL,org/apache/commons/lang3/reflect/FieldUtilsTest.java,testGetDeclaredFieldAccessIllegalArgumentException1,190-190,[        FieldUtils.getDeclaredField(null, "none");],,
CORRECTNESS,NP_NULL_PARAM_DEREF_NONVIRTUAL,org/apache/commons/lang3/reflect/FieldUtilsTest.java,testGetDeclaredFieldAccessIllegalArgumentException2,195-195,[        FieldUtils.getDeclaredField(PublicChild.class, null);],,
CORRECTNESS,NP_NULL_PARAM_DEREF_NONVIRTUAL,org/apache/commons/lang3/reflect/FieldUtilsTest.java,testGetDeclaredFieldForceAccessIllegalArgumentException1,229-229,[        FieldUtils.getDeclaredField(null, "none", true);],,
CORRECTNESS,NP_NULL_PARAM_DEREF_NONVIRTUAL,org/apache/commons/lang3/reflect/FieldUtilsTest.java,testGetDeclaredFieldForceAccessIllegalArgumentException2,234-234,[        FieldUtils.getDeclaredField(PublicChild.class, null, true);],,
CORRECTNESS,NP_NULL_PARAM_DEREF_NONVIRTUAL,org/apache/commons/lang3/reflect/FieldUtilsTest.java,testReadDeclaredNamedField,604-604,[            FieldUtils.readDeclaredField(publicChild, null);],,
CORRECTNESS,NP_NULL_PARAM_DEREF_NONVIRTUAL,org/apache/commons/lang3/reflect/FieldUtilsTest.java,testReadDeclaredNamedField,625-625,[            FieldUtils.readDeclaredField(null, "none");],,
CORRECTNESS,NP_NULL_PARAM_DEREF_NONVIRTUAL,org/apache/commons/lang3/reflect/FieldUtilsTest.java,testReadDeclaredNamedFieldForceAccess,688-688,[            FieldUtils.readDeclaredField(publicChild, null, true);],,
CORRECTNESS,NP_NULL_PARAM_DEREF_NONVIRTUAL,org/apache/commons/lang3/reflect/FieldUtilsTest.java,testReadDeclaredNamedFieldForceAccess,709-709,[            FieldUtils.readDeclaredField(null, "none", true);],,
CORRECTNESS,NP_NULL_PARAM_DEREF_NONVIRTUAL,org/apache/commons/lang3/reflect/FieldUtilsTest.java,testReadField,444-444,[            FieldUtils.readField(null, publicChild);],,
CORRECTNESS,NP_NULL_PARAM_DEREF_NONVIRTUAL,org/apache/commons/lang3/reflect/FieldUtilsTest.java,testReadFieldForceAccess,475-475,[            FieldUtils.readField(null, publicChild, true);],,
CORRECTNESS,NP_NULL_PARAM_DEREF_NONVIRTUAL,org/apache/commons/lang3/reflect/FieldUtilsTest.java,testReadNamedField,510-510,[            FieldUtils.readField((Object) null, "none");],,
CORRECTNESS,NP_NULL_PARAM_DEREF_NONVIRTUAL,org/apache/commons/lang3/reflect/FieldUtilsTest.java,testReadNamedFieldForceAccess,594-594,[            FieldUtils.readField((Object) null, "none", true);],,
CORRECTNESS,NP_NULL_PARAM_DEREF_NONVIRTUAL,org/apache/commons/lang3/reflect/FieldUtilsTest.java,testReadStaticFieldForceAccessIllegalArgumentException1,273-273,[        FieldUtils.readStaticField(null, true);],,
CORRECTNESS,NP_NULL_PARAM_DEREF_NONVIRTUAL,org/apache/commons/lang3/reflect/FieldUtilsTest.java,testReadStaticFieldIllegalArgumentException1,254-254,[        FieldUtils.readStaticField(null);],,
PERFORMANCE,UPM_UNCALLED_PRIVATE_METHOD,org/apache/commons/lang3/reflect/MethodUtilsTest.java,privateStuff,92-92,[        }],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/reflect/TypeLiteralTest.java,,31-31,[        assertTrue(TypeUtils.equals(String.class, new TypeLiteral<String>() {}.value));],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/reflect/TypeLiteralTest.java,,48-48,[        assertNotEquals(new TypeLiteral<String>() {}, new TypeLiteral<List<String>>() {});],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/reflect/TypeLiteralTest.java,,54-54,[        new TypeLiteral() {};],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/reflect/TypeLiteralTest.java,,33-33,[            new TypeLiteral<List<String>>() {}.value));],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/reflect/TypeLiteralTest.java,,38-38,[        final Typed<String> stringType = new TypeLiteral<String>() {};],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/reflect/TypeLiteralTest.java,,40-40,[        final Typed<List<String>> listOfStringType = new TypeLiteral<List<String>>() {};],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/reflect/TypeLiteralTest.java,,46-46,[        assertEquals(new TypeLiteral<String>() {}, new TypeLiteral<String>() {});],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/reflect/TypeLiteralTest.java,,46-46,[        assertEquals(new TypeLiteral<String>() {}, new TypeLiteral<String>() {});],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/reflect/TypeLiteralTest.java,,47-47,[        assertEquals(new TypeLiteral<List<String>>() {}, new TypeLiteral<List<String>>() {});],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/reflect/TypeLiteralTest.java,,47-47,[        assertEquals(new TypeLiteral<List<String>>() {}, new TypeLiteral<List<String>>() {});],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/reflect/TypeLiteralTest.java,,48-48,[        assertNotEquals(new TypeLiteral<String>() {}, new TypeLiteral<List<String>>() {});],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/reflect/TypeUtilsTest.java,testIsAssignable,417-417,[        oa = new Integer[0];],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/reflect/TypeUtilsTest.java,testGetTypeArguments,496-496,[        final Collection<Integer> col = Arrays.asList(new Integer[0]);],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/reflect/TypeUtilsTest.java,testIsAssignable,389-389,[        final Integer inte = in;],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/reflect/TypeUtilsTest.java,testIsAssignable,381-381,[        lo = Integer.valueOf(0);],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/reflect/TypeUtilsTest.java,testIsAssignable,397-397,[        final Serializable ser = 1;],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/reflect/TypeUtilsTest.java,testTypesSatisfyVariables,527-527,[        final Integer max = TypeUtilsTest.<Integer> stub();],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/reflect/TypeUtilsTest.java,testIsAssignable,156-156,[        list0 = list6;],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/reflect/TypeUtilsTest.java,testIsAssignable,178-178,[        list1 = (List<Object>) list6;],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/reflect/TypeUtilsTest.java,testIsAssignable,309-309,[        list10 = (List<? super Object>[]) list13;],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/reflect/TypeUtilsTest.java,testIsAssignable,319-319,[        list11 = (List<String>[]) list13;],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/reflect/TypeUtilsTest.java,testIsAssignable,325-325,[        list12 = (List<? extends String>[]) list13;],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/reflect/TypeUtilsTest.java,testIsAssignable,210-210,[        list3 = (List<? super Object>) list6;],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/reflect/TypeUtilsTest.java,testIsAssignable,220-220,[        list4 = (List<String>) list6;],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/reflect/TypeUtilsTest.java,testIsAssignable,226-226,[        list5 = (List<? extends String>) list6;],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/reflect/TypeUtilsTest.java,testIsAssignable,255-255,[        list7 = list13;],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/reflect/TypeUtilsTest.java,testIsAssignable,277-277,[        list8 = (List<Object>[]) list13;],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/reflect/TypeUtilsTest.java,testIsAssignable,295-295,[        list9 = list13;],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/reflect/TypeUtilsTest.java,testIsAssignable,379-379,[        lo = in;],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/reflect/TypeUtilsTest.java,testIsAssignable,409-409,[        intWildcardComparable = ia;],,
STYLE,ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD,org/apache/commons/lang3/reflect/TypeUtilsTest.java,testIsAssignable,394-394,[        intComparable = 1;],,
STYLE,ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD,org/apache/commons/lang3/reflect/TypeUtilsTest.java,testIsInstance,468-468,[        intComparable = 1;],,
PERFORMANCE,SS_SHOULD_BE_STATIC,org/apache/commons/lang3/reflect/testbed/Parent.java,,26-26,[    @SuppressWarnings("unused")],,
PERFORMANCE,URF_UNREAD_FIELD,org/apache/commons/lang3/reflect/testbed/Parent.java,,25-25,[    int i = 0;],,
STYLE,URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD,org/apache/commons/lang3/reflect/testbed/Parent.java,,24-24,[    protected boolean b = false;],,
STYLE,URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD,org/apache/commons/lang3/reflect/testbed/Parent.java,,23-23,[    public String s = "s";],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/text/CompositeFormatTest.java,,39-49,[        final Format parser = new Format() {,             private static final long serialVersionUID = 1L;, ,             @Override,             public StringBuffer format(final Object obj, final StringBuffer toAppendTo, final FieldPosition pos) {,                 throw new UnsupportedOperationException("Not implemented");,             }, ,             @Override,             public Object parseObject(final String source, final ParsePosition pos) {,                 return null;    // do nothing],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/text/CompositeFormatTest.java,,53-63,[        final Format formatter = new Format() {,             private static final long serialVersionUID = 1L;, ,             @Override,             public StringBuffer format(final Object obj, final StringBuffer toAppendTo, final FieldPosition pos) {,                 return null;    // do nothing,             }, ,             @Override,             public Object parseObject(final String source, final ParsePosition pos) {,                 throw new UnsupportedOperationException("Not implemented");],,
I18N,DM_CONVERT_CASE,org/apache/commons/lang3/text/ExtendedMessageFormatTest.java,testExtendedAndBuiltInFormats,126-126,[            expected.append(args[0].toString().toUpperCase());],,
I18N,DM_CONVERT_CASE,org/apache/commons/lang3/text/ExtendedMessageFormatTest.java,format,401-401,[            return toAppendTo.append(((String)obj).toLowerCase());],,
I18N,DM_CONVERT_CASE,org/apache/commons/lang3/text/ExtendedMessageFormatTest.java,format,415-415,[            return toAppendTo.append(((String)obj).toUpperCase());],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/text/StrBuilderAppendInsertTest.java,,756-767,[        final StrBuilder sb = new StrBuilder() {,             private static final long serialVersionUID = 1L;, ,             @Override,             public StrBuilder append(final StrBuilder str, final int startIndex, final int length) {,                 count[0]++;,                 return super.append(str, startIndex, length);,             },             @Override,             public StrBuilder appendNewLine() {,                 count[1]++;,                 return super.appendNewLine();],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/text/StrBuilderAppendInsertTest.java,,780-791,[        final StrBuilder sb = new StrBuilder() {,             private static final long serialVersionUID = 1L;, ,             @Override,             public StrBuilder append(final char[] str) {,                 count[0]++;,                 return super.append(str);,             },             @Override,             public StrBuilder appendNewLine() {,                 count[1]++;,                 return super.appendNewLine();],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/text/StrBuilderAppendInsertTest.java,,804-815,[        final StrBuilder sb = new StrBuilder() {,             private static final long serialVersionUID = 1L;, ,             @Override,             public StrBuilder append(final char[] str, final int startIndex, final int length) {,                 count[0]++;,                 return super.append(str, startIndex, length);,             },             @Override,             public StrBuilder appendNewLine() {,                 count[1]++;,                 return super.appendNewLine();],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/text/StrBuilderAppendInsertTest.java,,550-561,[        final StrBuilder sb = new StrBuilder() {,             private static final long serialVersionUID = 1L;, ,             @Override,             public StrBuilder append(final String str) {,                 count[0]++;,                 return super.append(str);,             },             @Override,             public StrBuilder appendNewLine() {,                 count[1]++;,                 return super.appendNewLine();],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/text/StrBuilderAppendInsertTest.java,,588-599,[        final StrBuilder sb = new StrBuilder() {,             private static final long serialVersionUID = 1L;, ,             @Override,             public StrBuilder append(final String str) {,                 count[0]++;,                 return super.append(str);,             },             @Override,             public StrBuilder appendNewLine() {,                 count[1]++;,                 return super.appendNewLine();],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/text/StrBuilderAppendInsertTest.java,,612-623,[        final StrBuilder sb = new StrBuilder() {,             private static final long serialVersionUID = 1L;, ,             @Override,             public StrBuilder append(final String str, final int startIndex, final int length) {,                 count[0]++;,                 return super.append(str, startIndex, length);,             },             @Override,             public StrBuilder appendNewLine() {,                 count[1]++;,                 return super.appendNewLine();],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/text/StrBuilderAppendInsertTest.java,,636-647,[        final StrBuilder sb = new StrBuilder() {,             private static final long serialVersionUID = 1L;, ,             @Override,             public StrBuilder append(final StringBuffer str) {,                 count[0]++;,                 return super.append(str);,             },             @Override,             public StrBuilder appendNewLine() {,                 count[1]++;,                 return super.appendNewLine();],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/text/StrBuilderAppendInsertTest.java,,660-671,[        final StrBuilder sb = new StrBuilder() {,             private static final long serialVersionUID = 1L;, ,             @Override,             public StrBuilder append(final StringBuilder str) {,                 count[0]++;,                 return super.append(str);,             },             @Override,             public StrBuilder appendNewLine() {,                 count[1]++;,                 return super.appendNewLine();],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/text/StrBuilderAppendInsertTest.java,,684-695,[        final StrBuilder sb = new StrBuilder() {,             private static final long serialVersionUID = 1L;, ,             @Override,             public StrBuilder append(final StringBuffer str, final int startIndex, final int length) {,                 count[0]++;,                 return super.append(str, startIndex, length);,             },             @Override,             public StrBuilder appendNewLine() {,                 count[1]++;,                 return super.appendNewLine();],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/text/StrBuilderAppendInsertTest.java,,708-719,[        final StrBuilder sb = new StrBuilder() {,             private static final long serialVersionUID = 1L;, ,             @Override,             public StrBuilder append(final StringBuilder str, final int startIndex, final int length) {,                 count[0]++;,                 return super.append(str, startIndex, length);,             },             @Override,             public StrBuilder appendNewLine() {,                 count[1]++;,                 return super.appendNewLine();],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/text/StrBuilderAppendInsertTest.java,,732-743,[        final StrBuilder sb = new StrBuilder() {,             private static final long serialVersionUID = 1L;, ,             @Override,             public StrBuilder append(final StrBuilder str) {,                 count[0]++;,                 return super.append(str);,             },             @Override,             public StrBuilder appendNewLine() {,                 count[1]++;,                 return super.appendNewLine();],,
STYLE,DMI_USELESS_SUBSTRING,org/apache/commons/lang3/text/StrBuilderTest.java,testSubstringInt,1234-1234,[        assertEquals ("hello goodbye".substring(0), sb.substring(0));],,
CORRECTNESS,EC_BAD_ARRAY_COMPARE,org/apache/commons/lang3/text/StrBuilderTest.java,testToCharArray,472-472,[        assertEquals(ArrayUtils.EMPTY_CHAR_ARRAY, sb.toCharArray());],,
CORRECTNESS,EC_BAD_ARRAY_COMPARE,org/apache/commons/lang3/text/StrBuilderTest.java,testToCharArrayIntInt,487-487,[        assertEquals(ArrayUtils.EMPTY_CHAR_ARRAY, sb.toCharArray(0, 0));],,
CORRECTNESS,RANGE_ARRAY_LENGTH,org/apache/commons/lang3/text/StrBuilderTest.java,testAsReader,1739-1739,[            reader.read(array, 0, -1);],,
CORRECTNESS,RANGE_ARRAY_LENGTH,org/apache/commons/lang3/text/StrBuilderTest.java,testAsReader,1743-1743,[            reader.read(array, 100, 1);],,
CORRECTNESS,RANGE_ARRAY_LENGTH,org/apache/commons/lang3/text/StrBuilderTest.java,testAsReader,1747-1747,[            reader.read(array, 0, 100);],,
CORRECTNESS,RANGE_ARRAY_LENGTH,org/apache/commons/lang3/text/StrBuilderTest.java,testAsReader,1751-1751,[            reader.read(array, Integer.MAX_VALUE, Integer.MAX_VALUE);],,
CORRECTNESS,RANGE_ARRAY_OFFSET,org/apache/commons/lang3/text/StrBuilderTest.java,testAsReader,1735-1735,[            reader.read(array, -1, 0);],,
CORRECTNESS,RANGE_ARRAY_OFFSET,org/apache/commons/lang3/text/StrBuilderTest.java,testAsReader,1743-1743,[            reader.read(array, 100, 1);],,
CORRECTNESS,RANGE_ARRAY_OFFSET,org/apache/commons/lang3/text/StrBuilderTest.java,testAsReader,1751-1751,[            reader.read(array, Integer.MAX_VALUE, Integer.MAX_VALUE);],,
BAD_PRACTICE,RR_NOT_CHECKED,org/apache/commons/lang3/text/StrBuilderTest.java,testAsReader,1735-1735,[            reader.read(array, -1, 0);],,testAsReader,1739-1739,[            reader.read(array, 0, -1);],,testAsReader,1743-1743,[            reader.read(array, 100, 1);],,testAsReader,1747-1747,[            reader.read(array, 0, 100);],,testAsReader,1751-1751,[            reader.read(array, Integer.MAX_VALUE, Integer.MAX_VALUE);],,
STYLE,RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT,org/apache/commons/lang3/text/StrBuilderTest.java,testCharAt,397-397,[            sb.charAt(0);],,testCharAt,403-403,[            sb.charAt(-1);],,testCharAt,413-413,[            sb.charAt(-1);],,testCharAt,419-419,[            sb.charAt(3);],,
STYLE,RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT,org/apache/commons/lang3/text/StrBuilderTest.java,testSubSequenceIntInt,1199-1199,[            sb.subSequence(-1, 5);],,testSubSequenceIntInt,1205-1205,[            sb.subSequence(2, -1);],,testSubSequenceIntInt,1211-1211,[            sb.subSequence(2, sb.length() + 1);],,testSubSequenceIntInt,1217-1217,[            sb.subSequence(3, 2);],,
STYLE,RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT,org/apache/commons/lang3/text/StrBuilderTest.java,testSubstringInt,1236-1236,[            sb.substring(-1);],,testSubstringInt,1241-1241,[            sb.substring(15);],,
STYLE,RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT,org/apache/commons/lang3/text/StrBuilderTest.java,testSubstringIntInt,1259-1259,[            sb.substring(-1, 5);],,testSubstringIntInt,1264-1264,[            sb.substring(15, 20);],,
STYLE,RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT,org/apache/commons/lang3/text/StrBuilderTest.java,testToCharArrayIntInt,506-506,[            sb.toCharArray(-1, 5);],,testToCharArrayIntInt,512-512,[            sb.toCharArray(6, 5);],,
PERFORMANCE,SBSC_USE_STRINGBUFFER_CONCATENATION,org/apache/commons/lang3/text/StrBuilderTest.java,testReadFromCharBuffer,131-131,[            s += Integer.toString(i);],,
PERFORMANCE,SBSC_USE_STRINGBUFFER_CONCATENATION,org/apache/commons/lang3/text/StrBuilderTest.java,testReadFromReadable,152-152,[            s += Integer.toString(i);],,
PERFORMANCE,SBSC_USE_STRINGBUFFER_CONCATENATION,org/apache/commons/lang3/text/StrBuilderTest.java,testReadFromReader,110-110,[            s += Integer.toString(i);],,
BAD_PRACTICE,SR_NOT_CHECKED,org/apache/commons/lang3/text/StrBuilderTest.java,testAsReader,1760-1760,[        reader.skip(9);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/text/StrLookupTest.java,testMapLookup_nullMap,71-71,[        assertEquals(null, StrLookup.mapLookup(map).lookup(null));],,
STYLE,RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT,org/apache/commons/lang3/text/StrLookupTest.java,testSystemProperiesLookup,49-49,[            StrLookup.systemPropertiesLookup().lookup(null);],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/text/StrSubstitutorTest.java,,409-416,[        final StrSubstitutor sub = new StrSubstitutor(map) {,             @Override,             protected String resolveVariable(final String variableName, final StrBuilder buf, final int startPos, final int endPos) {,                 assertEquals("name", variableName);,                 assertSame(builder, buf);,                 assertEquals(3, startPos);,                 assertEquals(10, endPos);,                 return "jakarta";],,
BAD_PRACTICE,CN_IDIOM_NO_SUPER_CALL,org/apache/commons/lang3/text/StrTokenizer.java,clone,1077-1079,[            return cloneReset();,         } catch (final CloneNotSupportedException ex) {,             return null;],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/text/StrTokenizerTest.java,,584-587,[        final Object notCloned = new StrTokenizer() {,             @Override,             Object cloneReset() throws CloneNotSupportedException {,                 throw new CloneNotSupportedException("test");],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/text/StrTokenizerTest.java,,845-848,[        final StrTokenizer tkn = new StrTokenizer("a b c d e") {,             @Override,             protected List<String> tokenize(final char[] chars, final int offset, final int count) {,                 return super.tokenize("w x y z".toCharArray(), 2, 5);],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/text/StrTokenizerTest.java,,858-863,[        final StrTokenizer tkn = new StrTokenizer("a b c") {,             @Override,             protected List<String> tokenize(final char[] chars, final int offset, final int count) {,                 final List<String> list = super.tokenize(chars, offset, count);,                 Collections.reverse(list);,                 return list;],,
I18N,DM_CONVERT_CASE,org/apache/commons/lang3/text/WordUtils.java,capitalizeFully,362-362,[        str = str.toLowerCase();],,
BAD_PRACTICE,ISC_INSTANTIATE_STATIC_CLASS,org/apache/commons/lang3/text/WordUtilsTest.java,testConstructor,39-39,[        assertNotNull(new WordUtils());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/commons/lang3/text/WordUtilsTest.java,testInitials_String_charArray,275-275,[        assertEquals(null, WordUtils.initials(null, array));],,
BAD_PRACTICE,ISC_INSTANTIATE_STATIC_CLASS,org/apache/commons/lang3/text/translate/EntityArraysTest.java,testConstructorExists,35-35,[        new EntityArrays();],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java,testUnfinishedEntity,74-74,[            result = neu.translate(input);],,
BAD_PRACTICE,ISC_INSTANTIATE_STATIC_CLASS,org/apache/commons/lang3/time/DateFormatUtilsTest.java,testConstructor,36-36,[        assertNotNull(new DateFormatUtils());],,
STYLE,SF_SWITCH_FALLTHROUGH,org/apache/commons/lang3/time/DateUtils.java,getFragment,1696-1699,[                result += unit.convert(calendar.get(Calendar.HOUR_OF_DAY), TimeUnit.HOURS);,                 //$FALL-THROUGH$,             case Calendar.HOUR_OF_DAY:,                 result += unit.convert(calendar.get(Calendar.MINUTE), TimeUnit.MINUTES);],,getFragment,1699-1702,[                result += unit.convert(calendar.get(Calendar.MINUTE), TimeUnit.MINUTES);,                 //$FALL-THROUGH$,             case Calendar.MINUTE:,                 result += unit.convert(calendar.get(Calendar.SECOND), TimeUnit.SECONDS);],,getFragment,1702-1705,[                result += unit.convert(calendar.get(Calendar.SECOND), TimeUnit.SECONDS);,                 //$FALL-THROUGH$,             case Calendar.SECOND:,                 result += unit.convert(calendar.get(Calendar.MILLISECOND), TimeUnit.MILLISECONDS);],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/commons/lang3/time/DateUtilsTest.java,testParseDateWithLeniency,310-310,[        } catch (final ParseException ex) {}],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/time/DateUtilsTest.java,testParseDateWithLeniency,308-308,[            date = DateUtils.parseDateStrictly(dateStr, parsers);],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/time/DateUtilsTest.java,testSetDays,530-530,[            result = DateUtils.setDays(base, 32);],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/time/DateUtilsTest.java,testSetHours,552-552,[            result = DateUtils.setHours(base, 24);],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/time/DateUtilsTest.java,testSetMilliseconds,618-618,[            result = DateUtils.setMilliseconds(base, 1000);],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/time/DateUtilsTest.java,testSetMinutes,574-574,[            result = DateUtils.setMinutes(base, 60);],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/time/DateUtilsTest.java,testSetMonths,508-508,[            result = DateUtils.setMonths(base, 12);],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/commons/lang3/time/DateUtilsTest.java,testSetSeconds,596-596,[            result = DateUtils.setSeconds(base, 60);],,
BAD_PRACTICE,ISC_INSTANTIATE_STATIC_CLASS,org/apache/commons/lang3/time/DateUtilsTest.java,testConstructor,151-151,[        assertNotNull(new DateUtils());],,
PERFORMANCE,URF_UNREAD_FIELD,org/apache/commons/lang3/time/DateUtilsTest.java,,64-64,[    DateFormat timeZoneDateParser = null;],,
CORRECTNESS,RpC_REPEATED_CONDITIONAL_TEST,org/apache/commons/lang3/time/DurationFormatUtils.java,formatPeriod,338-338,[            if (!Token.containsTokenWithValue(tokens, y) && years != 0) {],,formatPeriod,339-339,[                while (years != 0) {],,
STYLE,ICAST_INTEGER_MULTIPLY_CAST_TO_LONG,org/apache/commons/lang3/time/DurationFormatUtilsTest.java,testFormatDurationWords,109-109,[            text = DurationFormatUtils.formatDurationWords(i * 24 * 60 * 60 * 1000L, false, false);],,
BAD_PRACTICE,ISC_INSTANTIATE_STATIC_CLASS,org/apache/commons/lang3/time/DurationFormatUtilsTest.java,testConstructor,42-42,[        assertNotNull(new DurationFormatUtils());],,
BAD_PRACTICE,RV_RETURN_VALUE_IGNORED_BAD_PRACTICE,org/apache/commons/lang3/time/FastDateFormatTest.java,measureTime,293-293,[            pool.submit(new Runnable() {],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/time/FastDateFormatTest.java,,267-274,[        final long sdfTime= measureTime(formatter, new SimpleDateFormat(pattern) {,                         private static final long serialVersionUID = 1L;  // because SimpleDateFormat is serializable, ,                         @Override,                         public Object parseObject(final String formattedDate) throws ParseException {,                             synchronized(this) {,                                 return super.parse(formattedDate);,                             }],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/commons/lang3/time/FastDateFormatTest.java,,293-311,[            pool.submit(new Runnable() {,                 @Override,                 public void run() {,                     for(int j= 0; j<NROUNDS; ++j) {,                         try {,                             final Date date= new Date();,                             final String formattedDate= formatter.format(date);,                             final long start= System.currentTimeMillis();        ,                             final Object pd= parser.parseObject(formattedDate);,                             totalElapsed.addAndGet(System.currentTimeMillis()-start);,                             if(!date.equals(pd)) {,                                 failures.incrementAndGet();,                             },                         } catch (final Exception e) {,                             failures.incrementAndGet();,                             e.printStackTrace();,                         },                     },                 }                ],,
STYLE,UC_USELESS_CONDITION,org/apache/commons/lang3/time/FastDatePrinter.java,appendTo,870-870,[                    Validate.isTrue(value > -1, "Negative values should not be possible", value);],,
BAD_PRACTICE,BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS,org/apache/commons/lang3/time/FormatCache.java,equals,245-245,[            return Arrays.equals(keys, ((MultipartKey)obj).keys);],,
BAD_PRACTICE,NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT,org/apache/commons/lang3/time/FormatCache.java,equals,245-245,[            return Arrays.equals(keys, ((MultipartKey)obj).keys);],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/commons/lang3/tuple/ImmutableTripleTest.java,testBasic,51-51,[        assertEquals(new Integer(42), triple2.right);],,testBasic,52-52,[        assertEquals(new Integer(42), triple2.getRight());],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/commons/lang3/tuple/TripleTest.java,testTripleOf,46-46,[        assertEquals(new Long(200L), ((ImmutableTriple<Object, String, Long>) triple2).right);],,
