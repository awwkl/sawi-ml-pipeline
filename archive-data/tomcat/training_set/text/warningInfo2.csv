BAD_PRACTICE,NM_CONFUSING,javax/security/auth/message/callback/PasswordValidationCallback.java,getUsername,46-46,[],,getUserName,2385-2385,[            return username;],,
BAD_PRACTICE,NM_CONFUSING,javax/servlet/http/HttpServletRequestWrapper.java,getRequestURI,202-202,[],,getRequestUri,322-322,[            return requestUri;],,
BAD_PRACTICE,NM_CONFUSING,javax/servlet/http/HttpServletResponseWrapper.java,encodeRedirectURL,83-83,[],,encodeRedirectUrl,1128-1128,[        return (encodeRedirectURL(url));],,
BAD_PRACTICE,NM_CONFUSING,javax/servlet/http/HttpServletResponseWrapper.java,encodeURL,74-74,[],,encodeUrl,1176-1176,[        return (encodeURL(url));],,
BAD_PRACTICE,NM_CONFUSING,javax/servlet/jsp/tagext/TagInfo.java,getDisplayName,384-384,[],,getDisplayname,44-44,[        return (this.displayname);],,
BAD_PRACTICE,NM_CONFUSING,javax/servlet/jsp/tagext/TagLibraryInfo.java,getURI,50-50,[],,getUri,159-159,[            return uri;],,
BAD_PRACTICE,NM_CONFUSING,javax/websocket/SendResult.java,isOK,37-37,[],,isOk,153-153,[        return ok;],,
BAD_PRACTICE,NM_CONFUSING,org/apache/catalina/ant/AbstractCatalinaTask.java,getCharset,65-65,[        return (this.charset);],,getCharSet,217-221,[        ParameterParser parser = new ParameterParser();,         parser.setLowerCaseNames(true);,         // Parameter parser can handle null input,         Map<String,String> params = parser.parse(getContentType(), ';');,         return params.get("charset");],,
BAD_PRACTICE,NM_CONFUSING,org/apache/catalina/ant/AbstractCatalinaTask.java,getUrl,93-93,[        return (this.url);],,getURL,689-690,[        try { return _meta.getURL(); },         catch (SQLException e) { handleException(e); throw new AssertionError(); }],,
BAD_PRACTICE,NM_CONFUSING,org/apache/catalina/ant/AbstractCatalinaTask.java,setUsername,111-112,[        this.username = username;,     }],,setUserName,90-91,[        this.userName = userName;,     }],,
STYLE,REC_CATCH_EXCEPTION,org/apache/catalina/ant/AbstractCatalinaTask.java,execute,287-287,[        } catch (Exception e) {],,
I18N,DM_DEFAULT_ENCODING,org/apache/catalina/ant/BaseRedirectorHelperTask.java,openRedirector,250-250,[            redirectOutPrintStream = new PrintStream(redirectOutStream);],,openRedirector,252-252,[            redirectErrPrintStream = new PrintStream(redirectErrStream);],,
BAD_PRACTICE,NM_CONFUSING,org/apache/catalina/ant/BaseRedirectorHelperTask.java,setFailonerror,106-107,[        failOnError = fail;,     }],,setFailOnError,970-971,[        failOnError = b;,     }],,
STYLE,REC_CATCH_EXCEPTION,org/apache/catalina/ant/ValidatorTask.java,execute,105-105,[        } catch (Exception e) {],,
STYLE,REC_CATCH_EXCEPTION,org/apache/catalina/ant/jmx/JMXAccessorConditionBase.java,accessJMXValue,175-175,[        } catch (Exception e) {],,
STYLE,REC_CATCH_EXCEPTION,org/apache/catalina/ant/jmx/JMXAccessorQueryTask.java,bindAttributes,186-186,[            } catch (Exception e) {],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/ant/jmx/JMXAccessorSetTask.java,getMBeanAttributeType,193-193,[        if (attrs != null) {],,
PERFORMANCE,DM_FP_NUMBER_CTOR,org/apache/catalina/ant/jmx/JMXAccessorTask.java,convertStringToType,531-531,[                convertValue = new Double(value);],,
PERFORMANCE,DM_FP_NUMBER_CTOR,org/apache/catalina/ant/jmx/JMXAccessorTask.java,convertStringToType,523-523,[                convertValue = new Float(value);],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/catalina/ant/jmx/JMXAccessorTask.java,convertStringToType,504-504,[                convertValue = new Integer(value);],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/catalina/ant/jmx/JMXAccessorTask.java,convertStringToType,512-512,[                convertValue = new Long(value);],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/authenticator/AuthenticatorBase.java,invoke,472-472,[                if (decodedRequestURI != null &&],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/authenticator/DigestAuthenticator.java,validate,512-512,[                if (query == null) {],,
MT_CORRECTNESS,VO_VOLATILE_INCREMENT,org/apache/catalina/authenticator/DigestAuthenticator.java,nonceCountValid,662-662,[                count++;],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/authenticator/FormAuthenticator.java,matchRequest,499-499,[        if (decodedRequestURI == null) {],,
STYLE,ICAST_INTEGER_MULTIPLY_CAST_TO_LONG,org/apache/catalina/authenticator/SingleSignOn.java,sessionEvent,228-228,[                session.getMaxInactiveInterval() * 1000))],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/authenticator/SingleSignOnEntry.java,findSessions,112-112,[        return (this.sessions);],,
BAD_PRACTICE,NM_CONFUSING,org/apache/catalina/authenticator/SingleSignOnSessionKey.java,getHostName,55-55,[],,getHostname,438-447,[        if ( this.hostname != null ) return hostname;,         else {,             try {,                 if (DO_DNS_LOOKUPS),                     this.hostname = java.net.InetAddress.getByAddress(host).getHostName();,                 else,                     this.hostname = org.apache.catalina.tribes.util.Arrays.toString(host,0,host.length,true);,                 return this.hostname;,             }catch ( IOException x ) {,                 throw new RuntimeException("Unable to parse hostname.",x);],,
BAD_PRACTICE,NM_CONFUSING,org/apache/catalina/authenticator/SingleSignOnSessionKey.java,getSessionId,47-47,[],,getSessionID,114-114,[    public String getSessionID(){ return mSessionID; }],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/catalina/authenticator/SpnegoAuthenticator.java,,232-235,[                new PrivilegedExceptionAction<GSSCredential>() {,                     @Override,                     public GSSCredential run() throws GSSException {,                         return manager.createCredential(null,],,
BAD_PRACTICE,RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN,org/apache/catalina/connector/CometEventImpl.java,setTimeout,125-125,[        if (request.getAttribute(Globals.COMET_TIMEOUT_SUPPORTED_ATTR) ==],,
MALICIOUS_CODE,MS_MUTABLE_COLLECTION_PKGPROTECT,org/apache/catalina/connector/Connector.java,,241-241,[     protected static final HashMap<String,String> replacements =],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/connector/CoyoteAdapter.java,postParseRequest,843-843,[        if (authtype != null) {],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/connector/CoyoteAdapter.java,postParseRequest,837-837,[        if (principal != null) {],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/connector/CoyoteAdapter.java,postParseRequest,975-975,[            if (query != null) {],,
BAD_PRACTICE,SR_NOT_CHECKED,org/apache/catalina/connector/CoyoteReader.java,skip,201-201,[                skip(skip);],,
PERFORMANCE,SS_SHOULD_BE_STATIC,org/apache/catalina/connector/InputBuffer.java,,67-67,[    public final int BYTE_STATE = 2;],,
PERFORMANCE,SS_SHOULD_BE_STATIC,org/apache/catalina/connector/InputBuffer.java,,66-66,[    public final int CHAR_STATE = 1;],,
PERFORMANCE,SS_SHOULD_BE_STATIC,org/apache/catalina/connector/InputBuffer.java,,65-65,[    public final int INITIAL_STATE = 0;],,
I18N,DM_DEFAULT_ENCODING,org/apache/catalina/connector/Request.java,parseParts,2699-2699,[                                postSize += name.getBytes().length;],,
PERFORMANCE,DM_FP_NUMBER_CTOR,org/apache/catalina/connector/Request.java,parseLocalesHeader,3169-3169,[            Double key = new Double(-acceptLanguage.getQuality());  // Reverse the order],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/connector/Request.java,getCookies,1922-1922,[        return cookies;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/catalina/connector/Request.java,readChunkedPostBody,3110-3110,[            return null;],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/connector/Request.java,getPathInfo,2048-2048,[        if (getPathInfo() == null) {],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/connector/Request.java,getPathInfo,1344-1344,[        if (pathInfo == null) {],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/connector/Request.java,convertCookies,2917-2917,[                if (domain!=null)],,
STYLE,UC_USELESS_OBJECT,org/apache/catalina/connector/Request.java,setCharacterEncoding,1579-1579,[        byte buffer[] = new byte[1];],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/connector/Response.java,doIsEncodeable,1534-1534,[            if ((file == null) || !file.startsWith(contextPath)) {],,
STYLE,RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT,org/apache/catalina/connector/Response.java,<clinit>,84-84,[        URL.isSchemeChar('c');],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/catalina/connector/Response.java,,951-954,[            return AccessController.doPrivileged(new PrivilegedAction<String>() {,                 @Override,                 public String run(){,                     return SetCookieSupport.generateHeader(cookie);],,
STYLE,DLS_DEAD_LOCAL_STORE_OF_NULL,org/apache/catalina/core/ApplicationContextFacade.java,doPrivileged,841-841,[            params = null;],,
STYLE,DLS_DEAD_LOCAL_STORE_OF_NULL,org/apache/catalina/core/ApplicationContextFacade.java,invokeMethod,814-814,[            params = null;],,
STYLE,REC_CATCH_EXCEPTION,org/apache/catalina/core/ApplicationContextFacade.java,invokeMethod,810-810,[        } catch (Exception ex){],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/catalina/core/ApplicationContextFacade.java,,861-864,[           return AccessController.doPrivileged(new PrivilegedExceptionAction<Object>(){,                 @Override,                 public Object run() throws IllegalAccessException, InvocationTargetException{,                     return method.invoke(context,  params);],,
STYLE,BC_UNCONFIRMED_CAST_OF_RETURN_VALUE,org/apache/catalina/core/ApplicationDispatcher.java,dispatch,602-602,[                throw (IOException) e;],,
STYLE,BC_UNCONFIRMED_CAST_OF_RETURN_VALUE,org/apache/catalina/core/ApplicationDispatcher.java,forward,315-315,[                throw (IOException) e;],,
STYLE,BC_UNCONFIRMED_CAST_OF_RETURN_VALUE,org/apache/catalina/core/ApplicationDispatcher.java,include,520-520,[                throw (IOException) e;],,
BAD_PRACTICE,BIT_SIGNED_CHECK,org/apache/catalina/core/ApplicationFilterFactory.java,matchDispatcher,323-323,[                if ((filterMap.getDispatcherMapping() & FilterMap.FORWARD) > 0) {],,
BAD_PRACTICE,BIT_SIGNED_CHECK,org/apache/catalina/core/ApplicationFilterFactory.java,matchDispatcher,328-328,[                if ((filterMap.getDispatcherMapping() & FilterMap.INCLUDE) > 0) {],,
BAD_PRACTICE,BIT_SIGNED_CHECK,org/apache/catalina/core/ApplicationFilterFactory.java,matchDispatcher,333-333,[                if ((filterMap.getDispatcherMapping() & FilterMap.REQUEST) > 0) {],,
BAD_PRACTICE,BIT_SIGNED_CHECK,org/apache/catalina/core/ApplicationFilterFactory.java,matchDispatcher,338-338,[                if ((filterMap.getDispatcherMapping() & FilterMap.ERROR) > 0) {],,
BAD_PRACTICE,BIT_SIGNED_CHECK,org/apache/catalina/core/ApplicationFilterFactory.java,matchDispatcher,343-343,[                if ((filterMap.getDispatcherMapping() & FilterMap.ASYNC) > 0) {],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/catalina/core/ApplicationFilterFactory.java,createFilterChain,180-180,[                } catch (Exception e) {],,
MT_CORRECTNESS,LI_LAZY_INIT_STATIC,org/apache/catalina/core/ApplicationFilterFactory.java,getInstance,54-55,[        if (factory == null) {,             factory = new ApplicationFilterFactory();],,
STYLE,REC_CATCH_EXCEPTION,org/apache/catalina/core/ApplicationFilterFactory.java,createFilterChain,180-180,[                } catch (Exception e) {],,
STYLE,BC_VACUOUS_INSTANCEOF,org/apache/catalina/core/ApplicationHttpRequest.java,getParameter,372-372,[        else if (value instanceof String[])],,
STYLE,BC_VACUOUS_INSTANCEOF,org/apache/catalina/core/ApplicationHttpRequest.java,getParameterValues,420-420,[        else if (value instanceof String[])],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/catalina/core/ApplicationHttpRequest.java,getParameterValues,419-419,[            return null;],,
PERFORMANCE,WMI_WRONG_MAP_ITERATOR,org/apache/catalina/core/ApplicationHttpRequest.java,mergeParameters,906-906,[                queryParameters.put(key, parameters.get(key));],,
BAD_PRACTICE,NM_CONFUSING,org/apache/catalina/core/ApplicationPushBuilder.java,getEtag,216-216,[],,getETag,65-77,[        if (weakETag == null) {,             synchronized (this) {,                 if (weakETag == null) {,                     long contentLength = getContentLength();,                     long lastModified = getLastModified();,                     if ((contentLength >= 0) || (lastModified >= 0)) {,                         weakETag = "W/\"" + contentLength + "-" +,                                    lastModified + "\"";,                     },                 },             },         },         return weakETag;],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/catalina/core/AprLifecycleListener.java,,76-76,[    protected static String FIPSMode = "off"; // default off, valid only when SSLEngine="on"],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/catalina/core/AprLifecycleListener.java,,75-75,[    protected static String SSLEngine = "on"; //default on],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/catalina/core/AprLifecycleListener.java,,77-77,[    protected static String SSLRandomSeed = "builtin";],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/catalina/core/AprLifecycleListener.java,,80-80,[    protected static boolean aprAvailable = false;],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/catalina/core/AprLifecycleListener.java,,79-79,[    protected static boolean aprInitialized = false;],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/catalina/core/AprLifecycleListener.java,,81-81,[    protected static boolean fipsModeActive = false;],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/catalina/core/AprLifecycleListener.java,,78-78,[    protected static boolean sslInitialized = false;],,
STYLE,ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD,org/apache/catalina/core/AprLifecycleListener.java,<init>,112-112,[        instanceCreated = true;],,
STYLE,ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD,org/apache/catalina/core/AprLifecycleListener.java,setFIPSMode,386-386,[            AprLifecycleListener.FIPSMode = FIPSMode;],,
STYLE,ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD,org/apache/catalina/core/AprLifecycleListener.java,setSSLEngine,354-354,[            AprLifecycleListener.SSLEngine = SSLEngine;],,
STYLE,ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD,org/apache/catalina/core/AprLifecycleListener.java,setSSLRandomSeed,370-370,[            AprLifecycleListener.SSLRandomSeed = SSLRandomSeed;],,
STYLE,BC_UNCONFIRMED_CAST_OF_RETURN_VALUE,org/apache/catalina/core/AsyncContextImpl.java,doInternalDispatch,373-373,[                throw (IOException)x.getCause();],,
STYLE,BC_UNCONFIRMED_CAST_OF_RETURN_VALUE,org/apache/catalina/core/AsyncContextImpl.java,doInternalDispatch,370-370,[                throw (ServletException)x.getCause();],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/core/AsyncContextImpl.java,logDebug,476-476,[            if (request.getQueryString() != null) {],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/catalina/core/ContainerBase.java,getMBeanKeyProperties,1254-1254,[                keyProperties.append(containerCount++);],,
MALICIOUS_CODE,DP_DO_INSIDE_DO_PRIVILEGED,org/apache/catalina/core/DefaultInstanceManager.java,lookupFieldResource,579-579,[            field.setAccessible(true);],,lookupFieldResource,581-581,[            field.setAccessible(accessibility);],,
MALICIOUS_CODE,DP_DO_INSIDE_DO_PRIVILEGED,org/apache/catalina/core/DefaultInstanceManager.java,lookupMethodResource,621-621,[            method.setAccessible(true);],,lookupMethodResource,623-623,[            method.setAccessible(accessibility);],,
MALICIOUS_CODE,DP_DO_INSIDE_DO_PRIVILEGED,org/apache/catalina/core/DefaultInstanceManager.java,postConstruct,204-204,[                    postConstruct.setAccessible(true);],,postConstruct,206-206,[                    postConstruct.setAccessible(accessibility);],,
MALICIOUS_CODE,DP_DO_INSIDE_DO_PRIVILEGED,org/apache/catalina/core/DefaultInstanceManager.java,preDestroy,245-245,[                    preDestroy.setAccessible(true);],,preDestroy,247-247,[                    preDestroy.setAccessible(accessibility);],,
PERFORMANCE,DM_STRING_TOSTRING,org/apache/catalina/core/NamingContextListener.java,addResourceLink,1132-1132,[            String key = i.next().toString();],,
STYLE,REC_CATCH_EXCEPTION,org/apache/catalina/core/NamingContextListener.java,constructEnvEntry,906-906,[        } catch (Exception e) {],,
STYLE,REC_CATCH_EXCEPTION,org/apache/catalina/core/NamingContextListener.java,constructEnvEntry,887-909,[            Class<?> clazz = Class.forName(type);,             Constructor<?> c = null;,             try {,                  c = clazz.getConstructor(String.class);,                  return c.newInstance(value);,             } catch (NoSuchMethodException e) {,                 // Ignore,             }, ,             if (value.length() != 1) {,                 return null;,             }, ,             try {,                 c = clazz.getConstructor(char.class);,                 return c.newInstance(Character.valueOf(value.charAt(0)));,             } catch (NoSuchMethodException e) {,                 // Ignore,             },         } catch (Exception e) {,             // Ignore,         },         return null;],,
I18N,DM_DEFAULT_ENCODING,org/apache/catalina/core/StandardContext.java,getDeploymentDescriptor,6197-6197,[        try (BufferedReader br = new BufferedReader(new InputStreamReader(stream))) {],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/core/StandardContext.java,findApplicationListeners,3311-3311,[        return applicationListeners;],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/core/StandardContext.java,findConstraints,3335-3335,[        return (constraints);],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/core/StandardContext.java,getApplicationEventListeners,1175-1175,[        return (applicationEventListenersObjects);],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/core/StandardContext.java,getApplicationLifecycleListeners,1215-1215,[        return (applicationLifecycleListenersObjects);],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/core/StandardContext.java,getJavaVMs,6452-6452,[        return javaVMs;],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/core/StandardContext.java,getNotificationInfo,6341-6341,[        return notificationInfo;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/catalina/core/StandardContext.java,setApplicationEventListeners,1188-1188,[        applicationEventListenersObjects = listeners;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/catalina/core/StandardContext.java,setApplicationLifecycleListeners,1228-1228,[        applicationLifecycleListenersObjects = listeners;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/catalina/core/StandardContext.java,setJavaVMs,6456-6456,[        return this.javaVMs = javaVMs;],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/catalina/core/StandardContext.java,,6466-6466,[        return startTime;],,,5592-5592,[        startTime = 0;],,,5251-5251,[        startTime=System.currentTimeMillis();],,
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,org/apache/catalina/core/StandardContext.java,,184-184,[        urlEncoder = new URLEncoder();],,
BAD_PRACTICE,NM_CONFUSING,org/apache/catalina/core/StandardContext.java,getBaseName,931-931,[        return new ContextName(path, webappVersion).getBaseName();],,getBasename,70-70,[        return basename;],,
BAD_PRACTICE,NM_CONFUSING,org/apache/catalina/core/StandardContext.java,setDisplayName,1653-1657,[        String oldDisplayName = this.displayName;,         this.displayName = displayName;,         support.firePropertyChange("displayName", oldDisplayName,,                                    this.displayName);,     }],,setDisplayname,48-49,[        this.displayname = displayname;,     }],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/catalina/core/StandardContext.java,postWorkDirectory,6094-6094,[                log.warn(sm.getString("standardContext.workCreateException",],,
PERFORMANCE,WMI_WRONG_MAP_ITERATOR,org/apache/catalina/core/StandardContext.java,filterStop,4649-4649,[                ApplicationFilterConfig filterConfig = filterConfigs.get(name);],,
PERFORMANCE,DM_GC,org/apache/catalina/core/StandardHost.java,findReloadedContextMemoryLeaks,745-745,[        System.gc();],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/catalina/core/StandardHostValve.java,throwable,361-361,[                request.setAttribute(RequestDispatcher.ERROR_STATUS_CODE,],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/core/StandardServer.java,findServices,555-555,[        return services;],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/core/StandardService.java,findConnectors,278-278,[        return connectors;],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/core/StandardWrapper.java,getNotificationInfo,1928-1928,[        return notificationInfo;],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/core/StandardWrapper.java,getServletMethods,608-608,[            return DEFAULT_SERVLET_METHODS;],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/catalina/core/StandardWrapper.java,,1634-1634,[        this.multipartConfigElement = multipartConfigElement;],,,1628-1628,[        return multipartConfigElement;],,,1127-1127,[            if (multipartConfigElement == null) {],,,1131-1131,[                    multipartConfigElement =],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/catalina/core/StandardWrapper.java,,514-514,[        String oldServletClass = this.servletClass;],,,515-515,[        this.servletClass = servletClass;],,,516-516,[        support.firePropertyChange("servletClass", oldServletClass,],,,501-501,[        return (this.servletClass);],,,1097-1097,[            if (servletClass == null) {],,,1105-1105,[                servlet = (Servlet) instanceManager.newInstance(servletClass);],,,1109-1109,[                throw new ServletException],,,1139-1139,[            if ((servlet instanceof ContainerServlet) &&],,,1123-1123,[                throw new ServletException],,,1119-1119,[                    log.debug(sm.getString("standardWrapper.instantiate", servletClass), e);],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/catalina/core/StandardWrapper.java,,461-461,[            swallowOutput = ((StandardContext)container).getSwallowOutput();],,,1089-1089,[        if (swallowOutput) {],,,1160-1160,[            if (swallowOutput) {],,,1426-1426,[            if (swallowOutput) {],,,1469-1469,[                if (swallowOutput) {],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/catalina/core/StandardWrapper.java,,462-462,[            unloadDelay = ((StandardContext)container).getUnloadDelay();],,,1408-1408,[            long delay = unloadDelay / 20;],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/catalina/core/StandardWrapper.java,,1623-1623,[        return classLoadTime;],,,1145-1145,[            classLoadTime=(int) (System.currentTimeMillis() -t1);],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/catalina/core/StandardWrapper.java,,1619-1619,[        return loadTime;],,,1158-1158,[            loadTime=System.currentTimeMillis() -t1;],,
MALICIOUS_CODE,MS_FINAL_PKGPROTECT,org/apache/catalina/core/StandardWrapper.java,,275-275,[    protected static Class<?>[] classType = new Class[]{ServletConfig.class};],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/catalina/core/StandardWrapper.java,,85-85,[    protected static final String[] DEFAULT_SERVLET_METHODS = new String[] {],,
MT_CORRECTNESS,NO_NOTIFY_NOT_NOTIFYALL,org/apache/catalina/core/StandardWrapper.java,deallocate,926-926,[            instancePool.notify();],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/catalina/core/StandardWrapper.java,getAllDeclaredMethods,1690-1690,[            return null;],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/core/StandardWrapper.java,getAllDeclaredMethods,1696-1696,[        if (thisMethods == null) {],,
MT_CORRECTNESS,SWL_SLEEP_WITH_LOCK_HELD,org/apache/catalina/core/StandardWrapper.java,unload,1416-1416,[                    Thread.sleep(delay);],,
BAD_PRACTICE,RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN,org/apache/catalina/core/StandardWrapperValve.java,invoke,168-168,[        if (servlet instanceof CometProcessor && request.getAttribute(],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/deploy/NamingResourcesImpl.java,cleanUp,1043-1043,[        if (m != null) {],,
STYLE,DB_DUPLICATE_SWITCH_CLAUSES,org/apache/catalina/filters/CorsFilter.java,decorateCORSProperties,520-528,[            request.setAttribute(,                     CorsFilter.HTTP_REQUEST_ATTRIBUTE_IS_CORS_REQUEST,,                     Boolean.TRUE);,             request.setAttribute(CorsFilter.HTTP_REQUEST_ATTRIBUTE_ORIGIN,,                     request.getHeader(CorsFilter.REQUEST_HEADER_ORIGIN));,             request.setAttribute(,                     CorsFilter.HTTP_REQUEST_ATTRIBUTE_REQUEST_TYPE,,                     corsRequestType.name().toLowerCase());,             break;],,decorateCORSProperties,530-538,[            request.setAttribute(,                     CorsFilter.HTTP_REQUEST_ATTRIBUTE_IS_CORS_REQUEST,,                     Boolean.TRUE);,             request.setAttribute(CorsFilter.HTTP_REQUEST_ATTRIBUTE_ORIGIN,,                     request.getHeader(CorsFilter.REQUEST_HEADER_ORIGIN));,             request.setAttribute(,                     CorsFilter.HTTP_REQUEST_ATTRIBUTE_REQUEST_TYPE,,                     corsRequestType.name().toLowerCase());,             break;],,
STYLE,DB_DUPLICATE_SWITCH_CLAUSES,org/apache/catalina/filters/CorsFilter.java,doFilter,166-167,[            this.handleSimpleCORS(request, response, filterChain);,             break;],,doFilter,170-171,[            this.handleSimpleCORS(request, response, filterChain);,             break;],,
I18N,DM_CONVERT_CASE,org/apache/catalina/filters/CorsFilter.java,checkRequestType,645-645,[                            contentType = contentType.toLowerCase().trim();],,
I18N,DM_CONVERT_CASE,org/apache/catalina/filters/CorsFilter.java,decorateCORSProperties,527-527,[                    corsRequestType.name().toLowerCase());],,decorateCORSProperties,537-537,[                    corsRequestType.name().toLowerCase());],,decorateCORSProperties,547-547,[                    corsRequestType.name().toLowerCase());],,
I18N,DM_CONVERT_CASE,org/apache/catalina/filters/CorsFilter.java,handlePreflightCORS,326-326,[                            CORSRequestType.PRE_FLIGHT.name().toLowerCase()));],,handlePreflightCORS,358-358,[                accessControlRequestHeaders.add(header.trim().toLowerCase());],,
I18N,DM_CONVERT_CASE,org/apache/catalina/filters/CorsFilter.java,parseAndStore,734-734,[                String lowerCase = header.toLowerCase();],,
SECURITY,HRS_REQUEST_PARAMETER_TO_HTTP_HEADER,org/apache/catalina/filters/CorsFilter.java,handlePreflightCORS,406-406,[        response.addHeader(],,
SECURITY,HRS_REQUEST_PARAMETER_TO_HTTP_HEADER,org/apache/catalina/filters/CorsFilter.java,handlePreflightCORS,380-380,[            response.addHeader(],,handlePreflightCORS,392-392,[                response.addHeader(],,
SECURITY,HRS_REQUEST_PARAMETER_TO_HTTP_HEADER,org/apache/catalina/filters/CorsFilter.java,handleSimpleCORS,275-275,[            response.addHeader(],,
MALICIOUS_CODE,MS_MUTABLE_COLLECTION_PKGPROTECT,org/apache/catalina/filters/CorsFilter.java,,1039-1039,[            new HashSet<>(Arrays.asList("PUT", "DELETE", "TRACE", "CONNECT"));],,
MALICIOUS_CODE,MS_MUTABLE_COLLECTION_PKGPROTECT,org/apache/catalina/filters/CorsFilter.java,,1033-1033,[            new HashSet<>(Arrays.asList("OPTIONS", "GET", "HEAD", "POST", "PUT",],,
MALICIOUS_CODE,MS_MUTABLE_COLLECTION_PKGPROTECT,org/apache/catalina/filters/CorsFilter.java,,1076-1076,[            new HashSet<>(Arrays.asList("application/x-www-form-urlencoded",],,
MALICIOUS_CODE,MS_MUTABLE_COLLECTION_PKGPROTECT,org/apache/catalina/filters/CorsFilter.java,,1047-1047,[            new HashSet<>(Arrays.asList("GET", "POST", "HEAD"));],,
MALICIOUS_CODE,MS_MUTABLE_COLLECTION_PKGPROTECT,org/apache/catalina/filters/CorsFilter.java,,1056-1056,[            new HashSet<>(Arrays.asList("Accept", "Accept-Language",],,
MALICIOUS_CODE,MS_MUTABLE_COLLECTION_PKGPROTECT,org/apache/catalina/filters/CorsFilter.java,,1066-1066,[            new HashSet<>(Arrays.asList("Cache-Control", "Content-Language",],,
BAD_PRACTICE,SE_INNER_CLASS,org/apache/catalina/filters/CsrfPreventionFilter.java,,336-343,[            cache = new LinkedHashMap<T,T>() {,                 private static final long serialVersionUID = 1L;,                 @Override,                 protected boolean removeEldestEntry(Map.Entry<T,T> eldest) {,                     if (size() > cacheSize) {,                         return true;,                     },                     return false;],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/filters/ExpiresFilter.java,getExcludedResponseStatusCodesAsInts,1221-1221,[        return excludedResponseStatusCodes;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/catalina/filters/ExpiresFilter.java,setExcludedResponseStatusCodes,1606-1606,[        this.excludedResponseStatusCodes = excludedResponseStatusCodes;],,
STYLE,BC_UNCONFIRMED_CAST,org/apache/catalina/filters/FailedRequestFilter.java,doFilter,59-59,[            ((HttpServletResponse) response)],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/catalina/filters/RemoteIpFilter.java,getDateHeader,501-501,[                } catch (Exception ParseException) {],,
PERFORMANCE,DM_BOXED_PRIMITIVE_TOSTRING,org/apache/catalina/filters/RequestDumperFilter.java,doFilter,111-111,[                Integer.valueOf(request.getContentLength()).toString());],,doFilter,189-189,[                Integer.valueOf(request.getServerPort()).toString());],,doFilter,238-238,[                    Integer.valueOf(hResponse.getStatus()).toString());],,
STYLE,SF_SWITCH_NO_DEFAULT,org/apache/catalina/ha/authenticator/ClusterSingleSignOnListener.java,messageReceived,71-105,[            switch(action) {,             case SingleSignOnMessage.ADD_SESSION:,                 session = getSession(msg.getSessionId(),,                                      msg.getContextName());,                 if (session != null),                     clusterSSO.associateLocal(msg.getSsoId(), session);,                 break;,             case SingleSignOnMessage.DEREGISTER_SESSION:,                 session = getSession(msg.getSessionId(),,                                      msg.getContextName());,                 if (session != null),                     clusterSSO.deregisterLocal(msg.getSsoId(), session);,                 break;,             case SingleSignOnMessage.LOGOUT_SESSION:,                 clusterSSO.deregisterLocal(msg.getSsoId());,                 break;,             case SingleSignOnMessage.REGISTER_SESSION:,                 if (msg.getPrincipal() != null) {,                     principal = msg.getPrincipal().getPrincipal();,                 },                 clusterSSO.registerLocal(msg.getSsoId(), principal, msg.getAuthType(),,                                          msg.getUsername(), msg.getPassword());,                 break;,             case SingleSignOnMessage.UPDATE_SESSION:,                 if (msg.getPrincipal() != null) {,                     principal = msg.getPrincipal().getPrincipal();,                 },                 clusterSSO.updateLocal(msg.getSsoId(), principal, msg.getAuthType(),,                                        msg.getUsername(), msg.getPassword());,                 break;,             case SingleSignOnMessage.REMOVE_SESSION:,                 session = getSession(msg.getSessionId(),,                                      msg.getContextName());,                 if (session != null),                     clusterSSO.removeSessionLocal(msg.getSsoId(), session);],,
CORRECTNESS,NP_NULL_PARAM_DEREF,org/apache/catalina/ha/backend/CollectedInfo.java,init,82-82,[            if (shost.compareTo(host) == 0)],,init,80-80,[            if (host==null && iport==port)],,
STYLE,REC_CATCH_EXCEPTION,org/apache/catalina/ha/backend/MultiCastSender.java,send,63-63,[            } catch (Exception ex) {],,
I18N,DM_DEFAULT_ENCODING,org/apache/catalina/ha/backend/TcpSender.java,send,106-106,[                    connectionReaders[i] = new BufferedReader(new InputStreamReader(connections[i].getInputStream()));],,
I18N,DM_DEFAULT_ENCODING,org/apache/catalina/ha/backend/TcpSender.java,send,107-107,[                    connectionWriters[i] = new BufferedWriter(new OutputStreamWriter(connections[i].getOutputStream()));],,
STYLE,REC_CATCH_EXCEPTION,org/apache/catalina/ha/backend/TcpSender.java,send,108-108,[                } catch (Exception ex) {],,
STYLE,BC_UNCONFIRMED_CAST,org/apache/catalina/ha/context/ReplicatedContext.java,getServletContext,125-125,[        return ((ReplApplContext)context).getFacade();],,
STYLE,BC_UNCONFIRMED_CAST,org/apache/catalina/ha/context/ReplicatedContext.java,startInternal,66-66,[                ((ReplApplContext)this.context).setAttributeMap(map);],,
STYLE,BC_UNCONFIRMED_CAST,org/apache/catalina/ha/context/ReplicatedContext.java,stopInternal,88-88,[        Map<String,Object> map =],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/catalina/ha/context/ReplicatedContext.java,<init>,194-194,[            e = lists;],,
EXPERIMENTAL,OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE,org/apache/catalina/ha/deploy/FarmWarDeployer.java,copy,735-735,[            java.io.FileInputStream is = new java.io.FileInputStream(from);],,copy,736-736,[            java.io.FileOutputStream os = new java.io.FileOutputStream(to,],,copy,738-738,[            byte[] buf = new byte[4096];],,copy,740-740,[                int len = is.read(buf);],,copy,747-747,[        } catch (IOException e) {],,copy,748-748,[            log.error(sm.getString("farmWarDeployer.fileCopyFail",],,copy,750-750,[            return false;],,
EXPERIMENTAL,OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE,org/apache/catalina/ha/deploy/FarmWarDeployer.java,copy,736-736,[            java.io.FileOutputStream os = new java.io.FileOutputStream(to,],,copy,738-738,[            byte[] buf = new byte[4096];],,copy,740-740,[                int len = is.read(buf);],,copy,747-747,[        } catch (IOException e) {],,copy,748-748,[            log.error(sm.getString("farmWarDeployer.fileCopyFail",],,copy,750-750,[            return false;],,
BAD_PRACTICE,OS_OPEN_STREAM_EXCEPTION_PATH,org/apache/catalina/ha/deploy/FarmWarDeployer.java,copy,735-735,[            java.io.FileInputStream is = new java.io.FileInputStream(from);],,
BAD_PRACTICE,OS_OPEN_STREAM_EXCEPTION_PATH,org/apache/catalina/ha/deploy/FarmWarDeployer.java,copy,736-736,[            java.io.FileOutputStream os = new java.io.FileOutputStream(to,],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/ha/deploy/FileMessage.java,getData,61-61,[        return data;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/catalina/ha/deploy/FileMessage.java,setData,64-64,[        this.data = data;],,
BAD_PRACTICE,NM_CONFUSING,org/apache/catalina/ha/deploy/FileMessage.java,getFileName,83-83,[        return fileName;],,getFilename,85-85,[        return filename;],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/catalina/ha/deploy/FileMessageFactory.java,cleanup,314-314,[            } catch (Exception ignore) {],,
BAD_PRACTICE,RV_RETURN_VALUE_IGNORED_BAD_PRACTICE,org/apache/catalina/ha/deploy/FileMessageFactory.java,isValid,401-401,[                if (file.exists()) file.delete();],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/catalina/ha/session/DeltaManager.java,handleGET_ALL_SESSIONS,1428-1428,[                    } catch (Exception sleep) {],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/catalina/ha/session/DeltaManager.java,waitForSendAllSessions,849-849,[                } catch (Exception sleep) {],,
STYLE,ICAST_INTEGER_MULTIPLY_CAST_TO_LONG,org/apache/catalina/ha/session/DeltaManager.java,requestCompleted,1034-1034,[                        replDelta > (session.getMaxInactiveInterval() * 1000)) {],,
STYLE,ICAST_INTEGER_MULTIPLY_CAST_TO_LONG,org/apache/catalina/ha/session/DeltaManager.java,waitForSendAllSessions,853-853,[                isTimeout = ((reqNow - reqStart) > (1000 * getStateTransferTimeout()));],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/catalina/ha/session/DeltaManager.java,,937-937,[                        if(receiverQueue) {],,,774-774,[                     receiverQueue = true ;],,,811-811,[                    receiverQueue = false ;],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/catalina/ha/session/DeltaManager.java,,1276-1276,[        stateTransferCreateSendTime = msg.getTimestamp() ;],,,767-767,[            stateTransferCreateSendTime = beforeSendTime ;],,,793-793,[                                    smsg.getTimestamp() >= stateTransferCreateSendTime) {],,,803-803,[                                            smsg.getEventTypeString(),],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/catalina/ha/session/DeltaManager.java,,277-277,[        return counterNoStateTransfered;],,,1086-1086,[        counterNoStateTransfered = 0 ;],,,868-868,[            counterNoStateTransfered++ ;],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/catalina/ha/session/DeltaManager.java,,142-142,[        return counterSend_EVT_GET_ALL_SESSIONS;],,,769-769,[            counterSend_EVT_GET_ALL_SESSIONS++;],,,1098-1098,[        counterSend_EVT_GET_ALL_SESSIONS = 0;],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/catalina/ha/session/DeltaManager.java,,149-149,[        return counterSend_EVT_SESSION_ACCESSED;],,,1099-1099,[        counterSend_EVT_SESSION_ACCESSED = 0 ;],,,1011-1011,[                    counterSend_EVT_SESSION_ACCESSED++;],,,1035-1035,[                    counterSend_EVT_SESSION_ACCESSED++;],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/catalina/ha/session/DeltaManager.java,,163-163,[        return counterSend_EVT_SESSION_DELTA;],,,1101-1101,[        counterSend_EVT_SESSION_DELTA = 0 ;],,,999-999,[                    counterSend_EVT_SESSION_DELTA++;],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/ha/session/DeltaManager.java,messageReceived,1215-1215,[            if ( loaders != null && loaders.length > 0) {],,
STYLE,REC_CATCH_EXCEPTION,org/apache/catalina/ha/session/DeltaManager.java,messageReceived,1255-1255,[        } catch (Exception x) {],,
STYLE,ICAST_INTEGER_MULTIPLY_CAST_TO_LONG,org/apache/catalina/ha/session/DeltaSession.java,isAccessReplicate,224-224,[        if (maxInactiveInterval >=0 && replDelta > (maxInactiveInterval * 1000)) {],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/catalina/ha/session/DeltaSession.java,getClassLoaders,150-150,[        return null;],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/catalina/ha/session/JvmRouteBinderValve.java,,260-260,[        return cluster;],,,268-268,[        this.cluster = cluster;],,,382-382,[        if (cluster == null) {],,,406-406,[            if (cluster == null) {],,,394-394,[                cluster = (CatalinaCluster) ((Host) hostContainer).getCluster();],,,399-399,[                    cluster = (CatalinaCluster) ((Engine) engine).getCluster();],,,427-427,[        cluster = null;],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/ha/session/SerializablePrincipal.java,getRoles,131-131,[        return (this.roles);],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/ha/session/SessionMessageImpl.java,getSession,108-108,[    public byte[] getSession() { return mSession;}],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/catalina/ha/session/SessionMessageImpl.java,,130-130,[    public long getTimestamp() { return serializationTimestamp;}],,,123-123,[                serializationTimestamp=time;],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/catalina/ha/tcp/ReplicationValve.java,,215-215,[        return lastSendTime;],,,355-355,[        lastSendTime = 0 ;],,,570-570,[            lastSendTime=System.currentTimeMillis();],,,571-571,[            totalSendTime+=lastSendTime - clusterTime;],,,572-572,[            totalRequestTime+=lastSendTime - requestTime;],,
STYLE,BC_UNCONFIRMED_CAST,org/apache/catalina/ha/tcp/SimpleTcpCluster.java,messageReceived,768-768,[        ClusterMessage fwd = (ClusterMessage)message;],,
MALICIOUS_CODE,DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEGED,org/apache/catalina/loader/ParallelWebappClassLoader.java,copyWithoutTransformers,61-61,[        ParallelWebappClassLoader result = new ParallelWebappClassLoader(getParent());],,
MALICIOUS_CODE,DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEGED,org/apache/catalina/loader/WebappClassLoader.java,copyWithoutTransformers,51-51,[        WebappClassLoader result = new WebappClassLoader(getParent());],,
I18N,DM_DEFAULT_ENCODING,org/apache/catalina/loader/WebappClassLoaderBase.java,findResourceInternal,2567-2567,[                    String str = new String(binaryContent);],,
MT_CORRECTNESS,NO_NOTIFY_NOT_NOTIFYALL,org/apache/catalina/loader/WebappClassLoaderBase.java,clearReferencesStopTimerThread,1960-1960,[                    queue.notify();  // In case queue was already empty.],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/loader/WebappClassLoaderBase.java,getPermissions,1328-1328,[            if (pc != null) {],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/loader/WebappClassLoaderBase.java,findClass,1263-1263,[                if (clazz != null) {],,
STYLE,REC_CATCH_EXCEPTION,org/apache/catalina/loader/WebappClassLoaderBase.java,clearReferencesJdbc,1608-1608,[        } catch (Exception e) {],,
STYLE,REC_CATCH_EXCEPTION,org/apache/catalina/loader/WebappClassLoaderBase.java,clearReferencesStopTimerThread,1974-1974,[        } catch (Exception e) {],,
BAD_PRACTICE,NM_CONFUSING,org/apache/catalina/loader/WebappLoader.java,getClasspath,333-333,[        return classpath;],,getClassPath,327-327,[        return classpath;],,
CORRECTNESS,NP_NULL_ON_SOME_PATH,org/apache/catalina/loader/WebappLoader.java,stopInternal,459-459,[                    classLoader.getClass().getSimpleName() + ",host=" +],,stopInternal,445-445,[        if (classLoader != null) {],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/loader/WebappLoader.java,getClasspath,649-649,[            if( m==null ) return null;],,
STYLE,REC_CATCH_EXCEPTION,org/apache/catalina/loader/WebappLoader.java,getClasspath,656-656,[        } catch( Exception ex ) {],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/manager/HTMLManagerServlet.java,getSessionsForName,864-864,[        if (sessions == null || sessions.isEmpty()) return null;],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/catalina/manager/HTMLManagerServlet.java,,1020-1023,[            comparator = new BaseSessionComparator<Date>() {,                 @Override,                 public Comparable<Date> getComparableObject(Session session) {,                     return new Date(session.getCreationTime());],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/catalina/manager/HTMLManagerServlet.java,,1083-1086,[            comparator = new BaseSessionComparator<Date>() {,                 @Override,                 public Comparable<Date> getComparableObject(Session session) {,                     return new Date(SessionUtils.getTTLForSession(session));],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/catalina/manager/HTMLManagerServlet.java,,1027-1030,[            comparator = new BaseSessionComparator<String>() {,                 @Override,                 public Comparable<String> getComparableObject(Session session) {,                     return session.getId();],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/catalina/manager/HTMLManagerServlet.java,,1034-1037,[            comparator = new BaseSessionComparator<Date>() {,                 @Override,                 public Comparable<Date> getComparableObject(Session session) {,                     return new Date(session.getLastAccessedTime());],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/catalina/manager/HTMLManagerServlet.java,,1041-1044,[            comparator = new BaseSessionComparator<Integer>() {,                 @Override,                 public Comparable<Integer> getComparableObject(Session session) {,                     return Integer.valueOf(session.getMaxInactiveInterval());],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/catalina/manager/HTMLManagerServlet.java,,1048-1051,[            comparator = new BaseSessionComparator<Boolean>() {,                 @Override,                 public Comparable<Boolean> getComparableObject(Session session) {,                     return Boolean.valueOf(session.getSession().isNew());],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/catalina/manager/HTMLManagerServlet.java,,1055-1058,[            comparator = new BaseSessionComparator<String>() {,                 @Override,                 public Comparable<String> getComparableObject(Session session) {,                     return JspHelper.guessDisplayLocaleFromSession(session);],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/catalina/manager/HTMLManagerServlet.java,,1062-1065,[            comparator = new BaseSessionComparator<String>() {,                 @Override,                 public Comparable<String> getComparableObject(Session session) {,                     return JspHelper.guessDisplayUserFromSession(session);],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/catalina/manager/HTMLManagerServlet.java,,1069-1072,[            comparator = new BaseSessionComparator<Date>() {,                 @Override,                 public Comparable<Date> getComparableObject(Session session) {,                     return new Date(SessionUtils.getUsedTimeForSession(session));],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/catalina/manager/HTMLManagerServlet.java,,1076-1079,[            comparator = new BaseSessionComparator<Date>() {,                 @Override,                 public Comparable<Date> getComparableObject(Session session) {,                     return new Date(SessionUtils.getInactiveTimeForSession(session));],,
STYLE,REC_CATCH_EXCEPTION,org/apache/catalina/manager/JMXProxyServlet.java,invokeOperation,211-211,[        } catch( Exception ex ) {],,
MT_CORRECTNESS,MSF_MUTABLE_SERVLET_FIELD,org/apache/catalina/manager/ManagerServlet.java,,1419-1419,[        Boolean result =],,,1432-1432,[        mBeanServer.invoke(oname, "check", params, signature);],,,1456-1456,[        mBeanServer.invoke(oname, "addServiced", params, signature);],,,266-266,[        mBeanServer = Registry.getRegistry(null, null).getMBeanServer();],,,1443-1443,[        Boolean result =],,,1467-1467,[        mBeanServer.invoke(oname, "removeServiced", params, signature);],,
MT_CORRECTNESS,MSF_MUTABLE_SERVLET_FIELD,org/apache/catalina/manager/ManagerServlet.java,,1419-1419,[        Boolean result =],,,1432-1432,[        mBeanServer.invoke(oname, "check", params, signature);],,,1456-1456,[        mBeanServer.invoke(oname, "addServiced", params, signature);],,,251-251,[            oname = null;],,,259-259,[                oname = new ObjectName(name);],,,1443-1443,[        Boolean result =],,,1467-1467,[        mBeanServer.invoke(oname, "removeServiced", params, signature);],,,487-487,[            log("init: Associated with Deployer '" +],,
MT_CORRECTNESS,MSF_MUTABLE_SERVLET_FIELD,org/apache/catalina/manager/ManagerServlet.java,,234-234,[        return (this.wrapper);],,,247-247,[        this.wrapper = wrapper;],,,443-443,[        if ((wrapper == null) || (context == null))],,
STYLE,MTIA_SUSPECT_SERVLET_INSTANCE_FIELD,org/apache/catalina/manager/ManagerServlet.java,,249-249,[            context = null;],,
STYLE,MTIA_SUSPECT_SERVLET_INSTANCE_FIELD,org/apache/catalina/manager/ManagerServlet.java,,250-250,[            host = null;],,
STYLE,MTIA_SUSPECT_SERVLET_INSTANCE_FIELD,org/apache/catalina/manager/ManagerServlet.java,,266-266,[        mBeanServer = Registry.getRegistry(null, null).getMBeanServer();],,
STYLE,MTIA_SUSPECT_SERVLET_INSTANCE_FIELD,org/apache/catalina/manager/ManagerServlet.java,,251-251,[            oname = null;],,
STYLE,MTIA_SUSPECT_SERVLET_INSTANCE_FIELD,org/apache/catalina/manager/ManagerServlet.java,,247-247,[        this.wrapper = wrapper;],,
BAD_PRACTICE,RV_RETURN_VALUE_IGNORED_BAD_PRACTICE,org/apache/catalina/manager/ManagerServlet.java,deploy,704-704,[                        uploadedWar.renameTo(deployedWar);],,
STYLE,REC_CATCH_EXCEPTION,org/apache/catalina/manager/StatusManagerServlet.java,init,153-153,[        } catch (Exception e) {],,
STYLE,UCF_USELESS_CONTROL_FLOW,org/apache/catalina/manager/StatusManagerServlet.java,handleNotification,358-358,[                if (j2eeType != null) {],,
STYLE,DB_DUPLICATE_SWITCH_CLAUSES,org/apache/catalina/manager/StatusTransformer.java,writeProcessorState,421-423,[            stageStr = "P";,             fullStatus = false;,             break;],,writeProcessorState,425-427,[            stageStr = "P";,             fullStatus = false;,             break;],,
STYLE,DB_DUPLICATE_SWITCH_CLAUSES,org/apache/catalina/manager/StatusTransformer.java,writeProcessorState,438-440,[            stageStr = "R";,             fullStatus = false;,             break;],,writeProcessorState,447-449,[            stageStr = "R";,             fullStatus = false;,             break;],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/catalina/manager/StatusTransformer.java,writeConnectorState,298-298,[            } catch (Exception e) {],,
STYLE,UCF_USELESS_CONTROL_FLOW,org/apache/catalina/manager/StatusTransformer.java,writeContext,735-735,[        } else if (mode == 1){],,
STYLE,UCF_USELESS_CONTROL_FLOW,org/apache/catalina/manager/StatusTransformer.java,writeDetailedState,643-643,[        } else if (mode == 1){],,
STYLE,UCF_USELESS_CONTROL_FLOW,org/apache/catalina/manager/StatusTransformer.java,writeJspMonitor,810-810,[        } else if (mode == 1) {],,
STYLE,UCF_USELESS_CONTROL_FLOW,org/apache/catalina/manager/StatusTransformer.java,writeManager,776-776,[        } else if (mode == 1) {],,
STYLE,UCF_USELESS_CONTROL_FLOW,org/apache/catalina/manager/StatusTransformer.java,writeOSState,191-191,[            } else if (mode == 1){],,
STYLE,UCF_USELESS_CONTROL_FLOW,org/apache/catalina/manager/StatusTransformer.java,writeWrapper,861-861,[        } else if (mode == 1){],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/catalina/manager/host/HostManagerServlet.java,add,389-389,[                int len = buffer.length;],,
MT_CORRECTNESS,MSF_MUTABLE_SERVLET_FIELD,org/apache/catalina/manager/host/HostManagerServlet.java,,156-156,[            context = null;],,,160-160,[            context = (Context) wrapper.getParent();],,,161-161,[            installedHost = (Host) context.getParent();],,,662-662,[        File configBase = new File(context.getCatalinaBase(), "conf");],,,297-297,[        if ((wrapper == null) || (context == null))],,
MT_CORRECTNESS,MSF_MUTABLE_SERVLET_FIELD,org/apache/catalina/manager/host/HostManagerServlet.java,,154-154,[        this.wrapper = wrapper;],,,141-141,[        return (this.wrapper);],,,297-297,[        if ((wrapper == null) || (context == null))],,
STYLE,MTIA_SUSPECT_SERVLET_INSTANCE_FIELD,org/apache/catalina/manager/host/HostManagerServlet.java,,156-156,[            context = null;],,
STYLE,MTIA_SUSPECT_SERVLET_INSTANCE_FIELD,org/apache/catalina/manager/host/HostManagerServlet.java,,158-158,[            engine = null;],,
STYLE,MTIA_SUSPECT_SERVLET_INSTANCE_FIELD,org/apache/catalina/manager/host/HostManagerServlet.java,,157-157,[            installedHost = null;],,
STYLE,MTIA_SUSPECT_SERVLET_INSTANCE_FIELD,org/apache/catalina/manager/host/HostManagerServlet.java,,154-154,[        this.wrapper = wrapper;],,
BAD_PRACTICE,RV_NEGATING_RESULT_OF_COMPARETO,org/apache/catalina/manager/util/ReverseComparator.java,compare,45-45,[        return (- returnValue);],,
BAD_PRACTICE,SE_COMPARATOR_SHOULD_BE_SERIALIZABLE,org/apache/catalina/manager/util/ReverseComparator.java,,28-45,[public class ReverseComparator implements Comparator<Session> {,     protected final Comparator<Session> comparator;, ,     /**,      *,      */,     public ReverseComparator(Comparator<Session> comparator) {,         super();,         this.comparator = comparator;,     }, ,     /* (non-Javadoc),      * @see java.util.Comparator#compare(java.lang.Object, java.lang.Object),      */,     @Override,     public int compare(Session o1, Session o2) {,         int returnValue = comparator.compare(o1, o2);,         return (- returnValue);],,
STYLE,ICAST_INTEGER_MULTIPLY_CAST_TO_LONG,org/apache/catalina/manager/util/SessionUtils.java,getTTLForSession,245-245,[            long diffMilliSeconds = (1000*in_session.getMaxInactiveInterval()) - (System.currentTimeMillis() - in_session.getThisAccessedTime());],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/manager/util/SessionUtils.java,guessLocaleFromSession,125-125,[                        if (null != readMethod) {],,
STYLE,REC_CATCH_EXCEPTION,org/apache/catalina/manager/util/SessionUtils.java,guessLocaleFromSession,132-132,[                    } catch (Exception e) {],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/catalina/mapper/Mapper.java,internalMapWrapper,833-833,[        int servletPath = pathOffset;],,
STYLE,IM_AVERAGE_COMPUTATION_COULD_OVERFLOW,org/apache/catalina/mapper/Mapper.java,find,1279-1279,[            i = (b + a) / 2;],,
STYLE,IM_AVERAGE_COMPUTATION_COULD_OVERFLOW,org/apache/catalina/mapper/Mapper.java,find,1177-1177,[            i = (b + a) / 2;],,
STYLE,IM_AVERAGE_COMPUTATION_COULD_OVERFLOW,org/apache/catalina/mapper/Mapper.java,findIgnoreCase,1232-1232,[            i = (b + a) / 2;],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/catalina/mapper/Mapper.java,,330-330,[        MappedHost host = exactFind(hosts, hostName);],,,383-383,[        MappedHost host = exactFind(hosts, hostName);],,,733-733,[        MappedHost[] hosts = this.hosts;],,,264-264,[        MappedHost mappedHost  = exactFind(hosts, hostName);],,,267-267,[            mappedHost = exactFind(hosts, hostName);],,,171-171,[        MappedHost[] newHosts = new MappedHost[hosts.length + 1];],,,172-172,[        if (insertMap(hosts, newHosts, newAlias)) {],,,180-180,[            MappedHost duplicate = hosts[find(hosts, newAlias.name)];],,,173-173,[            hosts = newHosts;],,,137-137,[        MappedHost host = exactFind(hosts, name);],,,141-141,[        MappedHost[] newHosts = hosts.clone();],,,149-149,[        hosts = Arrays.copyOf(newHosts, j);],,,158-158,[        MappedHost realHost = exactFind(hosts, name);],,,95-95,[        MappedHost[] newHosts = new MappedHost[hosts.length + 1];],,,97-97,[        if (insertMap(hosts, newHosts, newHost)) {],,,103-103,[            MappedHost duplicate = hosts[find(hosts, name)];],,,98-98,[            hosts = newHosts;],,,203-203,[        MappedHost hostMapping = exactFind(hosts, alias);],,,207-207,[        MappedHost[] newHosts = new MappedHost[hosts.length - 1];],,,208-208,[        if (removeMap(hosts, newHosts, alias)) {],,,209-209,[            hosts = newHosts;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/catalina/mapper/Mapper.java,<init>,1662-1662,[            this.welcomeResources = welcomeResources;],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/mbeans/ContainerMBean.java,addValve,157-157,[        if (valve == null) {],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/mbeans/ContainerMBean.java,addLifecycleListener,238-238,[        if(listener != null){],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/mbeans/GlobalResourcesLifecycleListener.java,createMBeans,205-205,[            if (MBeanUtils.createMBean(group) == null) {],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/mbeans/GlobalResourcesLifecycleListener.java,createMBeans,192-192,[            if (MBeanUtils.createMBean(role) == null) {],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/mbeans/GlobalResourcesLifecycleListener.java,createMBeans,218-218,[            if (MBeanUtils.createMBean(user) == null) {],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/mbeans/GlobalResourcesLifecycleListener.java,createMBeans,180-180,[        if (MBeanUtils.createMBean(database) == null) {],,
BAD_PRACTICE,ES_COMPARING_STRINGS_WITH_EQ,org/apache/catalina/mbeans/JmxRemoteLifecycleListener.java,lifecycleEvent,197-197,[        if (Lifecycle.START_EVENT == event.getType()) {],,
BAD_PRACTICE,ES_COMPARING_STRINGS_WITH_EQ,org/apache/catalina/mbeans/JmxRemoteLifecycleListener.java,lifecycleEvent,263-263,[        } else if (Lifecycle.STOP_EVENT == event.getType()) {],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/mbeans/MBeanFactory.java,removeConnector,712-712,[            if ((connAddress==null) && port.equals(connPort)) {],,
STYLE,URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD,org/apache/catalina/mbeans/MemoryUserDatabaseMBean.java,,79-79,[        registry.findManagedBean("MemoryUserDatabase");],,
STYLE,URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD,org/apache/catalina/mbeans/RoleMBean.java,,70-70,[    protected final ManagedBean managed = registry.findManagedBean("Role");],,
EXPERIMENTAL,OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE,org/apache/catalina/realm/DataSourceRealm.java,credentials,520-520,[            dbConnection.prepareStatement(preparedCredentials);],,credentials,522-522,[        credentials.setString(1, username);],,
EXPERIMENTAL,OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE,org/apache/catalina/realm/DataSourceRealm.java,roles,540-540,[            dbConnection.prepareStatement(preparedRoles);],,roles,542-542,[        roles.setString(1, username);],,
SECURITY,SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING,org/apache/catalina/realm/DataSourceRealm.java,credentials,520-520,[            dbConnection.prepareStatement(preparedCredentials);],,
SECURITY,SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING,org/apache/catalina/realm/DataSourceRealm.java,roles,540-540,[            dbConnection.prepareStatement(preparedRoles);],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/realm/GenericPrincipal.java,getRoles,154-154,[        return (this.roles);],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/catalina/realm/JAASRealm.java,,184-184,[        return configFile;],,,191-191,[        this.configFile = configFile;],,,623-623,[                if (configFile == null) {],,,627-627,[                URL resource = Thread.currentThread().getContextClassLoader().],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/catalina/realm/JAASRealm.java,,620-620,[                return jaasConfiguration;],,,636-636,[                this.jaasConfiguration = config;],,,638-638,[                return this.jaasConfiguration;],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/realm/JAASRealm.java,createPrincipal,446-446,[        if (principal == null) {],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/catalina/realm/JDBCRealm.java,,227-227,[        this.roleNameCol = roleNameCol;],,,218-218,[        return roleNameCol;],,,698-698,[        return userRoleTable != null || roleNameCol != null;],,,681-681,[            sb.append(roleNameCol);],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/catalina/realm/JDBCRealm.java,,269-269,[        return userRoleTable;],,,278-278,[        this.userRoleTable = userRoleTable;],,,698-698,[        return userRoleTable != null || roleNameCol != null;],,,683-683,[            sb.append(userRoleTable);],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/catalina/realm/JDBCRealm.java,,741-741,[        close(this.dbConnection);],,,334-334,[                Principal principal = authenticate(dbConnection,],,,347-347,[                if (dbConnection != null)],,,348-348,[                    close(dbConnection);],,,635-635,[        if (dbConnection != null)],,,636-636,[            return (dbConnection);],,,655-655,[        dbConnection = driver.connect(connectionURL, props);],,,656-656,[        if (dbConnection == null) {],,,660-660,[        dbConnection.setAutoCommit(false);],,,661-661,[        return (dbConnection);],,,525-525,[                try (PreparedStatement stmt = credentials(dbConnection, username);],,,545-545,[            if (dbConnection != null) {],,,546-546,[                close(dbConnection);],,,531-531,[                    dbConnection.commit();],,,594-594,[                try (PreparedStatement stmt = roles(dbConnection, username);],,,608-608,[                    dbConnection.commit();],,,615-615,[                if (dbConnection != null)],,,616-616,[                    close(dbConnection);],,
SECURITY,SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING,org/apache/catalina/realm/JDBCRealm.java,credentials,478-478,[                dbConnection.prepareStatement(sb.toString());],,
SECURITY,SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING,org/apache/catalina/realm/JDBCRealm.java,roles,688-688,[                dbConnection.prepareStatement(sb.toString());],,
I18N,DM_DEFAULT_ENCODING,org/apache/catalina/realm/JNDIRealm.java,getAttributeValue,1842-1842,[            valueString = new String((byte[]) value);],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/catalina/realm/JNDIRealm.java,,889-889,[            userPatternFormatArray = new MessageFormat[len];],,,891-891,[                userPatternFormatArray[i] =],,,1371-1371,[        if (username == null || userPatternFormatArray[curUserPattern] == null)],,,1375-1375,[        String dn = userPatternFormatArray[curUserPattern].format(new String[] { username });],,,1277-1277,[        if (userPatternFormatArray != null && curUserPattern >= 0) {],,,1143-1143,[                 curUserPattern < userPatternFormatArray.length;],,
BAD_PRACTICE,NM_CONFUSING,org/apache/catalina/realm/JNDIRealm.java,getRoleName,735-735,[        return (this.roleName);],,getRolename,84-84,[        return (this.rolename);],,
BAD_PRACTICE,NM_CONFUSING,org/apache/catalina/realm/JNDIRealm.java,setRoleName,747-749,[        this.roleName = roleName;, ,     }],,setRolename,98-100,[        this.rolename = rolename;, ,     }],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/catalina/realm/JNDIRealm.java,getUserByPattern,1341-1341,[            roles = addAttributeValues(userRoleName, attrs, roles);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/catalina/realm/JNDIRealm.java,getUserBySearch,1490-1490,[            roles = addAttributeValues(userRoleName, attrs, roles);],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/catalina/realm/JNDIRealm.java,parseUserPatternString,2253-2253,[        return null;],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/realm/JNDIRealm.java,open,1045-1045,[                if (context != null)],,open,1060-1060,[                if (context != null)],,open,1075-1075,[                if (context != null)],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/realm/JNDIRealm.java,open,1965-1965,[                if (context != null)],,open,1980-1980,[                if (context != null)],,
PERFORMANCE,WMI_WRONG_MAP_ITERATOR,org/apache/catalina/realm/JNDIRealm.java,getRoles,1760-1760,[                containerLog.trace(  "  Found direct role " + key + " -> " + groupMap.get(key));],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/catalina/realm/LockOutRealm.java,,99-99,[        failedUsers = new LinkedHashMap<String, LockRecord>(cacheSize, 0.75f,],,,284-284,[            lockRecord = failedUsers.get(username);],,,310-310,[        failedUsers.remove(username);],,,321-321,[            if (!failedUsers.containsKey(username)) {],,,325-325,[                lockRecord = failedUsers.get(username);],,,323-323,[                failedUsers.put(username, lockRecord);],,
I18N,DM_DEFAULT_ENCODING,org/apache/catalina/realm/RealmBase.java,Digest,1412-1412,[                md.update(credentials.getBytes());],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/catalina/realm/RealmBase.java,Digest,1406-1421,[            MessageDigest md =,                 (MessageDigest) MessageDigest.getInstance(algorithm).clone();, ,             // encode the credentials,             // Should use the digestEncoding, but that's not a static field,             if (encoding == null) {,                 md.update(credentials.getBytes());,             } else {,                 md.update(credentials.getBytes(encoding));,             }, ,             // Digest the credentials and return as hexadecimal,             return (HexUtils.toHexString(md.digest()));,         } catch(Exception ex) {,             log.error(ex);,             return credentials;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/catalina/realm/RealmBase.java,findSecurityConstraints,674-674,[            return (null);],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/catalina/realm/RealmBase.java,resultsToArray,910-910,[            return null;],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/realm/RealmBase.java,findSecurityConstraints,681-681,[        if (uri == null) {],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/realm/RealmBase.java,hasUserDataPermission,1157-1157,[        if (queryString != null) {],,
STYLE,REC_CATCH_EXCEPTION,org/apache/catalina/realm/RealmBase.java,Digest,1419-1419,[        } catch(Exception ex) {],,
STYLE,REC_CATCH_EXCEPTION,org/apache/catalina/realm/RealmBase.java,digest,1285-1285,[            } catch (Exception e) {],,
MT_CORRECTNESS,LI_LAZY_INIT_STATIC,org/apache/catalina/security/SecurityConfig.java,newInstance,85-86,[        if (singleton == null){,             singleton = new SecurityConfig();],,
I18N,DM_CONVERT_CASE,org/apache/catalina/security/SecurityListener.java,checkOsUser,150-150,[            String userNameLC = userName.toLowerCase();],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/catalina/security/SecurityUtil.java,doAsPrivilege,233-233,[            method = createMethodAndCacheIt(methodsCache,],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/catalina/security/SecurityUtil.java,doAsPrivilege,153-153,[            method = createMethodAndCacheIt(methodsCache,],,
PERFORMANCE,DM_BOXED_PRIMITIVE_TOSTRING,org/apache/catalina/servlets/CGIServlet.java,setCGIEnvironment,1064-1064,[                (Integer.valueOf(contentLength)).toString());],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/servlets/CGIServlet.java,setCGIEnvironment,1031-1031,[            if (sPathInfoCGI != null && !("".equals(sPathInfoCGI))) {],,
PERFORMANCE,SBSC_USE_STRINGBUFFER_CONCATENATION,org/apache/catalina/servlets/CGIServlet.java,findCGI,885-885,[                cginame = cginame + "/" + nextElement;],,
I18N,DM_DEFAULT_ENCODING,org/apache/catalina/servlets/CGIServlet.java,run,1623-1623,[                    (new InputStreamReader(proc.getErrorStream()));],,run,1636-1636,[                cgiHeaderReader =],,
STYLE,DB_DUPLICATE_SWITCH_CLAUSES,org/apache/catalina/servlets/CGIServlet.java,read,1876-1877,[                        state = STATE_FIRST_LF;,                         break;],,read,1879-1880,[                        state = STATE_FIRST_LF;,                         break;],,
STYLE,SF_SWITCH_NO_DEFAULT,org/apache/catalina/servlets/CGIServlet.java,read,1874-1883,[                switch(state) {,                     case STATE_CHARACTER:,                         state = STATE_FIRST_LF;,                         break;,                     case STATE_FIRST_CR:,                         state = STATE_FIRST_LF;,                         break;,                     case STATE_FIRST_LF:,                     case STATE_SECOND_CR:,                         state = STATE_HEADER_END;],,read,1889-1897,[                switch(state) {,                     case STATE_CHARACTER:,                         state = STATE_FIRST_CR;,                         break;,                     case STATE_FIRST_CR:,                         state = STATE_HEADER_END;,                         break;,                     case STATE_FIRST_LF:,                         state = STATE_SECOND_CR;],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/catalina/servlets/DefaultServlet.java,copyRange,2080-2080,[        int len = buffer.length;],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/catalina/servlets/DefaultServlet.java,copyRange,2112-2112,[        int len = buffer.length;],,
I18N,DM_DEFAULT_ENCODING,org/apache/catalina/servlets/DefaultServlet.java,copy,1966-1966,[            reader = new InputStreamReader(resourceInputStream);],,
I18N,DM_DEFAULT_ENCODING,org/apache/catalina/servlets/DefaultServlet.java,getReadme,1554-1554,[                copyRange(new InputStreamReader(is),],,
MALICIOUS_CODE,MS_MUTABLE_COLLECTION_PKGPROTECT,org/apache/catalina/servlets/DefaultServlet.java,,144-144,[    protected static final ArrayList<Range> FULL = new ArrayList<>();],,
BAD_PRACTICE,OS_OPEN_STREAM_EXCEPTION_PATH,org/apache/catalina/servlets/DefaultServlet.java,executePartialPut,585-585,[            BufferedInputStream bufOldRevStream =],,
BAD_PRACTICE,RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN,org/apache/catalina/servlets/DefaultServlet.java,checkSendfile,1709-1709,[            && (Boolean.TRUE == request.getAttribute(Globals.SENDFILE_SUPPORTED_ATTR))],,
BAD_PRACTICE,RR_NOT_CHECKED,org/apache/catalina/servlets/DefaultServlet.java,findXsltSource,1616-1616,[                    fis.read(b);],,
PERFORMANCE,DM_BOXED_PRIMITIVE_FOR_PARSING,org/apache/catalina/servlets/WebdavServlet.java,doLock,885-885,[                    (new Integer(lockDurationStr.substring(7))).intValue();],,doLock,892-892,[                            (new Integer(lockDurationStr)).intValue();],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/catalina/servlets/WebdavServlet.java,doLock,885-885,[                    (new Integer(lockDurationStr.substring(7))).intValue();],,doLock,891-891,[                        lockDuration =],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/catalina/servlets/WebdavServlet.java,copyResource,1643-1643,[                    errorList.put(dest, new Integer(WebdavStatus.SC_CONFLICT));],,copyResource,1670-1670,[                        errorList.put(source, new Integer(WebdavStatus.SC_CONFLICT));],,copyResource,1677-1677,[                errorList.put(source,],,copyResource,1682-1682,[            errorList.put(source,],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/catalina/servlets/WebdavServlet.java,deleteCollection,1783-1783,[            errorList.put(path, new Integer(WebdavStatus.SC_FORBIDDEN));],,deleteCollection,1805-1805,[                errorList.put(childName, new Integer(WebdavStatus.SC_LOCKED));],,deleteCollection,1817-1817,[                        errorList.put(childName, new Integer(],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/catalina/servlets/WebdavServlet.java,deleteResource,1752-1752,[                errorList.put(path, new Integer],,
STYLE,ICAST_INTEGER_MULTIPLY_CAST_TO_LONG,org/apache/catalina/servlets/WebdavServlet.java,doLock,905-905,[        lock.expiresAt = System.currentTimeMillis() + (lockDuration * 1000);],,
BAD_PRACTICE,SE_BAD_FIELD,org/apache/catalina/servlets/WebdavServlet.java,,2494-2604,[        public LockInfo() {,             // Ignore,         }, , ,         // ------------------------------------------------- Instance Variables, , ,         String path = "/";,         String type = "write";,         String scope = "exclusive";,         int depth = 0;,         String owner = "";,         Vector<String> tokens = new Vector<>();,         long expiresAt = 0;,         Date creationDate = new Date();, , ,         // ----------------------------------------------------- Public Methods, , ,         /**,          * Get a String representation of this lock token.,          */,         @Override,         public String toString() {, ,             StringBuilder result =  new StringBuilder("Type:");,             result.append(type);,             result.append("\nScope:");,             result.append(scope);,             result.append("\nDepth:");,             result.append(depth);,             result.append("\nOwner:");,             result.append(owner);,             result.append("\nExpiration:");,             result.append(FastHttpDateFormat.formatDate(expiresAt, null));,             Enumeration<String> tokensList = tokens.elements();,             while (tokensList.hasMoreElements()) {,                 result.append("\nToken:");,                 result.append(tokensList.nextElement());,             },             result.append("\n");,             return result.toString();,         }, , ,         /**,          * Return true if the lock has expired.,          */,         public boolean hasExpired() {,             return (System.currentTimeMillis() > expiresAt);,         }, , ,         /**,          * Return true if the lock is exclusive.,          */,         public boolean isExclusive() {, ,             return (scope.equals("exclusive"));, ,         }, , ,         /**,          * Get an XML representation of this lock token. This method will,          * append an XML fragment to the given XML writer.,          */,         public void toXML(XMLWriter generatedXML) {, ,             generatedXML.writeElement("D", "activelock", XMLWriter.OPENING);, ,             generatedXML.writeElement("D", "locktype", XMLWriter.OPENING);,             generatedXML.writeElement("D", type, XMLWriter.NO_CONTENT);,             generatedXML.writeElement("D", "locktype", XMLWriter.CLOSING);, ,             generatedXML.writeElement("D", "lockscope", XMLWriter.OPENING);,             generatedXML.writeElement("D", scope, XMLWriter.NO_CONTENT);,             generatedXML.writeElement("D", "lockscope", XMLWriter.CLOSING);, ,             generatedXML.writeElement("D", "depth", XMLWriter.OPENING);,             if (depth == maxDepth) {,                 generatedXML.writeText("Infinity");,             } else {,                 generatedXML.writeText("0");,             },             generatedXML.writeElement("D", "depth", XMLWriter.CLOSING);, ,             generatedXML.writeElement("D", "owner", XMLWriter.OPENING);,             generatedXML.writeText(owner);,             generatedXML.writeElement("D", "owner", XMLWriter.CLOSING);, ,             generatedXML.writeElement("D", "timeout", XMLWriter.OPENING);,             long timeout = (expiresAt - System.currentTimeMillis()) / 1000;,             generatedXML.writeText("Second-" + timeout);,             generatedXML.writeElement("D", "timeout", XMLWriter.CLOSING);, ,             generatedXML.writeElement("D", "locktoken", XMLWriter.OPENING);,             Enumeration<String> tokensList = tokens.elements();,             while (tokensList.hasMoreElements()) {,                 generatedXML.writeElement("D", "href", XMLWriter.OPENING);,                 generatedXML.writeText("opaquelocktoken:",                                        + tokensList.nextElement());,                 generatedXML.writeElement("D", "href", XMLWriter.CLOSING);,             },             generatedXML.writeElement("D", "locktoken", XMLWriter.CLOSING);, ,             generatedXML.writeElement("D", "activelock", XMLWriter.CLOSING);, ,         }],,
BAD_PRACTICE,SE_BAD_FIELD,org/apache/catalina/servlets/WebdavServlet.java,,2494-2604,[        public LockInfo() {,             // Ignore,         }, , ,         // ------------------------------------------------- Instance Variables, , ,         String path = "/";,         String type = "write";,         String scope = "exclusive";,         int depth = 0;,         String owner = "";,         Vector<String> tokens = new Vector<>();,         long expiresAt = 0;,         Date creationDate = new Date();, , ,         // ----------------------------------------------------- Public Methods, , ,         /**,          * Get a String representation of this lock token.,          */,         @Override,         public String toString() {, ,             StringBuilder result =  new StringBuilder("Type:");,             result.append(type);,             result.append("\nScope:");,             result.append(scope);,             result.append("\nDepth:");,             result.append(depth);,             result.append("\nOwner:");,             result.append(owner);,             result.append("\nExpiration:");,             result.append(FastHttpDateFormat.formatDate(expiresAt, null));,             Enumeration<String> tokensList = tokens.elements();,             while (tokensList.hasMoreElements()) {,                 result.append("\nToken:");,                 result.append(tokensList.nextElement());,             },             result.append("\n");,             return result.toString();,         }, , ,         /**,          * Return true if the lock has expired.,          */,         public boolean hasExpired() {,             return (System.currentTimeMillis() > expiresAt);,         }, , ,         /**,          * Return true if the lock is exclusive.,          */,         public boolean isExclusive() {, ,             return (scope.equals("exclusive"));, ,         }, , ,         /**,          * Get an XML representation of this lock token. This method will,          * append an XML fragment to the given XML writer.,          */,         public void toXML(XMLWriter generatedXML) {, ,             generatedXML.writeElement("D", "activelock", XMLWriter.OPENING);, ,             generatedXML.writeElement("D", "locktype", XMLWriter.OPENING);,             generatedXML.writeElement("D", type, XMLWriter.NO_CONTENT);,             generatedXML.writeElement("D", "locktype", XMLWriter.CLOSING);, ,             generatedXML.writeElement("D", "lockscope", XMLWriter.OPENING);,             generatedXML.writeElement("D", scope, XMLWriter.NO_CONTENT);,             generatedXML.writeElement("D", "lockscope", XMLWriter.CLOSING);, ,             generatedXML.writeElement("D", "depth", XMLWriter.OPENING);,             if (depth == maxDepth) {,                 generatedXML.writeText("Infinity");,             } else {,                 generatedXML.writeText("0");,             },             generatedXML.writeElement("D", "depth", XMLWriter.CLOSING);, ,             generatedXML.writeElement("D", "owner", XMLWriter.OPENING);,             generatedXML.writeText(owner);,             generatedXML.writeElement("D", "owner", XMLWriter.CLOSING);, ,             generatedXML.writeElement("D", "timeout", XMLWriter.OPENING);,             long timeout = (expiresAt - System.currentTimeMillis()) / 1000;,             generatedXML.writeText("Second-" + timeout);,             generatedXML.writeElement("D", "timeout", XMLWriter.CLOSING);, ,             generatedXML.writeElement("D", "locktoken", XMLWriter.OPENING);,             Enumeration<String> tokensList = tokens.elements();,             while (tokensList.hasMoreElements()) {,                 generatedXML.writeElement("D", "href", XMLWriter.OPENING);,                 generatedXML.writeText("opaquelocktoken:",                                        + tokensList.nextElement());,                 generatedXML.writeElement("D", "href", XMLWriter.CLOSING);,             },             generatedXML.writeElement("D", "locktoken", XMLWriter.CLOSING);, ,             generatedXML.writeElement("D", "activelock", XMLWriter.CLOSING);, ,         }],,
STYLE,SF_SWITCH_NO_DEFAULT,org/apache/catalina/servlets/WebdavServlet.java,doLock,940-952,[                switch (currentNode.getNodeType()) {,                 case Node.TEXT_NODE:,                     break;,                 case Node.ELEMENT_NODE:,                     String nodeName = currentNode.getNodeName();,                     if (nodeName.endsWith("lockscope")) {,                         lockScopeNode = currentNode;,                     },                     if (nodeName.endsWith("locktype")) {,                         lockTypeNode = currentNode;,                     },                     if (nodeName.endsWith("owner")) {,                         lockOwnerNode = currentNode;],,doLock,963-972,[                    switch (currentNode.getNodeType()) {,                     case Node.TEXT_NODE:,                         break;,                     case Node.ELEMENT_NODE:,                         String tempScope = currentNode.getNodeName();,                         if (tempScope.indexOf(':') != -1) {,                             lock.scope = tempScope.substring,                                 (tempScope.indexOf(':') + 1);,                         } else {,                             lock.scope = tempScope;],,doLock,993-1002,[                    switch (currentNode.getNodeType()) {,                     case Node.TEXT_NODE:,                         break;,                     case Node.ELEMENT_NODE:,                         String tempType = currentNode.getNodeName();,                         if (tempType.indexOf(':') != -1) {,                             lock.type =,                                 tempType.substring(tempType.indexOf(':') + 1);,                         } else {,                             lock.type = tempType;],,doLock,1023-1031,[                    switch (currentNode.getNodeType()) {,                     case Node.TEXT_NODE:,                         lock.owner += currentNode.getNodeValue();,                         break;,                     case Node.ELEMENT_NODE:,                         strWriter = new StringWriter();,                         domWriter = new DOMWriter(strWriter, true);,                         domWriter.print(currentNode);,                         lock.owner += strWriter.toString();],,
STYLE,SF_SWITCH_NO_DEFAULT,org/apache/catalina/servlets/WebdavServlet.java,doPropfind,488-500,[                    switch (currentNode.getNodeType()) {,                     case Node.TEXT_NODE:,                         break;,                     case Node.ELEMENT_NODE:,                         if (currentNode.getNodeName().endsWith("prop")) {,                             type = FIND_BY_PROPERTY;,                             propNode = currentNode;,                         },                         if (currentNode.getNodeName().endsWith("propname")) {,                             type = FIND_PROPERTY_NAMES;,                         },                         if (currentNode.getNodeName().endsWith("allprop")) {,                             type = FIND_ALL_PROP;],,doPropfind,524-537,[                switch (currentNode.getNodeType()) {,                 case Node.TEXT_NODE:,                     break;,                 case Node.ELEMENT_NODE:,                     String nodeName = currentNode.getNodeName();,                     String propertyName = null;,                     if (nodeName.indexOf(':') != -1) {,                         propertyName = nodeName.substring,                             (nodeName.indexOf(':') + 1);,                     } else {,                         propertyName = nodeName;,                     },                     // href is a live property which is handled differently,                     properties.addElement(propertyName);],,
STYLE,SF_SWITCH_NO_DEFAULT,org/apache/catalina/servlets/WebdavServlet.java,parseLockNullProperties,2213-2386,[        switch (type) {, ,         case FIND_ALL_PROP :, ,             generatedXML.writeElement("D", "propstat", XMLWriter.OPENING);,             generatedXML.writeElement("D", "prop", XMLWriter.OPENING);, ,             generatedXML.writeProperty("D", "creationdate",,                     getISOCreationDate(lock.creationDate.getTime()));,             generatedXML.writeElement("D", "displayname", XMLWriter.OPENING);,             generatedXML.writeData(resourceName);,             generatedXML.writeElement("D", "displayname", XMLWriter.CLOSING);,             generatedXML.writeProperty("D", "getlastmodified",,                                        FastHttpDateFormat.formatDate,                                        (lock.creationDate.getTime(), null));,             generatedXML.writeProperty("D", "getcontentlength",,                     String.valueOf(0));,             generatedXML.writeProperty("D", "getcontenttype", "");,             generatedXML.writeProperty("D", "getetag", "");,             generatedXML.writeElement("D", "resourcetype", XMLWriter.OPENING);,             generatedXML.writeElement("D", "lock-null", XMLWriter.NO_CONTENT);,             generatedXML.writeElement("D", "resourcetype", XMLWriter.CLOSING);, ,             generatedXML.writeProperty("D", "source", "");, ,             String supportedLocks = "<D:lockentry>",                 + "<D:lockscope><D:exclusive/></D:lockscope>",                 + "<D:locktype><D:write/></D:locktype>",                 + "</D:lockentry>" + "<D:lockentry>",                 + "<D:lockscope><D:shared/></D:lockscope>",                 + "<D:locktype><D:write/></D:locktype>",                 + "</D:lockentry>";,             generatedXML.writeElement("D", "supportedlock", XMLWriter.OPENING);,             generatedXML.writeText(supportedLocks);,             generatedXML.writeElement("D", "supportedlock", XMLWriter.CLOSING);, ,             generateLockDiscovery(path, generatedXML);, ,             generatedXML.writeElement("D", "prop", XMLWriter.CLOSING);,             generatedXML.writeElement("D", "status", XMLWriter.OPENING);,             generatedXML.writeText(status);,             generatedXML.writeElement("D", "status", XMLWriter.CLOSING);,             generatedXML.writeElement("D", "propstat", XMLWriter.CLOSING);, ,             break;, ,         case FIND_PROPERTY_NAMES :, ,             generatedXML.writeElement("D", "propstat", XMLWriter.OPENING);,             generatedXML.writeElement("D", "prop", XMLWriter.OPENING);, ,             generatedXML.writeElement("D", "creationdate",,                                       XMLWriter.NO_CONTENT);,             generatedXML.writeElement("D", "displayname", XMLWriter.NO_CONTENT);,             generatedXML.writeElement("D", "getcontentlanguage",,                                       XMLWriter.NO_CONTENT);,             generatedXML.writeElement("D", "getcontentlength",,                                       XMLWriter.NO_CONTENT);,             generatedXML.writeElement("D", "getcontenttype",,                                       XMLWriter.NO_CONTENT);,             generatedXML.writeElement("D", "getetag", XMLWriter.NO_CONTENT);,             generatedXML.writeElement("D", "getlastmodified",,                                       XMLWriter.NO_CONTENT);,             generatedXML.writeElement("D", "resourcetype",,                                       XMLWriter.NO_CONTENT);,             generatedXML.writeElement("D", "source", XMLWriter.NO_CONTENT);,             generatedXML.writeElement("D", "lockdiscovery",,                                       XMLWriter.NO_CONTENT);, ,             generatedXML.writeElement("D", "prop", XMLWriter.CLOSING);,             generatedXML.writeElement("D", "status", XMLWriter.OPENING);,             generatedXML.writeText(status);,             generatedXML.writeElement("D", "status", XMLWriter.CLOSING);,             generatedXML.writeElement("D", "propstat", XMLWriter.CLOSING);, ,             break;, ,         case FIND_BY_PROPERTY :, ,             Vector<String> propertiesNotFound = new Vector<>();, ,             // Parse the list of properties, ,             generatedXML.writeElement("D", "propstat", XMLWriter.OPENING);,             generatedXML.writeElement("D", "prop", XMLWriter.OPENING);, ,             Enumeration<String> properties = propertiesVector.elements();, ,             while (properties.hasMoreElements()) {, ,                 String property = properties.nextElement();, ,                 if (property.equals("creationdate")) {,                     generatedXML.writeProperty("D", "creationdate",,                             getISOCreationDate(lock.creationDate.getTime()));,                 } else if (property.equals("displayname")) {,                     generatedXML.writeElement("D", "displayname",,                             XMLWriter.OPENING);,                     generatedXML.writeData(resourceName);,                     generatedXML.writeElement("D", "displayname",,                             XMLWriter.CLOSING);,                 } else if (property.equals("getcontentlanguage")) {,                     generatedXML.writeElement("D", "getcontentlanguage",,                             XMLWriter.NO_CONTENT);,                 } else if (property.equals("getcontentlength")) {,                     generatedXML.writeProperty("D", "getcontentlength",,                             (String.valueOf(0)));,                 } else if (property.equals("getcontenttype")) {,                     generatedXML.writeProperty("D", "getcontenttype", "");,                 } else if (property.equals("getetag")) {,                     generatedXML.writeProperty("D", "getetag", "");,                 } else if (property.equals("getlastmodified")) {,                     generatedXML.writeProperty,                         ("D", "getlastmodified",,                           FastHttpDateFormat.formatDate,                          (lock.creationDate.getTime(), null));,                 } else if (property.equals("resourcetype")) {,                     generatedXML.writeElement("D", "resourcetype",,                             XMLWriter.OPENING);,                     generatedXML.writeElement("D", "lock-null",,                             XMLWriter.NO_CONTENT);,                     generatedXML.writeElement("D", "resourcetype",,                             XMLWriter.CLOSING);,                 } else if (property.equals("source")) {,                     generatedXML.writeProperty("D", "source", "");,                 } else if (property.equals("supportedlock")) {,                     supportedLocks = "<D:lockentry>",                         + "<D:lockscope><D:exclusive/></D:lockscope>",                         + "<D:locktype><D:write/></D:locktype>",                         + "</D:lockentry>" + "<D:lockentry>",                         + "<D:lockscope><D:shared/></D:lockscope>",                         + "<D:locktype><D:write/></D:locktype>",                         + "</D:lockentry>";,                     generatedXML.writeElement("D", "supportedlock",,                             XMLWriter.OPENING);,                     generatedXML.writeText(supportedLocks);,                     generatedXML.writeElement("D", "supportedlock",,                             XMLWriter.CLOSING);,                 } else if (property.equals("lockdiscovery")) {,                     if (!generateLockDiscovery(path, generatedXML)),                         propertiesNotFound.addElement(property);,                 } else {,                     propertiesNotFound.addElement(property);,                 }, ,             }, ,             generatedXML.writeElement("D", "prop", XMLWriter.CLOSING);,             generatedXML.writeElement("D", "status", XMLWriter.OPENING);,             generatedXML.writeText(status);,             generatedXML.writeElement("D", "status", XMLWriter.CLOSING);,             generatedXML.writeElement("D", "propstat", XMLWriter.CLOSING);, ,             Enumeration<String> propertiesNotFoundList = propertiesNotFound.elements();, ,             if (propertiesNotFoundList.hasMoreElements()) {, ,                 status = "HTTP/1.1 " + WebdavStatus.SC_NOT_FOUND + " " +,                         WebdavStatus.getStatusText(WebdavStatus.SC_NOT_FOUND);, ,                 generatedXML.writeElement("D", "propstat", XMLWriter.OPENING);,                 generatedXML.writeElement("D", "prop", XMLWriter.OPENING);, ,                 while (propertiesNotFoundList.hasMoreElements()) {,                     generatedXML.writeElement,                         ("D", propertiesNotFoundList.nextElement(),,                          XMLWriter.NO_CONTENT);,                 }, ,                 generatedXML.writeElement("D", "prop", XMLWriter.CLOSING);,                 generatedXML.writeElement("D", "status", XMLWriter.OPENING);,                 generatedXML.writeText(status);,                 generatedXML.writeElement("D", "status", XMLWriter.CLOSING);,                 generatedXML.writeElement("D", "propstat", XMLWriter.CLOSING);],,
STYLE,SF_SWITCH_NO_DEFAULT,org/apache/catalina/servlets/WebdavServlet.java,parseProperties,1932-2152,[        switch (type) {, ,         case FIND_ALL_PROP :, ,             generatedXML.writeElement("D", "propstat", XMLWriter.OPENING);,             generatedXML.writeElement("D", "prop", XMLWriter.OPENING);, ,             generatedXML.writeProperty("D", "creationdate",,                     getISOCreationDate(resource.getCreation()));,             generatedXML.writeElement("D", "displayname", XMLWriter.OPENING);,             generatedXML.writeData(resourceName);,             generatedXML.writeElement("D", "displayname", XMLWriter.CLOSING);,             if (resource.isFile()) {,                 generatedXML.writeProperty,                     ("D", "getlastmodified", FastHttpDateFormat.formatDate,                            (resource.getLastModified(), null));,                 generatedXML.writeProperty,                     ("D", "getcontentlength",,                      String.valueOf(resource.getContentLength()));,                 String contentType = getServletContext().getMimeType(,                         resource.getName());,                 if (contentType != null) {,                     generatedXML.writeProperty("D", "getcontenttype",,                             contentType);,                 },                 generatedXML.writeProperty("D", "getetag",resource.getETag());,                 generatedXML.writeElement("D", "resourcetype",,                         XMLWriter.NO_CONTENT);,             } else {,                 generatedXML.writeElement("D", "resourcetype",,                         XMLWriter.OPENING);,                 generatedXML.writeElement("D", "collection",,                         XMLWriter.NO_CONTENT);,                 generatedXML.writeElement("D", "resourcetype",,                         XMLWriter.CLOSING);,             }, ,             generatedXML.writeProperty("D", "source", "");, ,             String supportedLocks = "<D:lockentry>",                 + "<D:lockscope><D:exclusive/></D:lockscope>",                 + "<D:locktype><D:write/></D:locktype>",                 + "</D:lockentry>" + "<D:lockentry>",                 + "<D:lockscope><D:shared/></D:lockscope>",                 + "<D:locktype><D:write/></D:locktype>",                 + "</D:lockentry>";,             generatedXML.writeElement("D", "supportedlock", XMLWriter.OPENING);,             generatedXML.writeText(supportedLocks);,             generatedXML.writeElement("D", "supportedlock", XMLWriter.CLOSING);, ,             generateLockDiscovery(path, generatedXML);, ,             generatedXML.writeElement("D", "prop", XMLWriter.CLOSING);,             generatedXML.writeElement("D", "status", XMLWriter.OPENING);,             generatedXML.writeText(status);,             generatedXML.writeElement("D", "status", XMLWriter.CLOSING);,             generatedXML.writeElement("D", "propstat", XMLWriter.CLOSING);, ,             break;, ,         case FIND_PROPERTY_NAMES :, ,             generatedXML.writeElement("D", "propstat", XMLWriter.OPENING);,             generatedXML.writeElement("D", "prop", XMLWriter.OPENING);, ,             generatedXML.writeElement("D", "creationdate",,                                       XMLWriter.NO_CONTENT);,             generatedXML.writeElement("D", "displayname", XMLWriter.NO_CONTENT);,             if (resource.isFile()) {,                 generatedXML.writeElement("D", "getcontentlanguage",,                         XMLWriter.NO_CONTENT);,                 generatedXML.writeElement("D", "getcontentlength",,                         XMLWriter.NO_CONTENT);,                 generatedXML.writeElement("D", "getcontenttype",,                         XMLWriter.NO_CONTENT);,                 generatedXML.writeElement("D", "getetag", XMLWriter.NO_CONTENT);,                 generatedXML.writeElement("D", "getlastmodified",,                         XMLWriter.NO_CONTENT);,             },             generatedXML.writeElement("D", "resourcetype",,                                       XMLWriter.NO_CONTENT);,             generatedXML.writeElement("D", "source", XMLWriter.NO_CONTENT);,             generatedXML.writeElement("D", "lockdiscovery",,                                       XMLWriter.NO_CONTENT);, ,             generatedXML.writeElement("D", "prop", XMLWriter.CLOSING);,             generatedXML.writeElement("D", "status", XMLWriter.OPENING);,             generatedXML.writeText(status);,             generatedXML.writeElement("D", "status", XMLWriter.CLOSING);,             generatedXML.writeElement("D", "propstat", XMLWriter.CLOSING);, ,             break;, ,         case FIND_BY_PROPERTY :, ,             Vector<String> propertiesNotFound = new Vector<>();, ,             // Parse the list of properties, ,             generatedXML.writeElement("D", "propstat", XMLWriter.OPENING);,             generatedXML.writeElement("D", "prop", XMLWriter.OPENING);, ,             Enumeration<String> properties = propertiesVector.elements();, ,             while (properties.hasMoreElements()) {, ,                 String property = properties.nextElement();, ,                 if (property.equals("creationdate")) {,                     generatedXML.writeProperty,                         ("D", "creationdate",,                          getISOCreationDate(resource.getCreation()));,                 } else if (property.equals("displayname")) {,                     generatedXML.writeElement,                         ("D", "displayname", XMLWriter.OPENING);,                     generatedXML.writeData(resourceName);,                     generatedXML.writeElement,                         ("D", "displayname", XMLWriter.CLOSING);,                 } else if (property.equals("getcontentlanguage")) {,                     if (resource.isDirectory()) {,                         propertiesNotFound.addElement(property);,                     } else {,                         generatedXML.writeElement("D", "getcontentlanguage",,                                                   XMLWriter.NO_CONTENT);,                     },                 } else if (property.equals("getcontentlength")) {,                     if (resource.isDirectory()) {,                         propertiesNotFound.addElement(property);,                     } else {,                         generatedXML.writeProperty,                             ("D", "getcontentlength",,                              (String.valueOf(resource.getContentLength())));,                     },                 } else if (property.equals("getcontenttype")) {,                     if (resource.isDirectory()) {,                         propertiesNotFound.addElement(property);,                     } else {,                         generatedXML.writeProperty,                             ("D", "getcontenttype",,                              getServletContext().getMimeType,                              (resource.getName()));,                     },                 } else if (property.equals("getetag")) {,                     if (resource.isDirectory()) {,                         propertiesNotFound.addElement(property);,                     } else {,                         generatedXML.writeProperty,                             ("D", "getetag", resource.getETag());,                     },                 } else if (property.equals("getlastmodified")) {,                     if (resource.isDirectory()) {,                         propertiesNotFound.addElement(property);,                     } else {,                         generatedXML.writeProperty,                             ("D", "getlastmodified", FastHttpDateFormat.formatDate,                                     (resource.getLastModified(), null));,                     },                 } else if (property.equals("resourcetype")) {,                     if (resource.isDirectory()) {,                         generatedXML.writeElement("D", "resourcetype",,                                 XMLWriter.OPENING);,                         generatedXML.writeElement("D", "collection",,                                 XMLWriter.NO_CONTENT);,                         generatedXML.writeElement("D", "resourcetype",,                                 XMLWriter.CLOSING);,                     } else {,                         generatedXML.writeElement("D", "resourcetype",,                                 XMLWriter.NO_CONTENT);,                     },                 } else if (property.equals("source")) {,                     generatedXML.writeProperty("D", "source", "");,                 } else if (property.equals("supportedlock")) {,                     supportedLocks = "<D:lockentry>",                         + "<D:lockscope><D:exclusive/></D:lockscope>",                         + "<D:locktype><D:write/></D:locktype>",                         + "</D:lockentry>" + "<D:lockentry>",                         + "<D:lockscope><D:shared/></D:lockscope>",                         + "<D:locktype><D:write/></D:locktype>",                         + "</D:lockentry>";,                     generatedXML.writeElement("D", "supportedlock",,                             XMLWriter.OPENING);,                     generatedXML.writeText(supportedLocks);,                     generatedXML.writeElement("D", "supportedlock",,                             XMLWriter.CLOSING);,                 } else if (property.equals("lockdiscovery")) {,                     if (!generateLockDiscovery(path, generatedXML)),                         propertiesNotFound.addElement(property);,                 } else {,                     propertiesNotFound.addElement(property);,                 }, ,             }, ,             generatedXML.writeElement("D", "prop", XMLWriter.CLOSING);,             generatedXML.writeElement("D", "status", XMLWriter.OPENING);,             generatedXML.writeText(status);,             generatedXML.writeElement("D", "status", XMLWriter.CLOSING);,             generatedXML.writeElement("D", "propstat", XMLWriter.CLOSING);, ,             Enumeration<String> propertiesNotFoundList =,                 propertiesNotFound.elements();, ,             if (propertiesNotFoundList.hasMoreElements()) {, ,                 status = "HTTP/1.1 " + WebdavStatus.SC_NOT_FOUND + " " +,                         WebdavStatus.getStatusText(WebdavStatus.SC_NOT_FOUND);, ,                 generatedXML.writeElement("D", "propstat", XMLWriter.OPENING);,                 generatedXML.writeElement("D", "prop", XMLWriter.OPENING);, ,                 while (propertiesNotFoundList.hasMoreElements()) {,                     generatedXML.writeElement,                         ("D", propertiesNotFoundList.nextElement(),,                          XMLWriter.NO_CONTENT);,                 }, ,                 generatedXML.writeElement("D", "prop", XMLWriter.CLOSING);,                 generatedXML.writeElement("D", "status", XMLWriter.OPENING);,                 generatedXML.writeText(status);,                 generatedXML.writeElement("D", "status", XMLWriter.CLOSING);,                 generatedXML.writeElement("D", "propstat", XMLWriter.CLOSING);],,
STYLE,BC_UNCONFIRMED_CAST,org/apache/catalina/session/FileStore.java,save,335-335,[            ((StandardSession)session).writeObjectData(oos);],,
STYLE,NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE,org/apache/catalina/session/FileStore.java,getSize,152-152,[        for (int i = 0; i < files.length; i++) {],,getSize,148-148,[        String files[] = file.list();],,
BAD_PRACTICE,RV_RETURN_VALUE_IGNORED_BAD_PRACTICE,org/apache/catalina/session/FileStore.java,remove,307-307,[        file.delete();],,
STYLE,BC_UNCONFIRMED_CAST,org/apache/catalina/session/JDBCStore.java,save,785-785,[                        ((StandardSession) session).writeObjectData(oos);],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/catalina/session/JDBCStore.java,,457-457,[        return this.dataSourceName;],,,450-450,[        this.dataSourceName = dataSourceName;],,,1011-1011,[        if (dataSourceName == null) {],,,870-870,[        if (dataSourceName != null && dataSource == null) {],,,875-875,[                this.dataSource = (DataSource) envCtx.lookup(this.dataSourceName);],,,878-878,[                        sm.getString(getStoreName() + ".wrongDataSource",],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/catalina/session/JDBCStore.java,,336-336,[        return (this.sessionAppCol);],,,325-325,[        String oldSessionAppCol = this.sessionAppCol;],,,326-326,[        this.sessionAppCol = sessionAppCol;],,,327-327,[        support.firePropertyChange("sessionAppCol",],,,792-792,[                            String saveSql = "INSERT INTO " + sessionTable + " ("],,,708-708,[            String removeSql = "DELETE FROM " + sessionTable],,,537-537,[                        String sizeSql = "SELECT COUNT(" + sessionIdCol],,,482-482,[                        String keysSql = "SELECT " + sessionIdCol + " FROM "],,,737-737,[                        String clearSql = "DELETE FROM " + sessionTable],,,593-593,[                        String loadSql = "SELECT " + sessionIdCol + ", "],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/catalina/session/JDBCStore.java,,345-345,[        String oldSessionIdCol = this.sessionIdCol;],,,346-346,[        this.sessionIdCol = sessionIdCol;],,,347-347,[        support.firePropertyChange("sessionIdCol",],,,356-356,[        return (this.sessionIdCol);],,,792-792,[                            String saveSql = "INSERT INTO " + sessionTable + " ("],,,708-708,[            String removeSql = "DELETE FROM " + sessionTable],,,537-537,[                        String sizeSql = "SELECT COUNT(" + sessionIdCol],,,482-482,[                        String keysSql = "SELECT " + sessionIdCol + " FROM "],,,593-593,[                        String loadSql = "SELECT " + sessionIdCol + ", "],,
CORRECTNESS,NP_NULL_ON_SOME_PATH_EXCEPTION,org/apache/catalina/session/JDBCStore.java,open,910-910,[        dbConnection = driver.connect(connectionURL, props);],,open,888-888,[        if (driver == null) {],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/session/JDBCStore.java,keys,491-491,[                        if (rst != null) {],,
SECURITY,SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING,org/apache/catalina/session/JDBCStore.java,load,597-597,[                        preparedLoadSql = _conn.prepareStatement(loadSql);],,
SECURITY,SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING,org/apache/catalina/session/JDBCStore.java,save,798-798,[                           preparedSaveSql = _conn.prepareStatement(saveSql);],,
SECURITY,SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING,org/apache/catalina/session/JDBCStore.java,clear,739-739,[                        preparedClearSql = _conn.prepareStatement(clearSql);],,
SECURITY,SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING,org/apache/catalina/session/JDBCStore.java,getSize,540-540,[                        preparedSizeSql = _conn.prepareStatement(sizeSql);],,
SECURITY,SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING,org/apache/catalina/session/JDBCStore.java,keys,485-485,[                        preparedKeysSql = _conn.prepareStatement(keysSql);],,
SECURITY,SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING,org/apache/catalina/session/JDBCStore.java,remove,711-711,[            preparedRemoveSql = _conn.prepareStatement(removeSql);],,
PERFORMANCE,SS_SHOULD_BE_STATIC,org/apache/catalina/session/JDBCStore.java,,70-70,[    protected final String threadName = "JDBCStore";],,
MT_CORRECTNESS,VO_VOLATILE_INCREMENT,org/apache/catalina/session/ManagerBase.java,generateSessionId,866-866,[                duplicates++;],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/catalina/session/StandardManager.java,doUnload,394-394,[                oos.writeObject(new Integer(sessions.size()));],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/session/StandardManager.java,doLoad,242-242,[            if (bis != null) {],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/session/StandardManager.java,doLoad,235-235,[            if (fis != null) {],,
BAD_PRACTICE,RV_RETURN_VALUE_IGNORED_BAD_PRACTICE,org/apache/catalina/session/StandardManager.java,doLoad,289-289,[                    file.delete();],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/catalina/session/StandardSession.java,expire,854-854,[                                } catch (Exception e) {],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/catalina/session/StandardSession.java,removeAttributeInternal,1841-1841,[                } catch (Exception e) {],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/catalina/session/StandardSession.java,tellNew,421-421,[                    } catch (Exception e) {],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/catalina/session/StandardSession.java,,175-175,[    protected static final String[] excludedAttributes = {],,
STYLE,REC_CATCH_EXCEPTION,org/apache/catalina/session/StandardSession.java,setAttribute,1560-1560,[                } catch (Exception e) {],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/catalina/session/StandardSession.java,,668-671,[                        new PrivilegedAction<StandardSessionFacade>(){,                     @Override,                     public StandardSessionFacade run(){,                         return new StandardSessionFacade(fsession);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/catalina/ssi/ExpressionParseTree.java,pushOpp,77-77,[            oppStack.add(0, node);],,
I18N,DM_DEFAULT_ENCODING,org/apache/catalina/ssi/SSIExec.java,process,62-62,[                        new InputStreamReader(proc.getInputStream()));],,process,64-64,[                        new InputStreamReader(proc.getErrorStream()));],,
STYLE,UCF_USELESS_CONTROL_FLOW,org/apache/catalina/ssi/SSIExec.java,process,74-74,[                if (!foundProgram) {],,
STYLE,BC_UNCONFIRMED_CAST,org/apache/catalina/ssi/SSIFilter.java,doFilter,103-103,[        HttpServletRequest req = (HttpServletRequest)request;],,
STYLE,BC_UNCONFIRMED_CAST,org/apache/catalina/ssi/SSIFilter.java,doFilter,104-104,[        HttpServletResponse res = (HttpServletResponse)response;],,
I18N,DM_DEFAULT_ENCODING,org/apache/catalina/ssi/SSIFilter.java,doFilter,178-178,[            res.getWriter().write(new String(bytes));],,
STYLE,DLS_DEAD_LOCAL_STORE_OF_NULL,org/apache/catalina/ssi/SSIProcessor.java,process,102-102,[        stringWriter = null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/catalina/ssi/SSIProcessor.java,parseParamValues,273-273,[                if (bIdx == cmd.length()) return null;],,
I18N,DM_DEFAULT_ENCODING,org/apache/catalina/ssi/SSIServlet.java,processSSI,209-209,[            isr = new InputStreamReader(resourceInputStream);],,
I18N,DM_DEFAULT_ENCODING,org/apache/catalina/ssi/SSIServletExternalResolver.java,getFileText,543-543,[                retVal = new String( bytes );],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/ssi/SSIServletExternalResolver.java,getPathWithoutContext,432-432,[            if (noContext == null) {],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/catalina/startup/Bootstrap.java,createClassLoader,178-178,[                URL url = new URL(repository);],,
BAD_PRACTICE,DM_EXIT,org/apache/catalina/startup/Bootstrap.java,initClassLoaders,156-156,[            System.exit(1);],,
MT_CORRECTNESS,LI_LAZY_INIT_STATIC,org/apache/catalina/startup/Bootstrap.java,main,451-461,[        if (daemon == null) {,             // Don't set daemon until init() has completed,             Bootstrap bootstrap = new Bootstrap();,             try {,                 bootstrap.init();,             } catch (Throwable t) {,                 handleThrowable(t);,                 t.printStackTrace();,                 return;,             },             daemon = bootstrap;],,
BAD_PRACTICE,DM_EXIT,org/apache/catalina/startup/Catalina.java,stopServer,435-435,[                System.exit(1);],,stopServer,462-462,[                System.exit(1);],,stopServer,465-465,[                System.exit(1);],,stopServer,469-469,[            System.exit(1);],,
EXPERIMENTAL,OBL_UNSATISFIED_OBLIGATION,org/apache/catalina/startup/Catalina.java,load,494-494,[            inputStream = new FileInputStream(file);],,load,495-495,[            inputSource = new InputSource(file.toURI().toURL().toString());],,load,500-500,[        }],,load,501-501,[        if (inputStream == null) {],,load,518-518,[        if (inputStream == null) {],,load,534-534,[        if (inputStream == null || inputSource == null) {],,load,535-535,[            if  (file == null) {],,load,539-539,[                log.warn(sm.getString("catalina.configFail",],,load,540-540,[                        file.getAbsolutePath()));],,load,541-541,[                if (file.exists() && !file.canRead()) {],,load,545-545,[            return;],,
BAD_PRACTICE,OS_OPEN_STREAM,org/apache/catalina/startup/Catalina.java,load,494-494,[            inputStream = new FileInputStream(file);],,
STYLE,REC_CATCH_EXCEPTION,org/apache/catalina/startup/Catalina.java,addClusterRuleSet,378-378,[        } catch (Exception e) {],,
STYLE,REC_CATCH_EXCEPTION,org/apache/catalina/startup/Catalina.java,load,496-496,[        } catch (Exception e) {],,
STYLE,REC_CATCH_EXCEPTION,org/apache/catalina/startup/Catalina.java,stopServer,433-433,[            } catch (Exception e) {],,
STYLE,NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE,org/apache/catalina/startup/ClassLoaderFactory.java,createClassLoader,193-193,[                    for (int j = 0; j < filenames.length; j++) {],,createClassLoader,192-192,[                    String filenames[] = directory.list();],,
STYLE,NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE,org/apache/catalina/startup/ClassLoaderFactory.java,createClassLoader,106-106,[                for (int j = 0; j < filenames.length; j++) {],,createClassLoader,105-105,[                String filenames[] = directory.list();],,
BAD_PRACTICE,BIT_SIGNED_CHECK,org/apache/catalina/startup/ContextConfig.java,checkHandlesTypes,2032-2032,[        if ((javaClass.getAccessFlags() &],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/catalina/startup/ContextConfig.java,,464-464,[        if (context instanceof StandardContext) {],,,465-465,[            defaultContextXml = ((StandardContext)context).getDefaultContextXml();],,,472-472,[        if (!context.getOverride()) {],,,499-499,[        if (context.getConfigFile() != null) {],,,500-500,[            processContextConfig(digester, context.getConfigFile());],,,475-475,[                defaultContextFile =],,,1061-1061,[        if (context.getParent() instanceof Host) {],,,1062-1062,[            file = ((Host)context.getParent()).getConfigBaseFile();],,,512-512,[            log.debug("Processing context [" + context.getName()],,,552-552,[            log.error(sm.getString("contextConfig.contextParse",],,,559-559,[            log.error(sm.getString("contextConfig.contextParse",],,,537-537,[            digester.push(context.getParent());],,,538-538,[            digester.push(context);],,,548-548,[                log.debug("Successfully processed context [" + context.getName()],,,297-297,[            context = (Context) event.getLifecycle();],,,311-311,[                context.setDocBase(originalDocBase);],,,1025-1025,[        SecurityConstraint constraints[] = context.findConstraints();],,,1038-1038,[        Container wrappers[] = context.findChildren();],,,1042-1042,[            if ((runAs != null) && !context.findSecurityRole(runAs)) {],,,1029-1029,[                if (!"*".equals(roles[j]) &&],,,1049-1049,[                if ((link != null) && !context.findSecurityRole(link)) {],,,1044-1044,[                context.addSecurityRole(runAs);],,,1032-1032,[                    context.addSecurityRole(roles[j]);],,,1051-1051,[                    context.addSecurityRole(link);],,,668-668,[        if ((context instanceof StandardContext)],,,671-671,[            Host host = (Host) context.getParent();],,,672-672,[            String docBase = context.getDocBase();],,,683-683,[            String path = context.getPath();],,,687-687,[            ContextName cn = new ContextName(path, context.getWebappVersion());],,,702-702,[                log.debug("Anti locking context[" + context.getName()],,,710-710,[                context.setDocBase(antiLockingDocBase.getPath());],,,824-824,[        Container[] children = context.findChildren();],,,840-840,[        SecurityConstraint[] securityConstraints = context.findConstraints();],,,826-826,[            context.removeChild(children[i]);],,,862-862,[        ErrorPage[] errorPages = context.findErrorPages();],,,842-842,[            context.removeConstraint(securityConstraints[i]);],,,868-868,[        FilterDef[] filterDefs = context.findFilterDefs();],,,864-864,[            context.removeErrorPage(errorPages[i]);],,,874-874,[        FilterMap[] filterMaps = context.findFilterMaps();],,,870-870,[            context.removeFilterDef(filterDefs[i]);],,,888-888,[        String[] mimeMappings = context.findMimeMappings();],,,876-876,[            context.removeFilterMap(filterMaps[i]);],,,894-894,[        String[] parameters = context.findParameters();],,,890-890,[            context.removeMimeMapping(mimeMappings[i]);],,,925-925,[        String[] securityRoles = context.findSecurityRoles();],,,896-896,[            context.removeParameter(parameters[i]);],,,931-931,[        String[] servletMappings = context.findServletMappings();],,,927-927,[            context.removeSecurityRole(securityRoles[i]);],,,939-939,[        String[] welcomeFiles = context.findWelcomeFiles();],,,933-933,[            context.removeServletMapping(servletMappings[i]);],,,945-945,[        String[] wrapperLifecycles = context.findWrapperLifecycles();],,,941-941,[            context.removeWelcomeFile(welcomeFiles[i]);],,,951-951,[        String[] wrapperListeners = context.findWrapperListeners();],,,947-947,[            context.removeWrapperLifecycle(wrapperLifecycles[i]);],,,953-953,[            context.removeWrapperListener(wrapperListeners[i]);],,,580-580,[        Host host = (Host) context.getParent();],,,583-583,[        String docBase = context.getDocBase();],,,586-586,[            String path = context.getPath();],,,590-590,[            ContextName cn = new ContextName(path, context.getWebappVersion());],,,603-603,[        ContextName cn = new ContextName(context.getPath(),],,,610-610,[            if (unpackWARs && context instanceof StandardContext) {],,,611-611,[                unpackWARs =  ((StandardContext) context).getUnpackWAR();],,,645-645,[                if (context instanceof StandardContext) {],,,646-646,[                    ((StandardContext) context).setOriginalDocBase(origDocBase);],,,661-661,[        context.setDocBase(docBase);],,,621-621,[                if (context instanceof StandardContext) {],,,622-622,[                    ((StandardContext) context).setOriginalDocBase(origDocBase);],,,997-997,[        Container c = context;],,,1546-1546,[            Wrapper w = (Wrapper) context.findChild("jsp");],,,1597-1597,[            WebappServiceLoader<ServletContainerInitializer> loader =],,,1601-1601,[            log.error(sm.getString(],,,773-773,[        if (!context.getIgnoreAnnotations()) {],,,765-765,[            log.debug(sm.getString("contextConfig.xmlSettings",],,,766-766,[                    context.getName(),],,,803-803,[            context.setConfigured(true);],,,788-788,[            Pipeline pipeline = context.getPipeline();],,,767-767,[                    Boolean.valueOf(context.getXmlValidation()),],,,806-806,[            context.setConfigured(false);],,,1839-1839,[        JarScanner jarScanner = context.getJarScanner();],,,1841-1841,[        if (context instanceof StandardContext) {],,,1842-1842,[            delegate = ((StandardContext) context).getDelegate();],,,1855-1855,[        jarScanner.scan(JarScanType.PLUGGABILITY,],,,1846-1846,[        if (absoluteOrder != null && absoluteOrder.isEmpty() &&],,,1111-1111,[        ServletContext sContext = context.getServletContext();],,,1135-1135,[                WebResource[] webResources =],,,1192-1192,[        if (context.getLogEffectiveWebXml()) {],,,1227-1227,[                    context.addServletContainerInitializer(],,,1224-1224,[                    context.addServletContainerInitializer(],,,1452-1452,[        Host host = (Host) context.getParent();],,,1742-1742,[        ServletContext servletContext = context.getServletContext();],,,1769-1769,[                log.debug(sm.getString("contextConfig.applicationMissing") + " " + context);],,,746-746,[            log.error(sm.getString(],,,350-350,[        LoginConfig loginConfig = context.getLoginConfig();],,,352-352,[        SecurityConstraint constraints[] = context.findConstraints();],,,353-353,[        if (context.getIgnoreAnnotations() &&],,,368-368,[        if (context.getAuthenticator() != null) {],,,363-363,[                context.setLoginConfig(loginConfig);],,,373-373,[        if (context.getRealm() == null) {],,,422-422,[            Pipeline pipeline = context.getPipeline();],,,2049-2049,[                    throw new IllegalStateException(sm.getString(],,,2057-2057,[                clazz = Introspection.loadClass(context, className);],,,2085-2085,[                                    clazz = Introspection.loadClass(],,,1568-1568,[            if (context.isServlet22()) {],,,728-728,[        context.setConfigured(false);],,,733-733,[        webXmlParser = new WebXmlParser(context.getXmlNamespaceAware(),],,,734-734,[                context.getXmlValidation(), context.getXmlBlockExternal());],,,2148-2148,[            try (InputStream is = context.getLoader().getClassLoader().getResourceAsStream(name)) {],,,987-987,[        if (context instanceof StandardContext) {],,,988-988,[            String workDir = ((StandardContext) context).getWorkPath();],,,1702-1702,[        if (defaultWebXml == null && context instanceof StandardContext) {],,,1703-1703,[            defaultWebXml = ((StandardContext) context).getDefaultWebXml();],,,1714-1714,[        return getWebXmlSource(defaultWebXml,],,,334-334,[        WebAnnotationSet.loadApplicationAnnotations(context);],,,337-337,[        if (context instanceof StandardContext) {],,,338-338,[            ((StandardContext) context).setStartupTime(t2-t1+],,,1686-1686,[                log.error(sm.getString("contextConfig.resourceJarFail", url,],,,1689-1689,[                log.error(sm.getString("contextConfig.resourceJarFail", url,],,,1667-1667,[                                context.getResources().createWebResourceSet(],,,1680-1680,[                        context.getResources().createWebResourceSet(],,,1239-1239,[        context.setPublicId(webxml.getPublicId());],,,1242-1242,[        context.setEffectiveMajorVersion(webxml.getMajorVersion());],,,1243-1243,[        context.setEffectiveMinorVersion(webxml.getMinorVersion());],,,1248-1248,[        context.setDenyUncoveredHttpMethods(],,,1250-1250,[        context.setDisplayName(webxml.getDisplayName());],,,1246-1246,[            context.addParameter(entry.getKey(), entry.getValue());],,,1251-1251,[        context.setDistributable(webxml.isDistributable());],,,1253-1253,[            context.getNamingResources().addLocalEjb(ejbLocalRef);],,,1256-1256,[            context.getNamingResources().addEjb(ejbRef);],,,1259-1259,[            context.getNamingResources().addEnvironment(environment);],,,1262-1262,[            context.addErrorPage(errorPage);],,,1268-1268,[            context.addFilterDef(filter);],,,1273-1273,[        context.setJspConfigDescriptor(webxml.getJspConfigDescriptor());],,,1271-1271,[            context.addFilterMap(filterMap);],,,1275-1275,[            context.addApplicationListener(listener);],,,1284-1284,[            context.setLoginConfig(webxml.getLoginConfig());],,,1279-1279,[            context.addLocaleEncodingMappingParameter(entry.getKey(),],,,1293-1293,[        context.setIgnoreAnnotations(webxml.isMetadataComplete());],,,1288-1288,[            context.getNamingResources().addMessageDestinationRef(mdr);],,,1296-1296,[            context.addMimeMapping(entry.getKey(), entry.getValue());],,,1301-1301,[            context.getNamingResources().addResourceEnvRef(resource);],,,1304-1304,[            context.getNamingResources().addResource(resource);],,,1313-1313,[            context.addConstraint(constraint);],,,1316-1316,[            context.addSecurityRole(role);],,,1319-1319,[            context.getNamingResources().addService(service);],,,1322-1322,[            Wrapper wrapper = context.createWrapper();],,,1372-1372,[            context.addServletMapping(entry.getKey(), entry.getValue());],,,1380-1380,[            SessionCookieConfig scc =],,,1377-1377,[                context.setSessionTimeout(],,,1412-1412,[                context.addWelcomeFile(welcomeFile);],,,1419-1419,[            String jspServletName = context.findServletMapping("*.jsp");],,,1423-1423,[            if (context.findChild(jspServletName) != null) {],,,1439-1439,[            context.addPostConstructMethod(entry.getKey(), entry.getValue());],,,1396-1396,[                context.getServletContext().setSessionTrackingModes(],,,1425-1425,[                    context.addServletMapping(urlPattern, jspServletName, true);],,,1368-1368,[            context.addChild(wrapper);],,,1444-1444,[            context.addPreDestroyMethod(entry.getKey(), entry.getValue());],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/catalina/startup/ContextConfig.java,,561-561,[            ok = false;],,,545-545,[                ok = false;],,,557-557,[            ok = false;],,,966-966,[        ok = true;],,,1605-1605,[            ok = false;],,,776-776,[        if (ok) {],,,781-781,[        if (ok) {],,,802-802,[        if (ok) {],,,1859-1859,[            ok = false;],,,1108-1108,[            ok = false;],,,1127-1127,[        if (ok) {],,,1134-1134,[            if (ok) {],,,1148-1148,[            if (ok) {],,,1160-1160,[            if (ok) {],,,1170-1170,[            if (ok) {],,,1161-1161,[                ok = webXml.merge(orderedFragments);],,,1175-1175,[            if (ok) {],,,1198-1198,[        if (ok) {],,,1219-1219,[        if (ok) {],,,1516-1516,[                    ok = false;],,,1526-1526,[                ok = false;],,,375-375,[            ok = false;],,,392-392,[                ok = false;],,,403-403,[                ok = false;],,,417-417,[                ok = false;],,,729-729,[        ok = true;],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/catalina/startup/ContextConfig.java,,156-156,[    protected static long deploymentCount = 0L;],,
EXPERIMENTAL,OBL_UNSATISFIED_OBLIGATION,org/apache/catalina/startup/ContextConfig.java,getContextWebXmlSource,1747-1747,[                    stream = new FileInputStream(altDDName);],,getContextWebXmlSource,1748-1748,[                    url = new File(altDDName).toURI().toURL();],,getContextWebXmlSource,1754-1754,[                }],,getContextWebXmlSource,1767-1767,[        if (stream == null || url == null) {],,getContextWebXmlSource,1779-1779,[            source = new InputSource(url.toExternalForm());],,getContextWebXmlSource,1780-1780,[            source.setByteStream(stream);],,getContextWebXmlSource,1783-1783,[        return source;],,
EXPERIMENTAL,OBL_UNSATISFIED_OBLIGATION,org/apache/catalina/startup/ContextConfig.java,getWebXmlSource,1813-1813,[                stream = new FileInputStream(file);],,getWebXmlSource,1816-1816,[            if (stream != null && source != null) {],,getWebXmlSource,1822-1822,[        }],,getWebXmlSource,1824-1824,[        return source;],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/startup/ContextConfig.java,webConfig,1202-1202,[            if (orderedFragments != null) {],,
STYLE,REC_CATCH_EXCEPTION,org/apache/catalina/startup/ContextConfig.java,getWebXmlSource,1819-1819,[        } catch (Exception e) {],,
STYLE,ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD,org/apache/catalina/startup/ContextConfig.java,antiLocking,692-692,[                        System.getProperty("java.io.tmpdir"),],,antiLocking,696-696,[                        System.getProperty("java.io.tmpdir"),],,
PERFORMANCE,SBSC_USE_STRINGBUFFER_CONCATENATION,org/apache/catalina/startup/CredentialHandlerRuleSet.java,addRuleInstances,91-91,[            pattern += "CredentialHandler";],,
BAD_PRACTICE,RV_RETURN_VALUE_IGNORED_BAD_PRACTICE,org/apache/catalina/startup/ExpandWar.java,deleteDir,307-307,[                file.delete();],,
BAD_PRACTICE,RV_RETURN_VALUE_IGNORED_BAD_PRACTICE,org/apache/catalina/startup/ExpandWar.java,expand,132-132,[                        expandedFile.setLastModified(lastModified);],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/catalina/startup/FailedContext.java,getMBeanKeyProperties,156-156,[                keyProperties.append(containerCount++);],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/catalina/startup/FailedContext.java,findApplicationListeners,485-485,[    public String[] findApplicationListeners() { return null; }],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/catalina/startup/FailedContext.java,findApplicationParameters,492-492,[    public ApplicationParameter[] findApplicationParameters() { return null; }],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/catalina/startup/FailedContext.java,findConstraints,499-499,[    public SecurityConstraint[] findConstraints() { return null; }],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/catalina/startup/FailedContext.java,findContainerListeners,282-282,[    public ContainerListener[] findContainerListeners() { return null; }],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/catalina/startup/FailedContext.java,findErrorPages,510-510,[    public ErrorPage[] findErrorPages() { return null; }],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/catalina/startup/FailedContext.java,findFilterDefs,519-519,[    public FilterDef[] findFilterDefs() { return null; }],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/catalina/startup/FailedContext.java,findFilterMaps,528-528,[    public FilterMap[] findFilterMaps() { return null; }],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/catalina/startup/FailedContext.java,findInstanceListeners,535-535,[    public String[] findInstanceListeners() { return null; }],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/catalina/startup/FailedContext.java,findMimeMappings,547-547,[    public String[] findMimeMappings() { return null; }],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/catalina/startup/FailedContext.java,findParameters,556-556,[    public String[] findParameters() { return null; }],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/catalina/startup/FailedContext.java,findSecurityRoles,572-572,[    public String[] findSecurityRoles() { return null; }],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/catalina/startup/FailedContext.java,findServletMappings,584-584,[    public String[] findServletMappings() { return null; }],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/catalina/startup/FailedContext.java,findStatusPages,617-617,[    public int[] findStatusPages() { return null; }],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/catalina/startup/FailedContext.java,findWelcomeFiles,593-593,[    public String[] findWelcomeFiles() { return null; }],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/catalina/startup/FailedContext.java,findWrapperLifecycles,600-600,[    public String[] findWrapperLifecycles() { return null; }],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/catalina/startup/FailedContext.java,findWrapperListeners,607-607,[    public String[] findWrapperListeners() { return null; }],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/catalina/startup/FailedContext.java,getApplicationEventListeners,313-313,[    public Object[] getApplicationEventListeners() { return null; }],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/catalina/startup/FailedContext.java,getApplicationLifecycleListeners,318-318,[    public Object[] getApplicationLifecycleListeners() { return null; }],,
STYLE,NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE,org/apache/catalina/startup/HomesUserDatabase.java,init,135-135,[        for (int i = 0; i < homeBaseFiles.length; i++) {],,init,133-133,[        String homeBaseFiles[] = homeBaseDir.list();],,
CORRECTNESS,NP_NULL_ON_SOME_PATH_EXCEPTION,org/apache/catalina/startup/HostConfig.java,deployDescriptor,591-591,[            if (context.getDocBase() != null) {],,deployDescriptor,530-530,[        try (FileInputStream fis = new FileInputStream(contextXml)) {],,deployDescriptor,540-540,[                        context = new FailedContext();],,
CORRECTNESS,NP_NULL_ON_SOME_PATH_EXCEPTION,org/apache/catalina/startup/HostConfig.java,deployDescriptor,591-591,[            if (context.getDocBase() != null) {],,deployDescriptor,539-539,[                    if (context == null) {],,deployDescriptor,540-540,[                        context = new FailedContext();],,
CORRECTNESS,NP_NULL_PARAM_DEREF,org/apache/catalina/startup/HostConfig.java,addWatchedResources,1113-1113,[            addWatchedResources(deployedApp, dir.getAbsolutePath(), context);],,addWatchedResources,1010-1010,[        Context context = null;],,addWatchedResources,1030-1030,[                        if (context == null) {],,
CORRECTNESS,NP_NULL_PARAM_DEREF,org/apache/catalina/startup/HostConfig.java,addWatchedResources,1113-1113,[            addWatchedResources(deployedApp, dir.getAbsolutePath(), context);],,addWatchedResources,1030-1030,[                        if (context == null) {],,addWatchedResources,1031-1031,[                            context = new FailedContext();],,
STYLE,REC_CATCH_EXCEPTION,org/apache/catalina/startup/HostConfig.java,deployWAR,812-812,[                    } catch (Exception e) {],,
MT_CORRECTNESS,SWL_SLEEP_WITH_LOCK_HELD,org/apache/catalina/startup/HostConfig.java,checkResources,1261-1261,[                    Thread.sleep(500);],,
STYLE,UC_USELESS_CONDITION,org/apache/catalina/startup/HostConfig.java,checkResources,1270-1270,[                    continue;],,checkResources,1269-1269,[                if (lastModified == 0L) {],,
I18N,DM_DEFAULT_ENCODING,org/apache/catalina/startup/PasswdUserDatabase.java,init,139-139,[            reader = new BufferedReader(new FileReader(PASSWORD_FILE));],,
STYLE,REC_CATCH_EXCEPTION,org/apache/catalina/startup/PasswdUserDatabase.java,init,182-182,[        } catch (Exception e) {],,
EXPERIMENTAL,LG_LOST_LOGGER_DUE_TO_WEAK_REFERENCE,org/apache/catalina/startup/Tomcat.java,setSilent,668-668,[                Logger.getLogger(s).setLevel(Level.WARNING);],,setSilent,670-670,[                Logger.getLogger(s).setLevel(Level.INFO);],,
EXPERIMENTAL,LG_LOST_LOGGER_DUE_TO_WEAK_REFERENCE,org/apache/catalina/startup/Tomcat.java,silence,676-676,[        Logger.getLogger(getLoggerName(host, ctx)).setLevel(Level.WARNING);],,
BAD_PRACTICE,NM_CONFUSING,org/apache/catalina/startup/Tomcat.java,setHostname,182-183,[        hostname = s;,     }],,setHostName,296-297,[],,
BAD_PRACTICE,RV_RETURN_VALUE_IGNORED_BAD_PRACTICE,org/apache/catalina/startup/Tomcat.java,initBaseDir,622-622,[        baseFile.mkdirs();],,initBaseDir,636-636,[            homeFile.mkdirs();],,
CORRECTNESS,BC_IMPOSSIBLE_CAST,org/apache/catalina/startup/Tomcat.java,getPassword,654-654,[        "org.apache.catalina.core.AprLifecycleListener"],,
CORRECTNESS,BC_IMPOSSIBLE_CAST,org/apache/catalina/startup/Tomcat.java,getPrincipal,661-661,[     *                  prevents the usual startup information being logged.],,
STYLE,BC_UNCONFIRMED_CAST_OF_RETURN_VALUE,org/apache/catalina/startup/Tomcat.java,getPrincipal,659-659,[     * @param silent    <code>true</code> sets the log level to WARN for the],,
STYLE,REC_CATCH_EXCEPTION,org/apache/catalina/startup/UserConfig.java,deploy,374-374,[        } catch (Exception e) {],,
STYLE,UCF_USELESS_CONTROL_FLOW,org/apache/catalina/startup/WebAnnotationSet.java,addResource,389-389,[                type.equals("javax.transaction.UserTransaction") ||],,
BAD_PRACTICE,OS_OPEN_STREAM,org/apache/catalina/startup/WebappServiceLoader.java,parseConfigFile,159-159,[            BufferedReader reader = new BufferedReader(in);],,
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,org/apache/catalina/storeconfig/ConnectorStoreAppender.java,,44-44,[    protected static HashMap<String, String> replacements = new HashMap<>();],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/storeconfig/StandardEngineSF.java,storeChildren,63-63,[            if (realm != null) {],,
STYLE,REC_CATCH_EXCEPTION,org/apache/catalina/storeconfig/StoreConfigLifecycleListener.java,createMBean,85-85,[        } catch (Exception e) {],,
BAD_PRACTICE,NM_CONFUSING,org/apache/catalina/storeconfig/StoreFileMover.java,setFilename,92-93,[        filename = string;,     }],,setFileName,1212-1213,[            fileName = pFileName;,         }],,
BAD_PRACTICE,RV_RETURN_VALUE_IGNORED_BAD_PRACTICE,org/apache/catalina/storeconfig/StoreFileMover.java,init,140-140,[            configNew.getParentFile().mkdirs();],,
BAD_PRACTICE,RV_RETURN_VALUE_IGNORED_BAD_PRACTICE,org/apache/catalina/storeconfig/StoreFileMover.java,move,157-157,[                configSave.renameTo(configOld);],,
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,org/apache/catalina/storeconfig/StoreLoader.java,,78-78,[    protected static Digester digester = createDigester();],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/tribes/ByteMessage.java,getMessage,66-66,[        return message;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/catalina/tribes/ByteMessage.java,<init>,58-58,[        message = data;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/catalina/tribes/ByteMessage.java,setMessage,74-74,[        this.message = message;],,
BAD_PRACTICE,SE_BAD_FIELD,org/apache/catalina/tribes/ChannelException.java,,149-175,[        public FaultyMember(Member mbr, Exception x) {,             this.member = mbr;,             this.cause = x;,         }, ,         public Member getMember() {,             return member;,         }, ,         public Exception getCause() {,             return cause;,         }, ,         @Override,         public String toString() {,             return "FaultyMember:"+member.toString();,         }, ,         @Override,         public int hashCode() {,             return (member!=null)?member.hashCode():0;,         }, ,         @Override,         public boolean equals(Object o) {,             if (member==null || (!(o instanceof FaultyMember)) || (((FaultyMember)o).member==null)) return false;,             return member.equals(((FaultyMember)o).member);],,
MALICIOUS_CODE,MS_MUTABLE_ARRAY,org/apache/catalina/tribes/Member.java,,36-36,[    public static final byte[] SHUTDOWN_PAYLOAD = new byte[] {66, 65, 66, 89, 45, 65, 76, 69, 88};],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/tribes/UniqueId.java,getBytes,68-68,[        return id;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/catalina/tribes/UniqueId.java,<init>,40-40,[        this.id = id;],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/catalina/tribes/group/ChannelCoordinator.java,,75-75,[        if ( destination == null ) destination = membershipService.getMembers();],,,77-77,[            membershipService.broadcast(msg);],,,277-277,[        return membershipService;],,,295-295,[        this.membershipService = membershipService;],,,296-296,[        this.membershipService.setMembershipListener(this);],,,164-164,[                membershipService.setMembershipListener(this);],,,172-172,[                membershipService.start(MembershipService.MBR_TX);],,,165-165,[                if (membershipService instanceof McastService) {],,,152-152,[                membershipService.setLocalMemberProperties(getClusterReceiver().getHost(),],,,168-168,[                membershipService.start(MembershipService.MBR_RX);],,,166-166,[                    ((McastService)membershipService).setMessageListener(this);],,,219-219,[                membershipService.stop(MembershipService.MBR_RX);],,,226-226,[                membershipService.stop(MembershipService.MBR_TX);],,,220-220,[                membershipService.setMembershipListener(null);],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/catalina/tribes/group/ChannelInterceptorBase.java,getMembers,117-117,[        else return null;],,
STYLE,REC_CATCH_EXCEPTION,org/apache/catalina/tribes/group/GroupChannel.java,send,240-240,[        }catch ( Exception x ) {],,
STYLE,REC_CATCH_EXCEPTION,org/apache/catalina/tribes/group/GroupChannel.java,messageReceived,310-310,[        } catch ( Exception x ) {],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/catalina/tribes/group/GroupChannel.java,,666-666,[        protected static int counter = 1;],,
STYLE,BC_UNCONFIRMED_CAST,org/apache/catalina/tribes/group/RpcChannel.java,messageReceived,109-109,[        RpcMessage rmsg = (RpcMessage)msg;],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/tribes/group/RpcChannel.java,getRpcId,200-200,[        return rpcId;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/catalina/tribes/group/RpcChannel.java,<init>,63-63,[        this.rpcId = rpcId;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/catalina/tribes/group/RpcChannel.java,setRpcId,212-212,[        this.rpcId = rpcId;],,
MALICIOUS_CODE,FI_PUBLIC_SHOULD_BE_PROTECTED,org/apache/catalina/tribes/group/RpcChannel.java,finalize,179-181,[        breakdown();,         super.finalize();,     }],,
MT_CORRECTNESS,WA_NOT_IN_LOOP,org/apache/catalina/tribes/group/RpcChannel.java,send,97-97,[                if ( rpcOptions != NO_REPLY ) collector.wait(timeout);],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/catalina/tribes/group/RpcChannel.java,,140-148,[                handler = new ErrorHandler() {,                     @Override,                     public void handleError(ChannelException x, UniqueId id) {,                         excallback.replyFailed(request, response, fsender, x);,                     },                     @Override,                     public void handleCompletion(UniqueId id) {,                         excallback.replySucceeded(request, response, fsender);,                     }],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/catalina/tribes/group/RpcChannel.java,<init>,281-281,[            this.id = id;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/catalina/tribes/group/RpcMessage.java,<init>,40-40,[        this.rpcId = rpcId;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/catalina/tribes/group/RpcMessage.java,<init>,41-41,[        this.uuid = uuid;],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/tribes/group/interceptors/DomainFilterInterceptor.java,getDomain,107-107,[        return domain;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/catalina/tribes/group/interceptors/DomainFilterInterceptor.java,setDomain,111-111,[        this.domain = domain;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/catalina/tribes/group/interceptors/FragmentationInterceptor.java,<init>,222-222,[            this.uniqueId = id;],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/catalina/tribes/group/interceptors/MessageDispatchInterceptor.java,,136-136,[        return currentSize;],,,148-148,[            currentSize = value;],,,141-141,[            currentSize += inc;],,,142-142,[            return currentSize;],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/catalina/tribes/group/interceptors/NonBlockingCoordinator.java,,143-143,[    protected static final byte[] COORD_ALIVE = new byte[] {79, -121, -25, -15, -59, 5, 64, 94, -77, 113, -119, -88, 52, 114, -56, -46,],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/catalina/tribes/group/interceptors/NonBlockingCoordinator.java,,138-138,[    protected static final byte[] COORD_CONF = new byte[] {67, 88, 107, -86, 69, 23, 76, -70, -91, -23, -87, -25, -125, 86, 75, 20};],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/catalina/tribes/group/interceptors/NonBlockingCoordinator.java,,130-130,[    protected static final byte[] COORD_HEADER = new byte[] {-86, 38, -34, -29, -98, 90, 65, 63, -81, -122, -6, -110, 99, -54, 13, 63};],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/catalina/tribes/group/interceptors/NonBlockingCoordinator.java,,134-134,[    protected static final byte[] COORD_REQUEST = new byte[] {104, -95, -92, -42, 114, -36, 71, -19, -79, 20, 122, 101, -1, -48, -49, 30};],,
MT_CORRECTNESS,WA_NOT_IN_LOOP,org/apache/catalina/tribes/group/interceptors/NonBlockingCoordinator.java,startElection,226-226,[                    electionMutex.wait(waitForCoordMsgTimeout);],,
STYLE,BC_UNCONFIRMED_CAST,org/apache/catalina/tribes/group/interceptors/NonBlockingCoordinator.java,<init>,775-775,[            this.coord = ((NonBlockingCoordinator)interceptor).getCoordinator();],,<init>,776-776,[            this.mbrs = ((NonBlockingCoordinator)interceptor).membership.getMembers();],,<init>,778-778,[            this.view = ((NonBlockingCoordinator)interceptor).view;],,<init>,779-779,[            this.suggestedView = ((NonBlockingCoordinator)interceptor).suggestedView;],,
STYLE,DLS_DEAD_LOCAL_STORE_OF_NULL,org/apache/catalina/tribes/group/interceptors/NonBlockingCoordinator.java,write,724-724,[            ldr = null;],,
STYLE,DLS_DEAD_LOCAL_STORE_OF_NULL,org/apache/catalina/tribes/group/interceptors/NonBlockingCoordinator.java,write,729-729,[            src = null;],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/tribes/group/interceptors/NonBlockingCoordinator.java,getMembers,666-666,[            return view;],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/tribes/group/interceptors/NonBlockingCoordinator.java,getType,671-671,[            return type;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/catalina/tribes/group/interceptors/NonBlockingCoordinator.java,<init>,640-640,[            this.type = type;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/catalina/tribes/group/interceptors/NonBlockingCoordinator.java,<init>,638-638,[            this.view = view;],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/tribes/group/interceptors/SimpleCoordinator.java,getView,106-106,[        return view;],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/catalina/tribes/group/interceptors/StaticMembershipInterceptor.java,,112-118,[        Thread t = new Thread() {,             @Override,             public void run() {,                 for (int i=0; i<mbrs.length; i++ ) {,                     base.memberAdded(mbrs[i]);,                 },             }],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/catalina/tribes/group/interceptors/TcpFailureDetector.java,,63-63,[    protected static final byte[] TCP_FAIL_DETECT = new byte[] {],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/catalina/tribes/group/interceptors/TcpPingInterceptor.java,,89-89,[        if ( thread != null ) {],,,90-90,[            thread.interrupt();],,,91-91,[            thread = null;],,,67-67,[        if ( thread == null && useThread) {],,,68-68,[            thread = new PingThread();],,,69-69,[            thread.setDaemon(true);],,,70-70,[            thread.setName("TcpPingInterceptor.PingThread-"+cnt.addAndGet(1));],,,71-71,[            thread.start();],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/catalina/tribes/group/interceptors/TcpPingInterceptor.java,,46-46,[    protected static final byte[] TCP_PING_DATA = new byte[] {],,
STYLE,ICAST_IDIV_CAST_TO_DOUBLE,org/apache/catalina/tribes/group/interceptors/ThroughputInterceptor.java,report,109-109,[        buf.append(df.format(mbRx/((System.currentTimeMillis()-rxStart)/1000)));],,
STYLE,ICAST_IDIV_CAST_TO_DOUBLE,org/apache/catalina/tribes/group/interceptors/ThroughputInterceptor.java,sendMessage,74-74,[            if ((msgTxCnt.get() / interval) >= lastCnt) {],,
BAD_PRACTICE,CN_IMPLEMENTS_CLONE_BUT_NOT_CLONEABLE,org/apache/catalina/tribes/io/ChannelData.java,clone,308-314,[        ChannelData clone = new ChannelData(false);,         clone.options = this.options;,         clone.message = new XByteBuffer(this.message.getBytesDirect(),false);,         clone.timestamp = this.timestamp;,         clone.uniqueId = this.uniqueId;,         clone.address = this.address;,         return clone;],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/catalina/tribes/io/ChannelData.java,getDataPackage,221-221,[        offset += message.getLength(); //message data],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/catalina/tribes/io/ChannelData.java,getDataFromPackage,279-279,[        offset += xsize; //message data],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/tribes/io/ChannelData.java,getUniqueId,125-125,[        return uniqueId;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/catalina/tribes/io/ChannelData.java,<init>,87-87,[        this.uniqueId = uniqueId;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/catalina/tribes/io/ChannelData.java,setUniqueId,131-131,[        this.uniqueId = uniqueId;],,
BAD_PRACTICE,SE_BAD_FIELD,org/apache/catalina/tribes/io/XByteBuffer.java,,49-580,[    private static final org.apache.juli.logging.Log log =,         org.apache.juli.logging.LogFactory.getLog( XByteBuffer.class );, ,     /**,      * This is a package header, 7 bytes (FLT2002),      */,     private static final byte[] START_DATA = {70,76,84,50,48,48,50};, ,     /**,      * This is the package footer, 7 bytes (TLF2003),      */,     private static final byte[] END_DATA = {84,76,70,50,48,48,51};, ,     /**,      * Variable to hold the data,      */,     protected byte[] buf = null;, ,     /**,      * Current length of data in the buffer,      */,     protected int bufSize = 0;, ,     /**,      * Flag for discarding invalid packages,      * If this flag is set to true, and append(byte[],...) is called,,      * the data added will be inspected, and if it doesn't start with,      * <code>START_DATA</code> it will be thrown away.,      *,      */,     protected boolean discard = true;, ,     /**,      * Constructs a new XByteBuffer.<br>,      * TODO use a pool of byte[] for performance,      * @param size - the initial size of the byte buffer,      */,     public XByteBuffer(int size, boolean discard) {,         buf = new byte[size];,         this.discard = discard;,     }, ,     public XByteBuffer(byte[] data,boolean discard) {,         this(data,data.length+128,discard);,     }, ,     public XByteBuffer(byte[] data, int size,boolean discard) {,         int length = Math.max(data.length,size);,         buf = new byte[length];,         System.arraycopy(data,0,buf,0,data.length);,         bufSize = data.length;,         this.discard = discard;,     }, ,     public int getLength() {,         return bufSize;,     }, ,     public void setLength(int size) {,         if ( size > buf.length ) throw new ArrayIndexOutOfBoundsException("Size is larger than existing buffer.");,         bufSize = size;,     }, ,     public void trim(int length) {,         if ( (bufSize - length) < 0 ),             throw new ArrayIndexOutOfBoundsException("Can't trim more bytes than are available. length:"+bufSize+" trim:"+length);,         bufSize -= length;,     }, ,     public void reset() {,         bufSize = 0;,     }, ,     public byte[] getBytesDirect() {,         return this.buf;,     }, ,     /**,      * Returns the bytes in the buffer, in its exact length,      */,     public byte[] getBytes() {,         byte[] b = new byte[bufSize];,         System.arraycopy(buf,0,b,0,bufSize);,         return b;,     }, ,     /**,      * Resets the buffer,      */,     public void clear() {,         bufSize = 0;,     }, ,     /**,      * Appends the data to the buffer. If the data is incorrectly formatted, ie, the data should always start with the,      * header, false will be returned and the data will be discarded.,      * @param b - bytes to be appended,      * @param len - the number of bytes to append.,      * @return true if the data was appended correctly. Returns false if the package is incorrect, ie missing header or something, or the length of data is 0,      */,     public boolean append(ByteBuffer b, int len) {,         int newcount = bufSize + len;,         if (newcount > buf.length) {,             expand(newcount);,         },         b.get(buf,bufSize,len);, ,         bufSize = newcount;, ,         if ( discard ) {,             if (bufSize > START_DATA.length && (firstIndexOf(buf, 0, START_DATA) == -1)) {,                 bufSize = 0;,                 log.error("Discarded the package, invalid header");,                 return false;,             },         },         return true;, ,     }, ,     public boolean append(byte i) {,         int newcount = bufSize + 1;,         if (newcount > buf.length) {,             expand(newcount);,         },         buf[bufSize] = i;,         bufSize = newcount;,         return true;,     }, , ,     public boolean append(boolean i) {,         int newcount = bufSize + 1;,         if (newcount > buf.length) {,             expand(newcount);,         },         XByteBuffer.toBytes(i,buf,bufSize);,         bufSize = newcount;,         return true;,     }, ,     public boolean append(long i) {,         int newcount = bufSize + 8;,         if (newcount > buf.length) {,             expand(newcount);,         },         XByteBuffer.toBytes(i,buf,bufSize);,         bufSize = newcount;,         return true;,     }, ,     public boolean append(int i) {,         int newcount = bufSize + 4;,         if (newcount > buf.length) {,             expand(newcount);,         },         XByteBuffer.toBytes(i,buf,bufSize);,         bufSize = newcount;,         return true;,     }, ,     public boolean append(byte[] b, int off, int len) {,         if ((off < 0) || (off > b.length) || (len < 0) ||,             ((off + len) > b.length) || ((off + len) < 0))  {,             throw new IndexOutOfBoundsException();,         } else if (len == 0) {,             return false;,         }, ,         int newcount = bufSize + len;,         if (newcount > buf.length) {,             expand(newcount);,         },         System.arraycopy(b, off, buf, bufSize, len);,         bufSize = newcount;, ,         if ( discard ) {,             if (bufSize > START_DATA.length && (firstIndexOf(buf, 0, START_DATA) == -1)) {,                 bufSize = 0;,                 log.error("Discarded the package, invalid header");,                 return false;,             },         },         return true;,     }, ,     public void expand(int newcount) {,         //don't change the allocation strategy,         byte newbuf[] = new byte[Math.max(buf.length << 1, newcount)];,         System.arraycopy(buf, 0, newbuf, 0, bufSize);,         buf = newbuf;,     }, ,     public int getCapacity() {,         return buf.length;,     }, , ,     /**,      * Internal mechanism to make a check if a complete package exists,      * within the buffer,      * @return - true if a complete package (header,compress,size,data,footer) exists within the buffer,      */,     public int countPackages() {,         return countPackages(false);,     }, ,     public int countPackages(boolean first),     {,         int cnt = 0;,         int pos = START_DATA.length;,         int start = 0;, ,         while ( start < bufSize ) {,             //first check start header,             int index = XByteBuffer.firstIndexOf(buf,start,START_DATA);,             //if the header (START_DATA) isn't the first thing or,             //the buffer isn't even 14 bytes,             if ( index != start || ((bufSize-start)<14) ) break;,             //next 4 bytes are compress flag not needed for count packages,             //then get the size 4 bytes,             int size = toInt(buf, pos);,             //now the total buffer has to be long enough to hold,             //START_DATA.length+4+size+END_DATA.length,             pos = start + START_DATA.length + 4 + size;,             if ( (pos + END_DATA.length) > bufSize) break;,             //and finally check the footer of the package END_DATA,             int newpos = firstIndexOf(buf, pos, END_DATA);,             //mismatch, there is no package,             if (newpos != pos) break;,             //increase the packet count,             cnt++;,             //reset the values,             start = pos + END_DATA.length;,             pos = start + START_DATA.length;,             //we only want to verify that we have at least one package,             if ( first ) break;,         },         return cnt;,     }, ,     /**,      * Method to check if a package exists in this byte buffer.,      * @return - true if a complete package (header,options,size,data,footer) exists within the buffer,      */,     public boolean doesPackageExist()  {,         return (countPackages(true)>0);,     }, ,     /**,      * Extracts the message bytes from a package.,      * If no package exists, a IllegalStateException will be thrown.,      * @param clearFromBuffer - if true, the package will be removed from the byte buffer,      * @return - returns the actual message bytes (header, compress,size and footer not included).,      */,     public XByteBuffer extractDataPackage(boolean clearFromBuffer) {,         int psize = countPackages(true);,         if (psize == 0) {,             throw new java.lang.IllegalStateException("No package exists in XByteBuffer");,         },         int size = toInt(buf, START_DATA.length);,         XByteBuffer xbuf = BufferPool.getBufferPool().getBuffer(size,false);,         xbuf.setLength(size);,         System.arraycopy(buf, START_DATA.length + 4, xbuf.getBytesDirect(), 0, size);,         if (clearFromBuffer) {,             int totalsize = START_DATA.length + 4 + size + END_DATA.length;,             bufSize = bufSize - totalsize;,             System.arraycopy(buf, totalsize, buf, 0, bufSize);,         },         return xbuf;, ,     }, ,     public ChannelData extractPackage(boolean clearFromBuffer) {,         XByteBuffer xbuf = extractDataPackage(clearFromBuffer);,         ChannelData cdata = ChannelData.getDataFromPackage(xbuf);,         return cdata;,     }, ,     /**,      * Creates a complete data package,      * @param cdata - the message data to be contained within the package,      * @return - a full package (header,size,data,footer),      */,     public static byte[] createDataPackage(ChannelData cdata) {, //        return createDataPackage(cdata.getDataPackage());,         //avoid one extra byte array creation,         int dlength = cdata.getDataPackageLength();,         int length = getDataPackageLength(dlength);,         byte[] data = new byte[length];,         int offset = 0;,         System.arraycopy(START_DATA, 0, data, offset, START_DATA.length);,         offset += START_DATA.length;,         toBytes(dlength,data, START_DATA.length);,         offset += 4;,         cdata.getDataPackage(data,offset);,         offset += dlength;,         System.arraycopy(END_DATA, 0, data, offset, END_DATA.length);,         offset += END_DATA.length;,         return data;,     }, ,     public static byte[] createDataPackage(byte[] data, int doff, int dlength, byte[] buffer, int bufoff) {,         if ( (buffer.length-bufoff) > getDataPackageLength(dlength) ) {,             throw new ArrayIndexOutOfBoundsException("Unable to create data package, buffer is too small.");,         },         System.arraycopy(START_DATA, 0, buffer, bufoff, START_DATA.length);,         toBytes(data.length,buffer, bufoff+START_DATA.length);,         System.arraycopy(data, doff, buffer, bufoff+START_DATA.length + 4, dlength);,         System.arraycopy(END_DATA, 0, buffer, bufoff+START_DATA.length + 4 + data.length, END_DATA.length);,         return buffer;,     }, , ,     public static int getDataPackageLength(int datalength) {,         int length =,             START_DATA.length + //header length,             4 + //data length indicator,             datalength + //actual data length,             END_DATA.length; //footer length,         return length;, ,     }, ,     public static byte[] createDataPackage(byte[] data) {,         int length = getDataPackageLength(data.length);,         byte[] result = new byte[length];,         return createDataPackage(data,0,data.length,result,0);,     }, , , //    public static void fillDataPackage(byte[] data, int doff, int dlength, XByteBuffer buf) {, //        int pkglen = getDataPackageLength(dlength);, //        if ( buf.getCapacity() <  pkglen ) buf.expand(pkglen);, //        createDataPackage(data,doff,dlength,buf.getBytesDirect(),buf.getLength());, //    }, ,     /**,      * Convert four bytes to an int,      * @param b - the byte array containing the four bytes,      * @param off - the offset,      * @return the integer value constructed from the four bytes,      * @exception java.lang.ArrayIndexOutOfBoundsException,      */,     public static int toInt(byte[] b,int off){,         return ( ( b[off+3]) & 0xFF) +,             ( ( ( b[off+2]) & 0xFF) << 8) +,             ( ( ( b[off+1]) & 0xFF) << 16) +,             ( ( ( b[off+0]) & 0xFF) << 24);,     }, ,     /**,      * Convert eight bytes to a long,      * @param b - the byte array containing the four bytes,      * @param off - the offset,      * @return the long value constructed from the eight bytes,      * @exception java.lang.ArrayIndexOutOfBoundsException,      */,     public static long toLong(byte[] b,int off){,         return ( ( (long) b[off+7]) & 0xFF) +,             ( ( ( (long) b[off+6]) & 0xFF) << 8) +,             ( ( ( (long) b[off+5]) & 0xFF) << 16) +,             ( ( ( (long) b[off+4]) & 0xFF) << 24) +,             ( ( ( (long) b[off+3]) & 0xFF) << 32) +,             ( ( ( (long) b[off+2]) & 0xFF) << 40) +,             ( ( ( (long) b[off+1]) & 0xFF) << 48) +,             ( ( ( (long) b[off+0]) & 0xFF) << 56);,     }, , ,     /**,      * Converts a boolean to a 1-byte array,      * @param bool - the integer,      * @return - 1-byte array,      */,     public static byte[] toBytes(boolean bool, byte[] data, int offset) {,         data[offset] = (byte)(bool?1:0);,         return data;,     }, ,     /**,      * Converts a byte array entry to boolean,      * @param b byte array,      * @param offset within byte array,      * @return true if byte array entry is non-zero, false otherwise,      */,     public static boolean toBoolean(byte[] b, int offset) {,         return b[offset] != 0;,     }, , ,     /**,      * Converts an integer to four bytes,      * @param n - the integer,      * @return - four bytes in an array,      */,     public static byte[] toBytes(int n,byte[] b, int offset) {,         b[offset+3] = (byte) (n);,         n >>>= 8;,         b[offset+2] = (byte) (n);,         n >>>= 8;,         b[offset+1] = (byte) (n);,         n >>>= 8;,         b[offset+0] = (byte) (n);,         return b;,     }, ,     /**,      * Converts an long to eight bytes,      * @param n - the long,      * @return - eight bytes in an array,      */,     public static byte[] toBytes(long n, byte[] b, int offset) {,         b[offset+7] = (byte) (n);,         n >>>= 8;,         b[offset+6] = (byte) (n);,         n >>>= 8;,         b[offset+5] = (byte) (n);,         n >>>= 8;,         b[offset+4] = (byte) (n);,         n >>>= 8;,         b[offset+3] = (byte) (n);,         n >>>= 8;,         b[offset+2] = (byte) (n);,         n >>>= 8;,         b[offset+1] = (byte) (n);,         n >>>= 8;,         b[offset+0] = (byte) (n);,         return b;,     }, ,     /**,      * Similar to a String.IndexOf, but uses pure bytes,      * @param src - the source bytes to be searched,      * @param srcOff - offset on the source buffer,      * @param find - the string to be found within src,      * @return - the index of the first matching byte. -1 if the find array is not found,      */,     public static int firstIndexOf(byte[] src, int srcOff, byte[] find){,         int result = -1;,         if (find.length > src.length) return result;,         if (find.length == 0 || src.length == 0) return result;,         if (srcOff >= src.length ) throw new java.lang.ArrayIndexOutOfBoundsException();,         boolean found = false;,         int srclen = src.length;,         int findlen = find.length;,         byte first = find[0];,         int pos = srcOff;,         while (!found) {,             //find the first byte,             while (pos < srclen){,                 if (first == src[pos]),                     break;,                 pos++;,             },             if (pos >= srclen),                 return -1;, ,             //we found the first character,             //match the rest of the bytes - they have to match,             if ( (srclen - pos) < findlen),                 return -1;,             //assume it does exist,             found = true;,             for (int i = 1; ( (i < findlen) && found); i++),                 found = found && (find[i] == src[pos + i]);,             if (found),                 result = pos;,             else if ( (srclen - pos) < findlen),                 return -1; //no more matches possible,             else,                 pos++;,         },         return result;,     }, , ,     public static Serializable deserialize(byte[] data),         throws IOException, ClassNotFoundException, ClassCastException {,         return deserialize(data,0,data.length);,     }, ,     public static Serializable deserialize(byte[] data, int offset, int length),         throws IOException, ClassNotFoundException, ClassCastException {,         return deserialize(data,offset,length,null);,     }, ,     private static final AtomicInteger invokecount = new AtomicInteger(0);, ,     public static Serializable deserialize(byte[] data, int offset, int length, ClassLoader[] cls),         throws IOException, ClassNotFoundException, ClassCastException {,         invokecount.addAndGet(1);,         Object message = null;,         if ( cls == null ) cls = new ClassLoader[0];,         if (data != null && length > 0) {,             InputStream  instream = new ByteArrayInputStream(data,offset,length);,             ObjectInputStream stream = null;,             stream = (cls.length>0)? new ReplicationStream(instream,cls):new ObjectInputStream(instream);,             message = stream.readObject();,             instream.close();,             stream.close();,         },         if ( message == null ) {,             return null;,         } else if (message instanceof Serializable),             return (Serializable) message;,         else {,             throw new ClassCastException("Message has the wrong class. It should implement Serializable, instead it is:"+message.getClass().getName());,         },     }, ,     /**,      * Serializes a message into cluster data,      * @param msg ClusterMessage,      * @return serialized content as byte[] array,      * @throws IOException,      */,     public static byte[] serialize(Serializable msg) throws IOException {,         ByteArrayOutputStream outs = new ByteArrayOutputStream();,         ObjectOutputStream out = new ObjectOutputStream(outs);,         out.writeObject(msg);,         out.flush();,         byte[] data = outs.toByteArray();,         return data;,     }, ,     public void setDiscard(boolean discard) {,         this.discard = discard;,     }, ,     public boolean getDiscard() {,         return discard;],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/catalina/tribes/io/ObjectReader.java,,152-152,[        return lastAccess;],,,160-160,[        this.lastAccess = lastAccess;],,,80-80,[        this.lastAccess = System.currentTimeMillis();],,,75-75,[        this.lastAccess = System.currentTimeMillis();],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/catalina/tribes/io/ObjectReader.java,,84-84,[        return this.accessed;],,,79-79,[        this.accessed = false;],,,74-74,[        this.accessed = true;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/catalina/tribes/io/ReplicationStream.java,<init>,57-57,[        this.classLoaders = classLoaders;],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/catalina/tribes/io/XByteBuffer.java,createDataPackage,347-347,[        offset += END_DATA.length;],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/tribes/io/XByteBuffer.java,getBytesDirect,123-123,[        return this.buf;],,
STYLE,UC_USELESS_CONDITION,org/apache/catalina/tribes/io/XByteBuffer.java,firstIndexOf,514-514,[                found = found && (find[i] == src[pos + i]);],,
I18N,DM_DEFAULT_ENCODING,org/apache/catalina/tribes/membership/Constants.java,main,31-31,[        System.out.println(Arrays.toString("TRIBES-B".getBytes()));],,main,32-32,[        System.out.println(Arrays.toString("TRIBES-E".getBytes()));],,
PERFORMANCE,DM_BOXED_PRIMITIVE_FOR_PARSING,org/apache/catalina/tribes/membership/McastService.java,getDropTime,262-262,[        return new Long(p).longValue();],,
PERFORMANCE,DM_BOXED_PRIMITIVE_FOR_PARSING,org/apache/catalina/tribes/membership/McastService.java,getFrequency,250-250,[        return new Long(p).longValue();],,
PERFORMANCE,DM_BOXED_PRIMITIVE_FOR_PARSING,org/apache/catalina/tribes/membership/McastService.java,getPort,241-241,[        return new Integer(p).intValue();],,
PERFORMANCE,DM_BOXED_PRIMITIVE_FOR_PARSING,org/apache/catalina/tribes/membership/McastService.java,getRecoveryCounter,198-198,[            return new Integer(p).intValue();],,
PERFORMANCE,DM_BOXED_PRIMITIVE_FOR_PARSING,org/apache/catalina/tribes/membership/McastService.java,getRecoverySleepTime,222-222,[            return new Long(p).longValue();],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/catalina/tribes/membership/McastService.java,getDropTime,262-262,[        return new Long(p).longValue();],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/catalina/tribes/membership/McastService.java,getFrequency,250-250,[        return new Long(p).longValue();],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/catalina/tribes/membership/McastService.java,getPort,241-241,[        return new Integer(p).intValue();],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/catalina/tribes/membership/McastService.java,getRecoveryCounter,198-198,[            return new Integer(p).intValue();],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/catalina/tribes/membership/McastService.java,getRecoverySleepTime,222-222,[            return new Long(p).longValue();],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/tribes/membership/McastService.java,getDomain,518-518,[        return domain;],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/tribes/membership/McastService.java,getPayload,514-514,[        return payload;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/catalina/tribes/membership/McastService.java,setDomain,542-542,[        this.domain = domain;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/catalina/tribes/membership/McastService.java,setPayload,528-528,[        this.payload = payload;],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/catalina/tribes/membership/McastServiceImpl.java,stop,326-326,[            try {socket.close();}catch ( Exception ignore){}],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/catalina/tribes/membership/McastServiceImpl.java,run,543-543,[                        try { Thread.sleep(500); } catch ( Exception ignore ){}],,
STYLE,NS_DANGEROUS_NON_SHORT_CIRCUIT,org/apache/catalina/tribes/membership/McastServiceImpl.java,run,635-635,[                    if (stopService() & startService()) {],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/catalina/tribes/membership/McastServiceImpl.java,run,576-576,[                try { Thread.sleep(time); } catch ( Exception ignore ) {}],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/catalina/tribes/membership/MemberImpl.java,getData,281-281,[        pos += TRIBES_MBR_END.length;],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/catalina/tribes/membership/MemberImpl.java,getMember,384-384,[        pos += payload.length;],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/tribes/membership/MemberImpl.java,getCommand,483-483,[        return command;],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/tribes/membership/MemberImpl.java,getData,204-204,[            return dataPkg;],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/tribes/membership/MemberImpl.java,getDomain,488-488,[        return domain;],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/tribes/membership/MemberImpl.java,getHost,434-434,[        return host;],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/tribes/membership/MemberImpl.java,getPayload,478-478,[        return payload;],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/tribes/membership/MemberImpl.java,getUniqueId,473-473,[        return uniqueId;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/catalina/tribes/membership/MemberImpl.java,setHost,570-570,[        this.host = host;],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/catalina/tribes/membership/MemberImpl.java,,42-42,[    public static final transient byte[] TRIBES_MBR_BEGIN = new byte[] {84, 82, 73, 66, 69, 83, 45, 66, 1, 0};],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/catalina/tribes/membership/MemberImpl.java,,43-43,[    public static final transient byte[] TRIBES_MBR_END   = new byte[] {84, 82, 73, 66, 69, 83, 45, 69, 1, 0};],,
BAD_PRACTICE,CN_IDIOM_NO_SUPER_CALL,org/apache/catalina/tribes/membership/Membership.java,clone,68-76,[        synchronized (membersLock) {,             Membership clone = new Membership(local, memberComparator);,             @SuppressWarnings("unchecked"),             final HashMap<Member, MbrEntry> tmpclone = (HashMap<Member, MbrEntry>) map.clone();,             clone.map = tmpclone;,             clone.members = new Member[members.length];,             System.arraycopy(members,0,clone.members,0,members.length);,             return clone;,         }],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/tribes/membership/Membership.java,getMembers,251-251,[            return members;],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java,breakdown,335-335,[        try {broadcast(MapMessage.MSG_STOP,false); }catch ( Exception ignore){}],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java,mapMemberAdded,714-714,[                mapMembers.put(member, new Long(System.currentTimeMillis()));],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java,memberAlive,298-298,[            mapMembers.put(member, new Long(System.currentTimeMillis()));],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java,getExternalLoaders,1500-1500,[        return externalLoaders;],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java,getMapContextName,1476-1476,[        return mapContextName;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java,setExternalLoaders,1516-1516,[        this.externalLoaders = externalLoaders;],,
MALICIOUS_CODE,FI_PUBLIC_SHOULD_BE_PROTECTED,org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java,finalize,352-356,[            breakdown();,         } finally {,             super.finalize();,         },     }],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java,getMapMembersExcl,925-925,[                    if ( dest!=null && dest.length >0) {],,
STYLE,REC_CATCH_EXCEPTION,org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java,get,939-939,[            } catch (Exception x) {],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java,getBackupNodes,1208-1208,[            return backupNodes;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java,setBackupNodes,1204-1204,[            this.backupNodes = nodes;],,
BAD_PRACTICE,CN_IMPLEMENTS_CLONE_BUT_NOT_CLONEABLE,org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java,clone,1463-1466,[            MapMessage msg = new MapMessage(this.mapId, this.msgtype, this.diff, this.key, this.value, this.diffvalue, this.primary, this.nodes);,             msg.keydata = this.keydata;,             msg.valuedata = this.valuedata;,             return msg;],,
I18N,DM_DEFAULT_ENCODING,org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java,toString,1324-1324,[            buf.append(new String(mapId));],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java,getBackupNodes,1424-1424,[            return nodes;],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java,getDiffValue,1420-1420,[            return diffvalue;],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java,getKeyData,1396-1396,[            return keydata;],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java,getMapId,1436-1436,[            return mapId;],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java,getValueData,1416-1416,[            return valuedata;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java,<init>,1359-1359,[            this.diffvalue = diffvalue;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java,<init>,1354-1354,[            this.mapId = mapId;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java,<init>,1360-1360,[            this.nodes = nodes;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/catalina/tribes/tipis/ReplicatedMap.java,publishEntryInfo,121-121,[        if (backup == null || backup.length == 0) return null;],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/tribes/tipis/ReplicatedMap.java,publishEntryInfo,121-121,[        if (backup == null || backup.length == 0) return null;],,
MT_CORRECTNESS,NO_NOTIFY_NOT_NOTIFYALL,org/apache/catalina/tribes/transport/AbstractRxTask.java,close,72-72,[        notify();],,
MALICIOUS_CODE,MS_MUTABLE_ARRAY,org/apache/catalina/tribes/transport/Constants.java,,37-37,[    public static final byte[] ACK_COMMAND = XByteBuffer.createDataPackage(ACK_DATA);],,
MALICIOUS_CODE,MS_MUTABLE_ARRAY,org/apache/catalina/tribes/transport/Constants.java,,35-35,[    public static final byte[] ACK_DATA = new byte[] {6, 2, 3};],,
MALICIOUS_CODE,MS_MUTABLE_ARRAY,org/apache/catalina/tribes/transport/Constants.java,,38-38,[    public static final byte[] FAIL_ACK_COMMAND = XByteBuffer.createDataPackage(FAIL_ACK_DATA);],,
MALICIOUS_CODE,MS_MUTABLE_ARRAY,org/apache/catalina/tribes/transport/Constants.java,,36-36,[    public static final byte[] FAIL_ACK_DATA = new byte[] {11, 0, 5};],,
MT_CORRECTNESS,NO_NOTIFY_NOT_NOTIFYALL,org/apache/catalina/tribes/transport/PooledSender.java,close,219-219,[            notify();],,
MT_CORRECTNESS,NO_NOTIFY_NOT_NOTIFYALL,org/apache/catalina/tribes/transport/PooledSender.java,open,226-226,[            notify();],,
MT_CORRECTNESS,NO_NOTIFY_NOT_NOTIFYALL,org/apache/catalina/tribes/transport/PooledSender.java,returnSender,202-202,[            notify();],,
MT_CORRECTNESS,NN_NAKED_NOTIFY,org/apache/catalina/tribes/transport/RxTaskPool.java,returnWorker,107-107,[                    synchronized (worker){worker.notify();}],,
MT_CORRECTNESS,NO_NOTIFY_NOT_NOTIFYALL,org/apache/catalina/tribes/transport/RxTaskPool.java,returnWorker,113-113,[            synchronized (worker){worker.notify();}],,
MALICIOUS_CODE,MS_MUTABLE_COLLECTION_PKGPROTECT,org/apache/catalina/tribes/transport/SenderState.java,,37-37,[    protected static final HashMap<Member, SenderState> memberStates =],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/catalina/tribes/transport/bio/BioSender.java,closeSocket,199-199,[                log.debug(sm.getString("IDataSender.closeSocket",getAddress().getHostAddress(), new Integer(getPort()),new Long(0)));],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/catalina/tribes/transport/bio/BioSender.java,closeSocket,199-199,[                log.debug(sm.getString("IDataSender.closeSocket",getAddress().getHostAddress(), new Integer(getPort()),new Long(0)));],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/catalina/tribes/transport/bio/BioSender.java,disconnect,93-93,[                log.debug(sm.getString("IDataSender.disconnect", getAddress().getHostAddress(), new Integer(getPort()), new Long(0)));],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/catalina/tribes/transport/bio/BioSender.java,disconnect,93-93,[                log.debug(sm.getString("IDataSender.disconnect", getAddress().getHostAddress(), new Integer(getPort()), new Long(0)));],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/catalina/tribes/transport/bio/BioSender.java,openSocket,168-168,[               log.debug(sm.getString("IDataSender.openSocket", getAddress().getHostAddress(), new Integer(getPort()), new Long(0)));],,openSocket,172-172,[              log.debug(sm.getString("IDataSender.openSocket.failure",getAddress().getHostAddress(), new Integer(getPort()),new Long(0)), ex1);],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/catalina/tribes/transport/bio/BioSender.java,openSocket,168-168,[               log.debug(sm.getString("IDataSender.openSocket", getAddress().getHostAddress(), new Integer(getPort()), new Long(0)));],,openSocket,172-172,[              log.debug(sm.getString("IDataSender.openSocket.failure",getAddress().getHostAddress(), new Integer(getPort()),new Long(0)), ex1);],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/catalina/tribes/transport/bio/BioSender.java,sendMessage,110-110,[            if (log.isTraceEnabled()) log.trace(sm.getString("IDataSender.send.again", getAddress().getHostAddress(),new Integer(getPort())),x);],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/catalina/tribes/transport/bio/BioSender.java,waitForAck,259-259,[                if (i == -1) throw new IOException(sm.getString("IDataSender.ack.eof",getAddress(), new Integer(socket.getLocalPort())));],,waitForAck,260-260,[                else throw new IOException(sm.getString("IDataSender.ack.wrong",getAddress(), new Integer(socket.getLocalPort())));],,waitForAck,265-265,[            String errmsg = sm.getString("IDataSender.ack.missing", getAddress(),new Integer(socket.getLocalPort()), new Long(getTimeout()));],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/catalina/tribes/transport/bio/BioSender.java,waitForAck,265-265,[            String errmsg = sm.getString("IDataSender.ack.missing", getAddress(),new Integer(socket.getLocalPort()), new Long(getTimeout()));],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/catalina/tribes/transport/bio/MultipointBioSender.java,disconnect,123-123,[        try {close(); }catch (Exception x){/* Ignore */}],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/catalina/tribes/transport/bio/MultipointBioSender.java,finalize,129-129,[        try {disconnect(); }catch ( Exception e){/* Ignore */}],,
MALICIOUS_CODE,FI_PUBLIC_SHOULD_BE_PROTECTED,org/apache/catalina/tribes/transport/bio/MultipointBioSender.java,finalize,129-131,[        try {disconnect(); }catch ( Exception e){/* Ignore */},         super.finalize();,     }],,
STYLE,REC_CATCH_EXCEPTION,org/apache/catalina/tribes/transport/bio/MultipointBioSender.java,setupForSend,73-73,[            }catch (Exception x ) {],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/tribes/transport/bio/util/LinkObject.java,getDestination,101-101,[        return destination;],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/tribes/transport/bio/util/LinkObject.java,getKey,89-89,[        return key;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/catalina/tribes/transport/bio/util/LinkObject.java,<init>,53-53,[        this.destination = destination;],,
STYLE,REC_CATCH_EXCEPTION,org/apache/catalina/tribes/transport/nio/NioReceiver.java,stopListening,364-364,[            } catch (Exception x) {],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/catalina/tribes/transport/nio/NioReplicationTask.java,,243-264,[        Runnable r = new Runnable() {,             @Override,             public void run() {,                 try {,                     if (key.isValid()) {,                         // cycle the selector so this key is active again,                         key.selector().wakeup();,                         // resume interest in OP_READ, OP_WRITE,                         int resumeOps = key.interestOps() | SelectionKey.OP_READ;,                         key.interestOps(resumeOps);,                         if ( log.isTraceEnabled() ),                             log.trace("Registering key for read:"+key);,                     },                 } catch (CancelledKeyException ckx ) {,                     NioReceiver.cancelledKey(key);,                     if ( log.isTraceEnabled() ),                         log.trace("CKX Cancelling key:"+key);, ,                 } catch (Exception x) {,                     log.error("Error registering key for read:"+key,x);,                 },             }],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/catalina/tribes/transport/nio/NioReplicationTask.java,,278-285,[        Runnable cx = new Runnable() {,             @Override,             public void run() {,                 if ( log.isTraceEnabled() ),                     log.trace("Cancelling key:"+key);, ,                 NioReceiver.cancelledKey(key);,             }],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/catalina/tribes/transport/nio/NioSender.java,disconnect,272-272,[                    } catch (Exception x) {],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/tribes/transport/nio/NioSender.java,getMessage,380-380,[        return current;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/catalina/tribes/transport/nio/NioSender.java,setMessage,354-354,[                current = data;],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/catalina/tribes/transport/nio/NioSender.java,,190-190,[        if ( (!isConnected()) || (this.socketChannel==null && this.dataChannel==null)) {],,,197-197,[                int byteswritten = isUdpBased()?dataChannel.write(writebuf) : socketChannel.write(writebuf);],,,288-288,[            if (dataChannel != null) {],,,291-291,[                        dataChannel.socket().close();],,,305-305,[                    dataChannel = null;],,,300-300,[                        dataChannel.close();],,,169-169,[        int read = isUdpBased()?dataChannel.read(readbuf) : socketChannel.read(readbuf);],,,236-236,[            if ( dataChannel != null ) throw new IOException("Datagram channel has already been established. Connection might be in progress.");],,,237-237,[            dataChannel = DatagramChannel.open();],,,239-239,[            dataChannel.connect(daddr);],,,241-241,[            dataChannel.register(getSelector(),SelectionKey.OP_WRITE, this);],,,146-146,[        } else if (dataChannel!=null) {],,,147-147,[            dataChannel.configureBlocking(false);],,,148-148,[            dataChannel.socket().setSendBufferSize(getUdpTxBufSize());],,,149-149,[            dataChannel.socket().setReceiveBufferSize(getUdpRxBufSize());],,,150-150,[            dataChannel.socket().setSoTimeout((int)getTimeout());],,,151-151,[            dataChannel.socket().setReuseAddress(getSoReuseAddress());],,,152-152,[            dataChannel.socket().setTrafficClass(getSoTrafficClass());],,,371-371,[                        dataChannel.register(getSelector(), SelectionKey.OP_WRITE, this);],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/catalina/tribes/transport/nio/NioSender.java,,190-190,[        if ( (!isConnected()) || (this.socketChannel==null && this.dataChannel==null)) {],,,197-197,[                int byteswritten = isUdpBased()?dataChannel.write(writebuf) : socketChannel.write(writebuf);],,,89-89,[            if ( socketChannel.finishConnect() ) {],,,268-268,[            if (socketChannel != null) {],,,271-271,[                        socketChannel.socket().close();],,,285-285,[                    socketChannel = null;],,,280-280,[                        socketChannel.close();],,,169-169,[        int read = isUdpBased()?dataChannel.read(readbuf) : socketChannel.read(readbuf);],,,245-245,[            if ( socketChannel != null ) throw new IOException("Socket channel has already been established. Connection might be in progress.");],,,246-246,[            socketChannel = SocketChannel.open();],,,248-248,[            if ( socketChannel.connect(addr) ) {],,,252-252,[                socketChannel.register(getSelector(), SelectionKey.OP_CONNECT, this);],,,250-250,[                socketChannel.register(getSelector(), SelectionKey.OP_WRITE, this);],,,134-134,[        if (socketChannel!=null) {],,,135-135,[            socketChannel.configureBlocking(false);],,,136-136,[            socketChannel.socket().setSendBufferSize(getTxBufSize());],,,137-137,[            socketChannel.socket().setReceiveBufferSize(getRxBufSize());],,,138-138,[            socketChannel.socket().setSoTimeout((int)getTimeout());],,,139-139,[            socketChannel.socket().setSoLinger(getSoLingerOn(),getSoLingerOn()?getSoLingerTime():0);],,,140-140,[            socketChannel.socket().setTcpNoDelay(getTcpNoDelay());],,,141-141,[            socketChannel.socket().setKeepAlive(getSoKeepAlive());],,,142-142,[            socketChannel.socket().setReuseAddress(getSoReuseAddress());],,,143-143,[            socketChannel.socket().setOOBInline(getOoBInline());],,,144-144,[            socketChannel.socket().setSoLinger(getSoLingerOn(),getSoLingerTime());],,,145-145,[            socketChannel.socket().setTrafficClass(getSoTrafficClass());],,,373-373,[                        socketChannel.register(getSelector(), SelectionKey.OP_WRITE, this);],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/catalina/tribes/transport/nio/NioSender.java,,197-197,[                int byteswritten = isUdpBased()?dataChannel.write(writebuf) : socketChannel.write(writebuf);],,,319-319,[        if ( writebuf != null ) writebuf.clear();],,,228-228,[        if ( writebuf == null ) {],,,231-231,[            writebuf.clear();],,,229-229,[            writebuf = getWriteBuffer();],,,357-357,[                if (writebuf != null) {],,,358-358,[                    writebuf.clear();],,,360-360,[                    writebuf = getBuffer(length);],,,362-362,[                if (writebuf.capacity() < length) {],,,367-367,[                writebuf.put(data,offset,length);],,,368-368,[                writebuf.flip();],,,363-363,[                    writebuf = getBuffer(length);],,
STYLE,REC_CATCH_EXCEPTION,org/apache/catalina/tribes/transport/nio/NioSender.java,disconnect,308-308,[        } catch ( Exception x ) {],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/catalina/tribes/transport/nio/ParallelNioSender.java,disconnect,301-301,[        try {close(); }catch (Exception x){/*Ignore*/}],,
MALICIOUS_CODE,FI_PUBLIC_SHOULD_BE_PROTECTED,org/apache/catalina/tribes/transport/nio/ParallelNioSender.java,finalize,306-315,[        try {disconnect(); }catch ( Exception e){/*Ignore*/},         try {,             selector.close();,         }catch (Exception e) {,             if (log.isDebugEnabled()) {,                 log.debug("Failed to close selector", e);,             },         },         super.finalize();,     }],,
STYLE,REC_CATCH_EXCEPTION,org/apache/catalina/tribes/transport/nio/ParallelNioSender.java,sendMessage,116-116,[        } catch (Exception x ) {],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/catalina/tribes/util/Arrays.java,fromString,205-205,[        if ( value == null ) return null;],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/catalina/tribes/util/TcclThreadFactory.java,,56-60,[            AccessController.doPrivileged(new PrivilegedAction<Void>() {,                 @Override,                 public Void run() {,                     t.setContextClassLoader(this.getClass().getClassLoader());,                     return null;],,
BAD_PRACTICE,NM_CONFUSING,org/apache/catalina/users/MemoryUserDatabase.java,setReadonly,205-207,[        this.readonly = readonly;, ,     }],,setReadOnly,261-267,[        if (readOnly) {,             // This is the hard-coded default - ignore the call,             return;,         }, ,         throw new IllegalArgumentException(,                 sm.getString("abstractArchiveResourceSet.setReadOnlyFalse"));],,
BAD_PRACTICE,RV_RETURN_VALUE_IGNORED_BAD_PRACTICE,org/apache/catalina/users/MemoryUserDatabase.java,save,573-573,[                fileNew.delete();],,save,583-583,[            fileNew.delete();],,save,593-593,[        fileOld.delete();],,save,600-600,[            fileOld.delete();],,save,615-615,[        fileOld.delete();],,
BAD_PRACTICE,RV_RETURN_VALUE_IGNORED_BAD_PRACTICE,org/apache/catalina/users/MemoryUserDatabase.java,save,609-609,[                fileOld.renameTo(fileOrig);],,
BAD_PRACTICE,UI_INHERITANCE_UNSAFE_GETRESOURCE,org/apache/catalina/util/CharsetMapper.java,<init>,72-72,[        try (InputStream stream = this.getClass().getResourceAsStream(name)) {],,
STYLE,SF_SWITCH_NO_DEFAULT,org/apache/catalina/util/DOMWriter.java,print,64-138,[        switch (type) {,             // print document,             case Node.DOCUMENT_NODE:,                 if (!canonical) {,                     String Encoding = getWriterEncoding();,                     if (Encoding.equalsIgnoreCase("DEFAULT")),                         Encoding = "UTF-8";,                     else if (Encoding.equalsIgnoreCase("Unicode")),                         Encoding = "UTF-16";,                     else,                         Encoding = MIME2Java.reverse(Encoding);, ,                     out.println("<?xml version=\"1.0\" encoding=\"" + Encoding +,                             "\"?>");,                 },                 print(((Document) node).getDocumentElement());,                 out.flush();,                 break;, ,             // print element with attributes,             case Node.ELEMENT_NODE:,                 out.print('<');,                 out.print(node.getLocalName());,                 Attr attrs[] = sortAttributes(node.getAttributes());,                 for (int i = 0; i < attrs.length; i++) {,                     Attr attr = attrs[i];,                     out.print(' ');,                     out.print(attr.getLocalName());, ,                     out.print("=\"");,                     out.print(normalize(attr.getNodeValue()));,                     out.print('"');,                 },                 out.print('>');,                 printChildren(node);,                 break;, ,             // handle entity reference nodes,             case Node.ENTITY_REFERENCE_NODE:,                 if (canonical) {,                     printChildren(node);,                 } else {,                     out.print('&');,                     out.print(node.getLocalName());,                     out.print(';');,                 },                 break;, ,             // print cdata sections,             case Node.CDATA_SECTION_NODE:,                 if (canonical) {,                     out.print(normalize(node.getNodeValue()));,                 } else {,                     out.print("<![CDATA[");,                     out.print(node.getNodeValue());,                     out.print("]]>");,                 },                 break;, ,             // print text,             case Node.TEXT_NODE:,                 out.print(normalize(node.getNodeValue()));,                 break;, ,             // print processing instruction,             case Node.PROCESSING_INSTRUCTION_NODE:,                 out.print("<?");,                 out.print(node.getLocalName());, ,                 String data = node.getNodeValue();,                 if (data != null && data.length() > 0) {,                     out.print(' ');,                     out.print(data);,                 },                 out.print("?>");],,
STYLE,NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE,org/apache/catalina/util/ExtensionValidator.java,addFolderList,356-356,[                for (int i = 0; i < files.length; i++) {],,addFolderList,355-355,[                File[] files = targetDir.listFiles();],,
MT_CORRECTNESS,UG_SYNC_SET_UNSYNC_GET,org/apache/catalina/util/LifecycleBase.java,getState,324-324,[        return state;],,setState,362-363,[        setStateInternal(state, data, true);,     }],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/util/LifecycleSupport.java,findLifecycleListeners,99-99,[        return listeners;],,
STYLE,SF_SWITCH_NO_DEFAULT,org/apache/catalina/util/ManifestResource.java,toString,130-133,[        switch (resourceType) {,             case SYSTEM : sb.append(", resourceType=SYSTEM"); break;,             case WAR : sb.append(", resourceType=WAR"); break;,             case APPLICATION : sb.append(", resourceType=APPLICATION"); break;],,
MALICIOUS_CODE,MS_MUTABLE_COLLECTION_PKGPROTECT,org/apache/catalina/util/Strftime.java,,52-52,[        translate = new Properties();],,
I18N,DM_DEFAULT_ENCODING,org/apache/catalina/util/URLEncoder.java,encode,69-69,[            writer = new OutputStreamWriter(buf);],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/valves/AbstractAccessLogValve.java,addElement,810-810,[            if (value == null || value.length() == 0) {],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/valves/AbstractAccessLogValve.java,addElement,1050-1050,[                if (method == null) {],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/valves/AbstractAccessLogValve.java,addElement,1057-1057,[                    if (request.getQueryString() != null) {],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/catalina/valves/AccessLogValve.java,,325-325,[        return encoding;],,,337-337,[            this.encoding = null;],,,335-335,[            this.encoding = encoding;],,,566-566,[        if (encoding != null) {],,,568-568,[                charset = B2CConverter.getCharset(encoding);],,,570-570,[                log.error(sm.getString(],,
BAD_PRACTICE,RV_RETURN_VALUE_IGNORED_BAD_PRACTICE,org/apache/catalina/valves/AccessLogValve.java,rotate,399-399,[                holder.renameTo(new File(newFileName));],,
PERFORMANCE,SS_SHOULD_BE_STATIC,org/apache/catalina/valves/CometConnectionManagerValve.java,,74-74,[    protected final String cometRequestsAttribute =],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/catalina/valves/ExtendedAccessLogValve.java,getProxyElement,728-728,[        log.error("The next characters couldn't be decoded: " + token);],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/catalina/valves/ExtendedAccessLogValve.java,createLogElements,551-551,[                return null;],,createLogElements,579-579,[            return null;],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/catalina/valves/ExtendedAccessLogValve.java,,612-624,[                return new AccessLogElement() {,                     @Override,                     public void addElement(CharArrayWriter buf, Date date,,                             Request request, Response response, long time) {,                         String value;,                         try {,                             value = InetAddress.getLocalHost().getHostName();,                         } catch (Throwable e) {,                             ExceptionUtils.handleThrowable(e);,                             value = "localhost";,                         },                         buf.append(value);,                     }],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/catalina/valves/ExtendedAccessLogValve.java,,847-852,[            return new AccessLogElement() {,                 @Override,                 public void addElement(CharArrayWriter buf, Date date,,                         Request request, Response response, long time) {,                     buf.append(request.getScheme());,                 }],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/valves/ExtendedAccessLogValve.java,addElement,658-658,[                                if (query != null) {],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/catalina/valves/ExtendedAccessLogValve.java,,652-663,[                        return new AccessLogElement() {,                             @Override,                             public void addElement(CharArrayWriter buf,,                                     Date date, Request request,,                                     Response response, long time) {,                                 String query = request.getQueryString();,                                 if (query != null) {,                                     buf.append(query);,                                 } else {,                                     buf.append('-');,                                 },                             }],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/valves/ExtendedAccessLogValve.java,addElement,672-672,[                            if (query == null) {],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/catalina/valves/ExtendedAccessLogValve.java,,667-679,[                    return new AccessLogElement() {,                         @Override,                         public void addElement(CharArrayWriter buf, Date date,,                                 Request request, Response response, long time) {,                             String query = request.getQueryString();,                             if (query == null) {,                                 buf.append(request.getRequestURI());,                             } else {,                                 buf.append(request.getRequestURI());,                                 buf.append('?');,                                 buf.append(request.getQueryString());,                             },                         }],,
SECURITY,SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING,org/apache/catalina/valves/JDBCAccessLogValve.java,open,588-588,[                    ("INSERT INTO " + tableName + " ("],,open,595-595,[                    ("INSERT INTO " + tableName + " ("],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/valves/StuckThreadDetectionValve.java,invoke,199-199,[        if(request.getQueryString()!=null) {],,
STYLE,UC_USELESS_OBJECT,org/apache/catalina/valves/rewrite/RewriteCond.java,parse,114-114,[            LexicalCondition condition = new LexicalCondition();],,
STYLE,UC_USELESS_OBJECT,org/apache/catalina/valves/rewrite/RewriteCond.java,parse,118-118,[            LexicalCondition condition = new LexicalCondition();],,
STYLE,UC_USELESS_OBJECT,org/apache/catalina/valves/rewrite/RewriteCond.java,parse,122-122,[            LexicalCondition condition = new LexicalCondition();],,
STYLE,UC_USELESS_OBJECT,org/apache/catalina/valves/rewrite/RewriteCond.java,parse,135-135,[            PatternCondition condition = new PatternCondition();],,
STYLE,UC_USELESS_OBJECT,org/apache/catalina/valves/rewrite/RewriteCond.java,parse,126-126,[            ResourceCondition ncondition = new ResourceCondition();],,
STYLE,UC_USELESS_OBJECT,org/apache/catalina/valves/rewrite/RewriteCond.java,parse,129-129,[            ResourceCondition ncondition = new ResourceCondition();],,
STYLE,UC_USELESS_OBJECT,org/apache/catalina/valves/rewrite/RewriteCond.java,parse,132-132,[            ResourceCondition ncondition = new ResourceCondition();],,
STYLE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,org/apache/catalina/valves/rewrite/RewriteCond.java,evaluate,36-36,[            Matcher m = pattern.matcher(value);],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/valves/rewrite/RewriteRule.java,getConditions,334-334,[        return conditions;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/catalina/valves/rewrite/RewriteRule.java,setConditions,337-337,[        this.conditions = conditions;],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/catalina/valves/rewrite/RewriteValve.java,invoke,480-480,[                    } catch (Exception e) {],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/valves/rewrite/RewriteValve.java,invoke,344-344,[                    if (queryString != null && queryString.length() > 0) {],,invoke,403-403,[                    if (urlString.indexOf('?') != -1 && queryString != null) {],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/catalina/valves/rewrite/RewriteValve.java,getHostConfigPath,144-144,[                    if (resourceName != null) {],,
BAD_PRACTICE,RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN,org/apache/catalina/valves/rewrite/RewriteValve.java,invoke,285-285,[        if (invoked.get() == Boolean.TRUE) {],,
STYLE,REC_CATCH_EXCEPTION,org/apache/catalina/valves/rewrite/RewriteValve.java,parse,598-598,[                } catch (Exception e) {],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/catalina/webresources/AbstractArchiveResource.java,getCertificates,203-203,[        return certificates;],,
BAD_PRACTICE,NM_CONFUSING,org/apache/catalina/webresources/AbstractArchiveResource.java,getURL,137-144,[        String url = baseUrl + "!/" + resource.getName();,         try {,             return new URL(url);,         } catch (MalformedURLException e) {,             if (getLog().isDebugEnabled()) {,                 getLog().debug(sm.getString("fileResource.getUrlFail", url), e);,             },             return null;],,getUrl,76-76,[        return url;],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC,org/apache/catalina/webresources/AbstractArchiveResource.java,,225-288,[        public JarInputStreamWrapper(JarFile jarFile, JarEntry jarEntry, InputStream is) {,             this.jarFile = jarFile;,             this.jarEntry = jarEntry;,             this.is = is;,         }, , ,         @Override,         public int read() throws IOException {,             return is.read();,         }, , ,         @Override,         public int read(byte[] b) throws IOException {,             return is.read(b);,         }, , ,         @Override,         public int read(byte[] b, int off, int len) throws IOException {,             return is.read(b, off, len);,         }, , ,         @Override,         public long skip(long n) throws IOException {,             return is.skip(n);,         }, , ,         @Override,         public int available() throws IOException {,             return is.available();,         }, , ,         @Override,         public void close() throws IOException {,             // Closing the JarFile releases the file lock on the JAR and also,             // closes all input streams created from the JarFile.,             jarFile.close();,         }, , ,         @Override,         public synchronized void mark(int readlimit) {,             is.mark(readlimit);,         }, , ,         @Override,         public synchronized void reset() throws IOException {,             is.reset();,         }, , ,         @Override,         public boolean markSupported() {,             return is.markSupported();,         }, ,         public Certificate[] getCertificates() {,             return jarEntry.getCertificates();],,
BAD_PRACTICE,SE_COMPARATOR_SHOULD_BE_SERIALIZABLE,org/apache/catalina/webresources/Cache.java,,313-327,[    private static class EvictionOrder implements Comparator<CachedResource> {, ,         @Override,         public int compare(CachedResource cr1, CachedResource cr2) {,             long nc1 = cr1.getNextCheck();,             long nc2 = cr2.getNextCheck();, ,             // Oldest resource should be first (so iterator goes from oldest to,             // youngest.,             if (nc1 == nc2) {,                 return 0;,             } else if (nc1 > nc2) {,                 return -1;,             } else {,                 return 1;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/catalina/webresources/CachedResource.java,getContent,280-280,[                return null;],,
STYLE,SA_LOCAL_DOUBLE_ASSIGNMENT,org/apache/catalina/webresources/DirResourceSet.java,getResource,103-103,[                path = path += '/';],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/catalina/webresources/EmptyResource.java,getCertificates,160-160,[        return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/catalina/webresources/EmptyResource.java,getContent,140-140,[        return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/catalina/webresources/FileResource.java,getCertificates,216-216,[        return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/catalina/webresources/JarResourceRoot.java,getCertificates,154-154,[        return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/catalina/webresources/JarResourceRoot.java,getContent,115-115,[        return null;],,
BAD_PRACTICE,NM_CONFUSING,org/apache/coyote/AbstractProtocol.java,setMaxConnections,196-197,[        endpoint.setMaxConnections(maxConnections);,     }],,setMaxconnections,223-224,[        this.maxConnections = maxCon;,     }],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/coyote/AbstractProtocol.java,process,765-765,[                release(wrapper, processor, true, false);],,
STYLE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,org/apache/coyote/Response.java,doWrite,492-492,[        outputBuffer.doWrite(chunk, this);],,
STYLE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,org/apache/coyote/Response.java,getBytesWritten,535-535,[        return outputBuffer.getBytesWritten();],,
STYLE,DB_DUPLICATE_SWITCH_CLAUSES,org/apache/coyote/ajp/AbstractAjpProcessor.java,prepareRequest,1248-1250,[                requestHeaderMessage.getBytes(tmpMB);,                 // nothing,                 break;],,prepareRequest,1253-1255,[                requestHeaderMessage.getBytes(tmpMB);,                 // nothing,                 break;],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/coyote/ajp/AbstractAjpProcessor.java,,107-107,[        endAndCloseMessageArray = new byte[endAndCloseMessage.getLen()];],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/coyote/ajp/AbstractAjpProcessor.java,,97-97,[        endMessageArray = new byte[endMessage.getLen()];],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/coyote/ajp/AbstractAjpProcessor.java,,118-118,[        flushMessageArray = new byte[flushMessage.getLen()];],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/coyote/ajp/AbstractAjpProcessor.java,,127-127,[        pongMessageArray = new byte[pongMessage.getLen()];],,
STYLE,ICAST_INTEGER_MULTIPLY_CAST_TO_LONG,org/apache/coyote/ajp/AjpAprProcessor.java,setTimeout,101-101,[                socketWrapper.getSocket().longValue(), timeout * 1000);],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/coyote/ajp/AjpMessage.java,getBuffer,119-119,[        return buf;],,
STYLE,REC_CATCH_EXCEPTION,org/apache/coyote/ajp/Constants.java,<clinit>,233-233,[        catch (Exception e) {],,
BAD_PRACTICE,NM_CONFUSING,org/apache/coyote/http11/AbstractHttp11JsseProtocol.java,getSslProtocol,48-48,[    public String getSslProtocol() { return endpoint.getSslProtocol();}],,getSSLProtocol,100-100,[    public String getSSLProtocol() { return ((AprEndpoint)endpoint).getSSLProtocol(); }],,
BAD_PRACTICE,NM_CONFUSING,org/apache/coyote/http11/AbstractHttp11JsseProtocol.java,setSslProtocol,49-49,[    public void setSslProtocol(String s) { endpoint.setSslProtocol(s);}],,setSSLProtocol,101-101,[    public void setSSLProtocol(String SSLProtocol) { ((AprEndpoint)endpoint).setSSLProtocol(SSLProtocol); }],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/coyote/http11/AbstractHttp11Processor.java,setCompressableMimeTypes,305-305,[        this.compressableMimeTypes = compressableMimeTypes;],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/coyote/http11/AbstractHttp11Processor.java,prepareRequest,1280-1280,[                if (restrictedUserAgents != null &&],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/coyote/http11/AbstractHttp11Processor.java,useCompression,573-573,[                if (noCompressionUserAgents != null &&],,
STYLE,SF_SWITCH_FALLTHROUGH,org/apache/coyote/http11/AbstractHttp11Processor.java,process,1036-1040,[                            message += sm.getString(,                                     "http11processor.fallToDebug");,                             //$FALL-THROUGH$,                         case INFO:,                             getLog().info(message);],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/coyote/http11/AbstractInputBuffer.java,getFilters,196-196,[        return filterLibrary;],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/coyote/http11/AbstractInputBuffer.java,,32-32,[    protected static final boolean[] HTTP_TOKEN_CHAR = new boolean[128];],,
STYLE,UC_USELESS_CONDITION,org/apache/coyote/http11/AbstractInputBuffer.java,<clinit>,84-84,[                HTTP_TOKEN_CHAR[i] = false;],,<clinit>,83-83,[            } else if (i == '\t') {],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/coyote/http11/AbstractNioInputBuffer.java,parseHeaders,378-378,[        HeaderParseStatus status = HeaderParseStatus.HAVE_MORE_HEADERS;],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/coyote/http11/AbstractOutputBuffer.java,getFilters,179-179,[        return filterLibrary;],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/coyote/http11/Constants.java,,133-133,[        ByteChunk.convertToBytes("HTTP/1.1 100 Continue" + CRLF + CRLF);],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/coyote/http11/Constants.java,,127-127,[        ByteChunk.convertToBytes(CLOSE);],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/coyote/http11/Constants.java,,184-184,[        ByteChunk.convertToBytes(HTTP_11);],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/coyote/http11/Constants.java,,130-130,[        ByteChunk.convertToBytes(KEEPALIVE);],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/coyote/http11/Constants.java,,54-54,[        ByteChunk.convertToBytes("Server: Apache-Coyote/1.1" + CRLF);],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/coyote/http11/Constants.java,,136-136,[        ByteChunk.convertToBytes("200");],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/coyote/http11/Constants.java,,138-138,[        ByteChunk.convertToBytes("400");],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/coyote/http11/Constants.java,,140-140,[        ByteChunk.convertToBytes("404");],,
STYLE,ICAST_INTEGER_MULTIPLY_CAST_TO_LONG,org/apache/coyote/http11/Http11AprProcessor.java,setSocketTimeout,184-184,[        Socket.timeoutSet(socketWrapper.getSocket().longValue(), timeout * 1000);],,
STYLE,BC_UNCONFIRMED_CAST,org/apache/coyote/http11/Http11Nio2Processor.java,breakKeepAliveLoop,281-281,[            ((Nio2Endpoint.Nio2SocketWrapper) socketWrapper).setSendfileData(sendfileData);],,breakKeepAliveLoop,283-283,[            switch (((Nio2Endpoint) endpoint)],,
STYLE,BC_UNCONFIRMED_CAST,org/apache/coyote/http11/Http11Nio2Protocol.java,longPoll,227-227,[                if (((Nio2SocketWrapper) socket).isUpgradeInit()) {],,
STYLE,BC_UNCONFIRMED_CAST,org/apache/coyote/http11/Http11NioProcessor.java,breakKeepAliveLoop,279-279,[            ((KeyAttachment) socketWrapper).setSendfileData(sendfileData);],,breakKeepAliveLoop,284-284,[            if (socketWrapper.getSocket().getPoller().processSendfile(key,],,
STYLE,SF_SWITCH_NO_DEFAULT,org/apache/coyote/http11/Http11Processor.java,actionInternal,239-369,[        switch (actionCode) {,         case REQ_SSL_ATTRIBUTE: {,             try {,                 if (sslSupport != null) {,                     Object sslO = sslSupport.getCipherSuite();,                     if (sslO != null),                         request.setAttribute,                             (SSLSupport.CIPHER_SUITE_KEY, sslO);,                     sslO = sslSupport.getPeerCertificateChain(false);,                     if (sslO != null),                         request.setAttribute,                             (SSLSupport.CERTIFICATE_KEY, sslO);,                     sslO = sslSupport.getKeySize();,                     if (sslO != null),                         request.setAttribute,                             (SSLSupport.KEY_SIZE_KEY, sslO);,                     sslO = sslSupport.getSessionId();,                     if (sslO != null),                         request.setAttribute,                             (SSLSupport.SESSION_ID_KEY, sslO);,                     request.setAttribute(SSLSupport.SESSION_MGR, sslSupport);,                 },             } catch (Exception e) {,                 log.warn(sm.getString("http11processor.socket.ssl"), e);,             },             break;,         },         case REQ_HOST_ADDR_ATTRIBUTE: {,             if (socketWrapper == null) {,                 request.remoteAddr().recycle();,             } else {,                 if (socketWrapper.getRemoteAddr() == null) {,                     InetAddress inetAddr = socketWrapper.getSocket().getInetAddress();,                     if (inetAddr != null) {,                         socketWrapper.setRemoteAddr(inetAddr.getHostAddress());,                     },                 },                 request.remoteAddr().setString(socketWrapper.getRemoteAddr());,             },             break;,         },         case REQ_LOCAL_NAME_ATTRIBUTE: {,             if (socketWrapper == null) {,                 request.localName().recycle();,             } else {,                 if (socketWrapper.getLocalName() == null) {,                     InetAddress inetAddr = socketWrapper.getSocket().getLocalAddress();,                     if (inetAddr != null) {,                         socketWrapper.setLocalName(inetAddr.getHostName());,                     },                 },                 request.localName().setString(socketWrapper.getLocalName());,             },             break;,         },         case REQ_HOST_ATTRIBUTE: {,             if (socketWrapper == null) {,                 request.remoteHost().recycle();,             } else {,                 if (socketWrapper.getRemoteHost() == null) {,                     InetAddress inetAddr = socketWrapper.getSocket().getInetAddress();,                     if (inetAddr != null) {,                         socketWrapper.setRemoteHost(inetAddr.getHostName());,                     },                     if (socketWrapper.getRemoteHost() == null) {,                         if (socketWrapper.getRemoteAddr() == null &&,                                 inetAddr != null) {,                             socketWrapper.setRemoteAddr(inetAddr.getHostAddress());,                         },                         if (socketWrapper.getRemoteAddr() != null) {,                             socketWrapper.setRemoteHost(socketWrapper.getRemoteAddr());,                         },                     },                 },                 request.remoteHost().setString(socketWrapper.getRemoteHost());,             },             break;,         },         case REQ_LOCAL_ADDR_ATTRIBUTE: {,             if (socketWrapper == null) {,                 request.localAddr().recycle();,             } else {,                 if (socketWrapper.getLocalAddr() == null) {,                     socketWrapper.setLocalAddr(,                             socketWrapper.getSocket().getLocalAddress().getHostAddress());,                 },                 request.localAddr().setString(socketWrapper.getLocalAddr());,             },             break;,         },         case REQ_REMOTEPORT_ATTRIBUTE: {,             if (socketWrapper == null) {,                 request.setRemotePort(0);,             } else {,                 if (socketWrapper.getRemotePort() == -1) {,                     socketWrapper.setRemotePort(socketWrapper.getSocket().getPort());,                 },                 request.setRemotePort(socketWrapper.getRemotePort());,             },             break;,         },         case REQ_LOCALPORT_ATTRIBUTE: {,             if (socketWrapper == null) {,                 request.setLocalPort(0);,             } else {,                 if (socketWrapper.getLocalPort() == -1) {,                     socketWrapper.setLocalPort(socketWrapper.getSocket().getLocalPort());,                 },                 request.setLocalPort(socketWrapper.getLocalPort());,             },             break;,         },         case REQ_SSL_CERTIFICATE: {,             if (sslSupport != null) {,                 /*,                  * Consume and buffer the request body, so that it does not,                  * interfere with the client's handshake messages,                  */,                 InputFilter[] inputFilters = inputBuffer.getFilters();,                 ((BufferedInputFilter) inputFilters[Constants.BUFFERED_FILTER]),                     .setLimit(maxSavePostSize);,                 inputBuffer.addActiveFilter,                     (inputFilters[Constants.BUFFERED_FILTER]);,                 try {,                     Object sslO = sslSupport.getPeerCertificateChain(true);,                     if( sslO != null) {,                         request.setAttribute,                             (SSLSupport.CERTIFICATE_KEY, sslO);,                     },                 } catch (Exception e) {,                     log.warn(sm.getString("http11processor.socket.ssl"), e);],,
STYLE,UC_USELESS_CONDITION,org/apache/coyote/http11/InternalAprInputBuffer.java,fill,611-611,[        return (nRead > 0);],,
MT_CORRECTNESS,UL_UNRELEASED_LOCK_EXCEPTION_PATH,org/apache/coyote/http11/InternalAprInputBuffer.java,doReadSocket,639-639,[            writeLock.lock();],,
STYLE,ICAST_INTEGER_MULTIPLY_CAST_TO_LONG,org/apache/coyote/http11/InternalAprOutputBuffer.java,writeToSocket,257-257,[                Socket.timeoutSet(socket, endpoint.getSoTimeout() * 1000);],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/coyote/http11/InternalAprOutputBuffer.java,,117-117,[        wrapper = null;],,,96-96,[        wrapper = socketWrapper;],,,211-211,[        wrapper.access();],,,187-187,[        wrapper.access();],,,239-239,[        Lock readLock = wrapper.getBlockingStatusReadLock();],,,240-240,[        WriteLock writeLock = wrapper.getBlockingStatusWriteLock();],,,244-244,[            if (wrapper.getBlockingStatus() == block) {],,,255-255,[            wrapper.setBlockingStatus(block);],,
MT_CORRECTNESS,UL_UNRELEASED_LOCK_EXCEPTION_PATH,org/apache/coyote/http11/InternalAprOutputBuffer.java,writeToSocket,252-252,[        writeLock.lock();],,
STYLE,BC_UNCONFIRMED_CAST_OF_RETURN_VALUE,org/apache/coyote/http11/InternalNio2InputBuffer.java,fill,227-227,[                        throw (IOException) e.getCause();],,
STYLE,BC_UNCONFIRMED_CAST_OF_RETURN_VALUE,org/apache/coyote/http11/InternalNio2OutputBuffer.java,flushBufferInternal,404-404,[                    throw (IOException) e.getCause();],,
STYLE,BC_UNCONFIRMED_CAST,org/apache/coyote/http11/InternalNioOutputBuffer.java,init,79-79,[        pool = ((NioEndpoint)endpoint).getSelectorPool();],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/coyote/http11/InternalNioOutputBuffer.java,,90-90,[        if (socket != null) {],,,91-91,[            socket.getBufHandler().getWriteBuffer().clear();],,,92-92,[            socket = null;],,,278-278,[        NioEndpoint.KeyAttachment att = (NioEndpoint.KeyAttachment)socket.getAttachment(false);],,,282-282,[        att.getPoller().add(socket, SelectionKey.OP_WRITE);],,,106-106,[            socket.getBufHandler().getWriteBuffer().put(],,,108-108,[            int result = writeToSocket(socket.getBufHandler().getWriteBuffer(), true, true);],,,78-78,[        socket = socketWrapper.getSocket();],,,271-271,[        return (flipped && socket.getBufHandler().getWriteBuffer().remaining()>0) ||],,,234-234,[        SelectionKey key = socket.getIOChannel().keyFor(socket.getPoller().getSelector());],,,244-244,[            writeToSocket(socket.getBufHandler().getWriteBuffer(),block, !flipped);],,,255-255,[                    transfer(buffer.getBuf(), socket.getBufHandler().getWriteBuffer());],,,259-259,[                    writeToSocket(socket.getBufHandler().getWriteBuffer(),block, true);],,,206-206,[        NioEndpoint.KeyAttachment ka = (NioEndpoint.KeyAttachment)socket.getAttachment(false);],,,194-194,[            int thisTime = transfer(buf,offset,length,socket.getBufHandler().getWriteBuffer());],,,197-197,[            int written = writeToSocket(socket.getBufHandler().getWriteBuffer(),],,,129-129,[        NioEndpoint.KeyAttachment att = (NioEndpoint.KeyAttachment)socket.getAttachment(false);],,,139-139,[            written = pool.write(bytebuffer, socket, selector, writeTimeout, block);],,,142-142,[                if (socket.flush(true,selector,writeTimeout)) break;],,
STYLE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,org/apache/coyote/http11/filters/BufferedInputFilter.java,setRequest,81-81,[            while (buffer.doRead(tempRead, request) >= 0) {],,
STYLE,UC_USELESS_CONDITION,org/apache/coyote/http11/filters/ChunkedInputFilter.java,parseChunkHeader,394-394,[            return false;],,parseChunkHeader,393-393,[        if (remaining < 0) {],,
STYLE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,org/apache/coyote/http11/filters/ChunkedOutputFilter.java,doWrite,116-116,[        buffer.doWrite(chunkHeader, res);],,
STYLE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,org/apache/coyote/http11/filters/ChunkedOutputFilter.java,end,166-166,[        buffer.doWrite(END_CHUNK, null);],,
STYLE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,org/apache/coyote/http11/filters/ChunkedOutputFilter.java,getBytesWritten,130-130,[        return buffer.getBytesWritten();],,
STYLE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,org/apache/coyote/http11/filters/IdentityOutputFilter.java,doWrite,84-84,[                buffer.doWrite(chunk, res);],,doWrite,93-93,[            buffer.doWrite(chunk, res);],,
STYLE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,org/apache/coyote/http11/filters/IdentityOutputFilter.java,getBytesWritten,104-104,[        return buffer.getBytesWritten();],,
STYLE,ICAST_INTEGER_MULTIPLY_CAST_TO_LONG,org/apache/coyote/http11/upgrade/AprServletOutputStream.java,doWrite,79-79,[                Socket.timeoutSet(socket, endpoint.getSoTimeout() * 1000);],,
STYLE,BC_UNCONFIRMED_CAST_OF_RETURN_VALUE,org/apache/coyote/http11/upgrade/Nio2ServletInputStream.java,fillReadBuffer,199-199,[                    throw (IOException) e.getCause();],,
STYLE,BC_UNCONFIRMED_CAST_OF_RETURN_VALUE,org/apache/coyote/http11/upgrade/Nio2ServletOutputStream.java,doFlush,170-170,[                throw (IOException) e.getCause();],,
STYLE,BC_UNCONFIRMED_CAST_OF_RETURN_VALUE,org/apache/coyote/http11/upgrade/Nio2ServletOutputStream.java,doWriteInternal,130-130,[                    throw (IOException) e.getCause();],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/coyote/spdy/SpdyAprNpnHandler.java,,81-88,[        spdyContext.setHandler(new SpdyHandler() {,             @Override,             public void onStream(SpdyConnection con, SpdyStream ch),                     throws IOException {,                 SpdyProcessor<Long> sp = new SpdyProcessor<>(con, ep);,                 sp.setAdapter(adapter);,                 sp.onSynStream(ch);,             }],,
I18N,DM_DEFAULT_ENCODING,org/apache/coyote/spdy/SpdyProcessor.java,sendResponseHead,495-495,[            byte[] statusB = status.getBytes();],,
STYLE,DMI_NONSERIALIZABLE_OBJECT_WRITTEN,org/apache/el/MethodExpressionImpl.java,writeExternal,312-312,[        out.writeObject(this.fnMapper);],,
STYLE,DMI_NONSERIALIZABLE_OBJECT_WRITTEN,org/apache/el/MethodExpressionImpl.java,writeExternal,313-313,[        out.writeObject(this.varMapper);],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/el/MethodExpressionImpl.java,<init>,114-114,[        this.paramTypes = paramTypes;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/el/MethodExpressionLiteral.java,<init>,49-49,[        this.paramTypes = paramTypes;],,
STYLE,DMI_NONSERIALIZABLE_OBJECT_WRITTEN,org/apache/el/ValueExpressionImpl.java,writeExternal,269-269,[        out.writeObject(this.fnMapper);],,
STYLE,DMI_NONSERIALIZABLE_OBJECT_WRITTEN,org/apache/el/ValueExpressionImpl.java,writeExternal,270-270,[        out.writeObject(this.varMapper);],,
PERFORMANCE,DM_FP_NUMBER_CTOR,org/apache/el/lang/ELArithmetic.java,mod,66-66,[            return new Double(num0.doubleValue() % num1.doubleValue());],,
PERFORMANCE,DM_FP_NUMBER_CTOR,org/apache/el/lang/ELArithmetic.java,add,135-135,[            return new Double(num0.doubleValue() + num1.doubleValue());],,
PERFORMANCE,DM_FP_NUMBER_CTOR,org/apache/el/lang/ELArithmetic.java,coerce,144-144,[            return new Double(num.doubleValue());],,
PERFORMANCE,DM_FP_NUMBER_CTOR,org/apache/el/lang/ELArithmetic.java,coerce,149-149,[            return new Double(str);],,
PERFORMANCE,DM_FP_NUMBER_CTOR,org/apache/el/lang/ELArithmetic.java,divide,154-154,[            return new Double(num0.doubleValue() / num1.doubleValue());],,
PERFORMANCE,DM_FP_NUMBER_CTOR,org/apache/el/lang/ELArithmetic.java,mod,159-159,[            return new Double(num0.doubleValue() % num1.doubleValue());],,
PERFORMANCE,DM_FP_NUMBER_CTOR,org/apache/el/lang/ELArithmetic.java,multiply,181-181,[            return new Double(num0.doubleValue() * num1.doubleValue());],,
PERFORMANCE,DM_FP_NUMBER_CTOR,org/apache/el/lang/ELArithmetic.java,subtract,170-170,[            return new Double(num0.doubleValue() - num1.doubleValue());],,
PERFORMANCE,DM_FP_NUMBER_CTOR,org/apache/el/lang/ELSupport.java,coerceToNumber,275-275,[            return new Double(number.doubleValue());],,
PERFORMANCE,DM_FP_NUMBER_CTOR,org/apache/el/lang/ELSupport.java,coerceToNumber,305-305,[            return new Float(number.floatValue());],,
BAD_PRACTICE,NP_BOOLEAN_RETURN_NULL,org/apache/el/lang/ELSupport.java,coerceToBoolean,231-231,[                return null;],,
BAD_PRACTICE,RV_NEGATING_RESULT_OF_COMPARETO,org/apache/el/lang/ELSupport.java,compare,136-136,[            return (obj0 != null) ? -comparable.compareTo(obj0) : -1;],,
STYLE,REC_CATCH_EXCEPTION,org/apache/el/lang/ExpressionBuilder.java,createNodeInternal,141-141,[            } catch (Exception e) {],,
PERFORMANCE,DM_FP_NUMBER_CTOR,org/apache/el/parser/AstFloatingPoint.java,getFloatingPoint,41-41,[                this.number = new Double(this.image);],,
STYLE,BC_VACUOUS_INSTANCEOF,org/apache/el/parser/AstFunction.java,getValue,106-106,[                    if (obj instanceof ValueExpression) {],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/el/parser/AstInteger.java,getInteger,41-41,[                this.number = new Long(this.image);],,
PERFORMANCE,DM_FP_NUMBER_CTOR,org/apache/el/parser/AstNegative.java,getValue,59-59,[                return new Double(-Double.parseDouble((String) obj));],,getValue,67-67,[            return new Double(-((Double) obj).doubleValue());],,
PERFORMANCE,DM_FP_NUMBER_CTOR,org/apache/el/parser/AstNegative.java,getValue,73-73,[            return new Float(-((Float) obj).floatValue());],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/el/parser/AstValue.java,getTarget,117-117,[                    throw new PropertyNotFoundException(MessageFactory.get(],,getTarget,100-100,[                    throw new PropertyNotFoundException(MessageFactory.get(],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/el/parser/AstValue.java,getTypesFromValues,296-296,[            return null;],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,And,585-634,[    Equality();,     label_8:,     while (true) {,       switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,       case AND0:,       case AND1:,         ;,         break;,       default:,         jj_la1[12] = jj_gen;,         break label_8;,       },       switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,       case AND0:,         jj_consume_token(AND0);,         break;,       case AND1:,         jj_consume_token(AND1);,         break;,       default:,         jj_la1[13] = jj_gen;,         jj_consume_token(-1);,         throw new ParseException();,       },                                   AstAnd jjtn001 = new AstAnd(JJTAND);,                                   boolean jjtc001 = true;,                                   jjtree.openNodeScope(jjtn001);,       try {,         Equality();,       } catch (Throwable jjte001) {,                                   if (jjtc001) {,                                     jjtree.clearNodeScope(jjtn001);,                                     jjtc001 = false;,                                   } else {,                                     jjtree.popNode();,                                   },                                   if (jjte001 instanceof RuntimeException) {,                                     {if (true) throw (RuntimeException)jjte001;},                                   },                                   if (jjte001 instanceof ParseException) {,                                     {if (true) throw (ParseException)jjte001;},                                   },                                   {if (true) throw (Error)jjte001;},       } finally {,                                   if (jjtc001) {,                                     jjtree.closeNodeScope(jjtn001,  2);,                                   },       },     },   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,Assignment,225-284,[    if (jj_2_2(4)) {,       LambdaExpression();,     } else {,       switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,       case START_SET_OR_MAP:,       case INTEGER_LITERAL:,       case FLOATING_POINT_LITERAL:,       case STRING_LITERAL:,       case TRUE:,       case FALSE:,       case NULL:,       case LPAREN:,       case LBRACK:,       case NOT0:,       case NOT1:,       case EMPTY:,       case MINUS:,       case IDENTIFIER:,         Choice();,         label_3:,         while (true) {,           if (jj_2_1(2)) {,             ;,           } else {,             break label_3;,           },           jj_consume_token(ASSIGN);,                                        AstAssign jjtn001 = new AstAssign(JJTASSIGN);,                                        boolean jjtc001 = true;,                                        jjtree.openNodeScope(jjtn001);,           try {,             Assignment();,           } catch (Throwable jjte001) {,                                        if (jjtc001) {,                                          jjtree.clearNodeScope(jjtn001);,                                          jjtc001 = false;,                                        } else {,                                          jjtree.popNode();,                                        },                                        if (jjte001 instanceof RuntimeException) {,                                          {if (true) throw (RuntimeException)jjte001;},                                        },                                        if (jjte001 instanceof ParseException) {,                                          {if (true) throw (ParseException)jjte001;},                                        },                                        {if (true) throw (Error)jjte001;},           } finally {,                                        if (jjtc001) {,                                          jjtree.closeNodeScope(jjtn001,  2);,                                        },           },         },         break;,       default:,         jj_la1[3] = jj_gen;,         jj_consume_token(-1);,         throw new ParseException();,       },     },   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,Boolean,1918-1948,[    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,     case TRUE:,       AstTrue jjtn001 = new AstTrue(JJTTRUE);,       boolean jjtc001 = true;,       jjtree.openNodeScope(jjtn001);,       try {,         jj_consume_token(TRUE);,       } finally {,       if (jjtc001) {,         jjtree.closeNodeScope(jjtn001, true);,       },       },       break;,     case FALSE:,         AstFalse jjtn002 = new AstFalse(JJTFALSE);,         boolean jjtc002 = true;,         jjtree.openNodeScope(jjtn002);,       try {,         jj_consume_token(FALSE);,       } finally {,         if (jjtc002) {,           jjtree.closeNodeScope(jjtn002, true);,         },       },       break;,     default:,       jj_la1[51] = jj_gen;,       jj_consume_token(-1);,       throw new ParseException();,     },   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,BracketSuffix,1433-1459,[  AstBracketSuffix jjtn000 = new AstBracketSuffix(JJTBRACKETSUFFIX);,   boolean jjtc000 = true;,   jjtree.openNodeScope(jjtn000);,     try {,       jj_consume_token(LBRACK);,       Expression();,       jj_consume_token(RBRACK);,     } catch (Throwable jjte000) {,       if (jjtc000) {,         jjtree.clearNodeScope(jjtn000);,         jjtc000 = false;,       } else {,         jjtree.popNode();,       },       if (jjte000 instanceof RuntimeException) {,         {if (true) throw (RuntimeException)jjte000;},       },       if (jjte000 instanceof ParseException) {,         {if (true) throw (ParseException)jjte000;},       },       {if (true) throw (Error)jjte000;},     } finally {,       if (jjtc000) {,         jjtree.closeNodeScope(jjtn000, true);,       },     },   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,Choice,486-522,[    Or();,     label_6:,     while (true) {,       if (jj_2_5(3)) {,         ;,       } else {,         break label_6;,       },       jj_consume_token(QUESTIONMARK);,       Choice();,       jj_consume_token(COLON);,                                                          AstChoice jjtn001 = new AstChoice(JJTCHOICE);,                                                          boolean jjtc001 = true;,                                                          jjtree.openNodeScope(jjtn001);,       try {,         Choice();,       } catch (Throwable jjte001) {,                                                          if (jjtc001) {,                                                            jjtree.clearNodeScope(jjtn001);,                                                            jjtc001 = false;,                                                          } else {,                                                            jjtree.popNode();,                                                          },                                                          if (jjte001 instanceof RuntimeException) {,                                                            {if (true) throw (RuntimeException)jjte001;},                                                          },                                                          if (jjte001 instanceof ParseException) {,                                                            {if (true) throw (ParseException)jjte001;},                                                          },                                                          {if (true) throw (Error)jjte001;},       } finally {,                                                          if (jjtc001) {,                                                            jjtree.closeNodeScope(jjtn001,  3);,                                                          },       },     },   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,Compare,747-928,[    Concatenation();,     label_10:,     while (true) {,       switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,       case GT0:,       case GT1:,       case LT0:,       case LT1:,       case GE0:,       case GE1:,       case LE0:,       case LE1:,         ;,         break;,       default:,         jj_la1[18] = jj_gen;,         break label_10;,       },       switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,       case LT0:,       case LT1:,         switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,         case LT0:,           jj_consume_token(LT0);,           break;,         case LT1:,           jj_consume_token(LT1);,           break;,         default:,           jj_la1[19] = jj_gen;,           jj_consume_token(-1);,           throw new ParseException();,         },                          AstLessThan jjtn001 = new AstLessThan(JJTLESSTHAN);,                          boolean jjtc001 = true;,                          jjtree.openNodeScope(jjtn001);,         try {,           Concatenation();,         } catch (Throwable jjte001) {,                          if (jjtc001) {,                            jjtree.clearNodeScope(jjtn001);,                            jjtc001 = false;,                          } else {,                            jjtree.popNode();,                          },                          if (jjte001 instanceof RuntimeException) {,                            {if (true) throw (RuntimeException)jjte001;},                          },                          if (jjte001 instanceof ParseException) {,                            {if (true) throw (ParseException)jjte001;},                          },                          {if (true) throw (Error)jjte001;},         } finally {,                          if (jjtc001) {,                            jjtree.closeNodeScope(jjtn001,  2);,                          },         },         break;,       case GT0:,       case GT1:,         switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,         case GT0:,           jj_consume_token(GT0);,           break;,         case GT1:,           jj_consume_token(GT1);,           break;,         default:,           jj_la1[20] = jj_gen;,           jj_consume_token(-1);,           throw new ParseException();,         },                          AstGreaterThan jjtn002 = new AstGreaterThan(JJTGREATERTHAN);,                          boolean jjtc002 = true;,                          jjtree.openNodeScope(jjtn002);,         try {,           Concatenation();,         } catch (Throwable jjte002) {,                          if (jjtc002) {,                            jjtree.clearNodeScope(jjtn002);,                            jjtc002 = false;,                          } else {,                            jjtree.popNode();,                          },                          if (jjte002 instanceof RuntimeException) {,                            {if (true) throw (RuntimeException)jjte002;},                          },                          if (jjte002 instanceof ParseException) {,                            {if (true) throw (ParseException)jjte002;},                          },                          {if (true) throw (Error)jjte002;},         } finally {,                          if (jjtc002) {,                            jjtree.closeNodeScope(jjtn002,  2);,                          },         },         break;,       case LE0:,       case LE1:,         switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,         case LE0:,           jj_consume_token(LE0);,           break;,         case LE1:,           jj_consume_token(LE1);,           break;,         default:,           jj_la1[21] = jj_gen;,           jj_consume_token(-1);,           throw new ParseException();,         },                          AstLessThanEqual jjtn003 = new AstLessThanEqual(JJTLESSTHANEQUAL);,                          boolean jjtc003 = true;,                          jjtree.openNodeScope(jjtn003);,         try {,           Concatenation();,         } catch (Throwable jjte003) {,                          if (jjtc003) {,                            jjtree.clearNodeScope(jjtn003);,                            jjtc003 = false;,                          } else {,                            jjtree.popNode();,                          },                          if (jjte003 instanceof RuntimeException) {,                            {if (true) throw (RuntimeException)jjte003;},                          },                          if (jjte003 instanceof ParseException) {,                            {if (true) throw (ParseException)jjte003;},                          },                          {if (true) throw (Error)jjte003;},         } finally {,                          if (jjtc003) {,                            jjtree.closeNodeScope(jjtn003,  2);,                          },         },         break;,       case GE0:,       case GE1:,         switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,         case GE0:,           jj_consume_token(GE0);,           break;,         case GE1:,           jj_consume_token(GE1);,           break;,         default:,           jj_la1[22] = jj_gen;,           jj_consume_token(-1);,           throw new ParseException();,         },                          AstGreaterThanEqual jjtn004 = new AstGreaterThanEqual(JJTGREATERTHANEQUAL);,                          boolean jjtc004 = true;,                          jjtree.openNodeScope(jjtn004);,         try {,           Concatenation();,         } catch (Throwable jjte004) {,                          if (jjtc004) {,                            jjtree.clearNodeScope(jjtn004);,                            jjtc004 = false;,                          } else {,                            jjtree.popNode();,                          },                          if (jjte004 instanceof RuntimeException) {,                            {if (true) throw (RuntimeException)jjte004;},                          },                          if (jjte004 instanceof ParseException) {,                            {if (true) throw (ParseException)jjte004;},                          },                          {if (true) throw (Error)jjte004;},         } finally {,                          if (jjtc004) {,                            jjtree.closeNodeScope(jjtn004,  2);,                          },         },         break;,       default:,         jj_la1[23] = jj_gen;,         jj_consume_token(-1);,         throw new ParseException();,       },     },   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,CompositeExpression,23-75,[  AstCompositeExpression jjtn000 = new AstCompositeExpression(JJTCOMPOSITEEXPRESSION);,   boolean jjtc000 = true;,   jjtree.openNodeScope(jjtn000);,     try {,       label_1:,       while (true) {,         switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,         case LITERAL_EXPRESSION:,         case START_DYNAMIC_EXPRESSION:,         case START_DEFERRED_EXPRESSION:,           ;,           break;,         default:,           jj_la1[0] = jj_gen;,           break label_1;,         },         switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,         case START_DEFERRED_EXPRESSION:,           DeferredExpression();,           break;,         case START_DYNAMIC_EXPRESSION:,           DynamicExpression();,           break;,         case LITERAL_EXPRESSION:,           LiteralExpression();,           break;,         default:,           jj_la1[1] = jj_gen;,           jj_consume_token(-1);,           throw new ParseException();,         },       },       jj_consume_token(0);,                                    jjtree.closeNodeScope(jjtn000, true);,                                    jjtc000 = false;,                                    {if (true) return jjtn000;},     } catch (Throwable jjte000) {,       if (jjtc000) {,         jjtree.clearNodeScope(jjtn000);,         jjtc000 = false;,       } else {,         jjtree.popNode();,       },       if (jjte000 instanceof RuntimeException) {,         {if (true) throw (RuntimeException)jjte000;},       },       if (jjte000 instanceof ParseException) {,         {if (true) throw (ParseException)jjte000;},       },       {if (true) throw (Error)jjte000;},     } finally {,       if (jjtc000) {,         jjtree.closeNodeScope(jjtn000, true);],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,Concatenation,936-973,[    Math();,     label_11:,     while (true) {,       switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,       case CONCAT:,         ;,         break;,       default:,         jj_la1[24] = jj_gen;,         break label_11;,       },       jj_consume_token(CONCAT);,                     AstConcatenation jjtn001 = new AstConcatenation(JJTCONCATENATION);,                     boolean jjtc001 = true;,                     jjtree.openNodeScope(jjtn001);,       try {,         Math();,       } catch (Throwable jjte001) {,                     if (jjtc001) {,                       jjtree.clearNodeScope(jjtn001);,                       jjtc001 = false;,                     } else {,                       jjtree.popNode();,                     },                     if (jjte001 instanceof RuntimeException) {,                       {if (true) throw (RuntimeException)jjte001;},                     },                     if (jjte001 instanceof ParseException) {,                       {if (true) throw (ParseException)jjte001;},                     },                     {if (true) throw (Error)jjte001;},       } finally {,                     if (jjtc001) {,                       jjtree.closeNodeScope(jjtn001,  2);,                     },       },     },   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,DeferredExpression,108-134,[  AstDeferredExpression jjtn000 = new AstDeferredExpression(JJTDEFERREDEXPRESSION);,   boolean jjtc000 = true;,   jjtree.openNodeScope(jjtn000);,     try {,       jj_consume_token(START_DEFERRED_EXPRESSION);,       Expression();,       jj_consume_token(RBRACE);,     } catch (Throwable jjte000) {,       if (jjtc000) {,         jjtree.clearNodeScope(jjtn000);,         jjtc000 = false;,       } else {,         jjtree.popNode();,       },       if (jjte000 instanceof RuntimeException) {,         {if (true) throw (RuntimeException)jjte000;},       },       if (jjte000 instanceof ParseException) {,         {if (true) throw (ParseException)jjte000;},       },       {if (true) throw (Error)jjte000;},     } finally {,       if (jjtc000) {,         jjtree.closeNodeScope(jjtn000, true);,       },     },   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,DotSuffix,1411-1425,[                                AstDotSuffix jjtn000 = new AstDotSuffix(JJTDOTSUFFIX);,                                 boolean jjtc000 = true;,                                 jjtree.openNodeScope(jjtn000);Token t = null;,     try {,       jj_consume_token(DOT);,       t = jj_consume_token(IDENTIFIER);,                            jjtree.closeNodeScope(jjtn000, true);,                            jjtc000 = false;,                            jjtn000.setImage(t.image);,     } finally {,       if (jjtc000) {,         jjtree.closeNodeScope(jjtn000, true);,       },     },   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,DynamicExpression,142-168,[  AstDynamicExpression jjtn000 = new AstDynamicExpression(JJTDYNAMICEXPRESSION);,   boolean jjtc000 = true;,   jjtree.openNodeScope(jjtn000);,     try {,       jj_consume_token(START_DYNAMIC_EXPRESSION);,       Expression();,       jj_consume_token(RBRACE);,     } catch (Throwable jjte000) {,       if (jjtc000) {,         jjtree.clearNodeScope(jjtn000);,         jjtc000 = false;,       } else {,         jjtree.popNode();,       },       if (jjte000 instanceof RuntimeException) {,         {if (true) throw (RuntimeException)jjte000;},       },       if (jjte000 instanceof ParseException) {,         {if (true) throw (ParseException)jjte000;},       },       {if (true) throw (Error)jjte000;},     } finally {,       if (jjtc000) {,         jjtree.closeNodeScope(jjtn000, true);,       },     },   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,Equality,641-740,[    Compare();,     label_9:,     while (true) {,       switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,       case EQ0:,       case EQ1:,       case NE0:,       case NE1:,         ;,         break;,       default:,         jj_la1[14] = jj_gen;,         break label_9;,       },       switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,       case EQ0:,       case EQ1:,         switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,         case EQ0:,           jj_consume_token(EQ0);,           break;,         case EQ1:,           jj_consume_token(EQ1);,           break;,         default:,           jj_la1[15] = jj_gen;,           jj_consume_token(-1);,           throw new ParseException();,         },                          AstEqual jjtn001 = new AstEqual(JJTEQUAL);,                          boolean jjtc001 = true;,                          jjtree.openNodeScope(jjtn001);,         try {,           Compare();,         } catch (Throwable jjte001) {,                          if (jjtc001) {,                            jjtree.clearNodeScope(jjtn001);,                            jjtc001 = false;,                          } else {,                            jjtree.popNode();,                          },                          if (jjte001 instanceof RuntimeException) {,                            {if (true) throw (RuntimeException)jjte001;},                          },                          if (jjte001 instanceof ParseException) {,                            {if (true) throw (ParseException)jjte001;},                          },                          {if (true) throw (Error)jjte001;},         } finally {,                          if (jjtc001) {,                            jjtree.closeNodeScope(jjtn001,  2);,                          },         },         break;,       case NE0:,       case NE1:,         switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,         case NE0:,           jj_consume_token(NE0);,           break;,         case NE1:,           jj_consume_token(NE1);,           break;,         default:,           jj_la1[16] = jj_gen;,           jj_consume_token(-1);,           throw new ParseException();,         },                          AstNotEqual jjtn002 = new AstNotEqual(JJTNOTEQUAL);,                          boolean jjtc002 = true;,                          jjtree.openNodeScope(jjtn002);,         try {,           Compare();,         } catch (Throwable jjte002) {,                          if (jjtc002) {,                            jjtree.clearNodeScope(jjtn002);,                            jjtc002 = false;,                          } else {,                            jjtree.popNode();,                          },                          if (jjte002 instanceof RuntimeException) {,                            {if (true) throw (RuntimeException)jjte002;},                          },                          if (jjte002 instanceof ParseException) {,                            {if (true) throw (ParseException)jjte002;},                          },                          {if (true) throw (Error)jjte002;},         } finally {,                          if (jjtc002) {,                            jjtree.closeNodeScope(jjtn002,  2);,                          },         },         break;,       default:,         jj_la1[17] = jj_gen;,         jj_consume_token(-1);,         throw new ParseException();,       },     },   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,Expression,175-176,[    Semicolon();,   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,FloatingPoint,1956-1969,[                                        AstFloatingPoint jjtn000 = new AstFloatingPoint(JJTFLOATINGPOINT);,                                         boolean jjtc000 = true;,                                         jjtree.openNodeScope(jjtn000);Token t = null;,     try {,       t = jj_consume_token(FLOATING_POINT_LITERAL);,                                  jjtree.closeNodeScope(jjtn000, true);,                                  jjtc000 = false;,                                  jjtn000.setImage(t.image);,     } finally {,       if (jjtc000) {,         jjtree.closeNodeScope(jjtn000, true);,       },     },   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,Function,1830-1882,[    AstFunction jjtn000 = new AstFunction(JJTFUNCTION);,     boolean jjtc000 = true;,     jjtree.openNodeScope(jjtn000);Token t0 = null;,     Token t1 = null;,     try {,       t0 = jj_consume_token(IDENTIFIER);,       switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,       case COLON:,         jj_consume_token(COLON);,         t1 = jj_consume_token(IDENTIFIER);,         break;,       default:,         jj_la1[48] = jj_gen;,         ;,       },         if (t1 != null) {,             jjtn000.setPrefix(t0.image);,             jjtn000.setLocalName(t1.image);,         } else {,             jjtn000.setLocalName(t0.image);,         },       label_19:,       while (true) {,         MethodParameters();,         switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,         case LPAREN:,           ;,           break;,         default:,           jj_la1[49] = jj_gen;,           break label_19;,         },       },     } catch (Throwable jjte000) {,       if (jjtc000) {,         jjtree.clearNodeScope(jjtn000);,         jjtc000 = false;,       } else {,         jjtree.popNode();,       },       if (jjte000 instanceof RuntimeException) {,         {if (true) throw (RuntimeException)jjte000;},       },       if (jjte000 instanceof ParseException) {,         {if (true) throw (ParseException)jjte000;},       },       {if (true) throw (Error)jjte000;},     } finally {,       if (jjtc000) {,         jjtree.closeNodeScope(jjtn000, true);,       },     },   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,Identifier,1809-1822,[                                  AstIdentifier jjtn000 = new AstIdentifier(JJTIDENTIFIER);,                                   boolean jjtc000 = true;,                                   jjtree.openNodeScope(jjtn000);Token t = null;,     try {,       t = jj_consume_token(IDENTIFIER);,                      jjtree.closeNodeScope(jjtn000, true);,                      jjtc000 = false;,                      jjtn000.setImage(t.image);,     } finally {,       if (jjtc000) {,         jjtree.closeNodeScope(jjtn000, true);,       },     },   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,Integer,1977-1990,[                            AstInteger jjtn000 = new AstInteger(JJTINTEGER);,                             boolean jjtc000 = true;,                             jjtree.openNodeScope(jjtn000);Token t = null;,     try {,       t = jj_consume_token(INTEGER_LITERAL);,                           jjtree.closeNodeScope(jjtn000, true);,                           jjtc000 = false;,                           jjtn000.setImage(t.image);,     } finally {,       if (jjtc000) {,         jjtree.closeNodeScope(jjtn000, true);,       },     },   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,LambdaExpression,291-342,[  AstLambdaExpression jjtn000 = new AstLambdaExpression(JJTLAMBDAEXPRESSION);,   boolean jjtc000 = true;,   jjtree.openNodeScope(jjtn000);,     try {,       LambdaParameters();,       jj_consume_token(ARROW);,       if (jj_2_3(3)) {,         LambdaExpression();,       } else {,         switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,         case START_SET_OR_MAP:,         case INTEGER_LITERAL:,         case FLOATING_POINT_LITERAL:,         case STRING_LITERAL:,         case TRUE:,         case FALSE:,         case NULL:,         case LPAREN:,         case LBRACK:,         case NOT0:,         case NOT1:,         case EMPTY:,         case MINUS:,         case IDENTIFIER:,           Choice();,           break;,         default:,           jj_la1[4] = jj_gen;,           jj_consume_token(-1);,           throw new ParseException();,         },       },     } catch (Throwable jjte000) {,       if (jjtc000) {,         jjtree.clearNodeScope(jjtn000);,         jjtc000 = false;,       } else {,         jjtree.popNode();,       },       if (jjte000 instanceof RuntimeException) {,         {if (true) throw (RuntimeException)jjte000;},       },       if (jjte000 instanceof ParseException) {,         {if (true) throw (ParseException)jjte000;},       },       {if (true) throw (Error)jjte000;},     } finally {,       if (jjtc000) {,         jjtree.closeNodeScope(jjtn000, true);,       },     },   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,LambdaExpressionOrInvocation,414-479,[  AstLambdaExpression jjtn000 = new AstLambdaExpression(JJTLAMBDAEXPRESSION);,   boolean jjtc000 = true;,   jjtree.openNodeScope(jjtn000);,     try {,       jj_consume_token(LPAREN);,       LambdaParameters();,       jj_consume_token(ARROW);,       if (jj_2_4(3)) {,         LambdaExpression();,       } else {,         switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,         case START_SET_OR_MAP:,         case INTEGER_LITERAL:,         case FLOATING_POINT_LITERAL:,         case STRING_LITERAL:,         case TRUE:,         case FALSE:,         case NULL:,         case LPAREN:,         case LBRACK:,         case NOT0:,         case NOT1:,         case EMPTY:,         case MINUS:,         case IDENTIFIER:,           Choice();,           break;,         default:,           jj_la1[8] = jj_gen;,           jj_consume_token(-1);,           throw new ParseException();,         },       },       jj_consume_token(RPAREN);,       label_5:,       while (true) {,         switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,         case LPAREN:,           ;,           break;,         default:,           jj_la1[9] = jj_gen;,           break label_5;,         },         MethodParameters();,       },     } catch (Throwable jjte000) {,       if (jjtc000) {,         jjtree.clearNodeScope(jjtn000);,         jjtc000 = false;,       } else {,         jjtree.popNode();,       },       if (jjte000 instanceof RuntimeException) {,         {if (true) throw (RuntimeException)jjte000;},       },       if (jjte000 instanceof ParseException) {,         {if (true) throw (ParseException)jjte000;},       },       {if (true) throw (Error)jjte000;},     } finally {,       if (jjtc000) {,         jjtree.closeNodeScope(jjtn000, true);,       },     },   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,LambdaParameters,349-406,[  AstLambdaParameters jjtn000 = new AstLambdaParameters(JJTLAMBDAPARAMETERS);,   boolean jjtc000 = true;,   jjtree.openNodeScope(jjtn000);,     try {,       switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,       case IDENTIFIER:,         Identifier();,         break;,       case LPAREN:,         jj_consume_token(LPAREN);,         switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,         case IDENTIFIER:,           Identifier();,           label_4:,           while (true) {,             switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,             case COMMA:,               ;,               break;,             default:,               jj_la1[5] = jj_gen;,               break label_4;,             },             jj_consume_token(COMMA);,             Identifier();,           },           break;,         default:,           jj_la1[6] = jj_gen;,           ;,         },         jj_consume_token(RPAREN);,         break;,       default:,         jj_la1[7] = jj_gen;,         jj_consume_token(-1);,         throw new ParseException();,       },     } catch (Throwable jjte000) {,       if (jjtc000) {,         jjtree.clearNodeScope(jjtn000);,         jjtc000 = false;,       } else {,         jjtree.popNode();,       },       if (jjte000 instanceof RuntimeException) {,         {if (true) throw (RuntimeException)jjte000;},       },       if (jjte000 instanceof ParseException) {,         {if (true) throw (ParseException)jjte000;},       },       {if (true) throw (Error)jjte000;},     } finally {,       if (jjtc000) {,         jjtree.closeNodeScope(jjtn000, true);,       },     },   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,ListData,1644-1703,[  AstListData jjtn000 = new AstListData(JJTLISTDATA);,   boolean jjtc000 = true;,   jjtree.openNodeScope(jjtn000);,     try {,       jj_consume_token(LBRACK);,       switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,       case START_SET_OR_MAP:,       case INTEGER_LITERAL:,       case FLOATING_POINT_LITERAL:,       case STRING_LITERAL:,       case TRUE:,       case FALSE:,       case NULL:,       case LPAREN:,       case LBRACK:,       case NOT0:,       case NOT1:,       case EMPTY:,       case MINUS:,       case IDENTIFIER:,         Expression();,         label_17:,         while (true) {,           switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,           case COMMA:,             ;,             break;,           default:,             jj_la1[44] = jj_gen;,             break label_17;,           },           jj_consume_token(COMMA);,           Expression();,         },         break;,       default:,         jj_la1[45] = jj_gen;,         ;,       },       jj_consume_token(RBRACK);,     } catch (Throwable jjte000) {,       if (jjtc000) {,         jjtree.clearNodeScope(jjtn000);,         jjtc000 = false;,       } else {,         jjtree.popNode();,       },       if (jjte000 instanceof RuntimeException) {,         {if (true) throw (RuntimeException)jjte000;},       },       if (jjte000 instanceof ParseException) {,         {if (true) throw (ParseException)jjte000;},       },       {if (true) throw (Error)jjte000;},     } finally {,       if (jjtc000) {,         jjtree.closeNodeScope(jjtn000, true);,       },     },   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,Literal,1889-1911,[    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,     case TRUE:,     case FALSE:,       Boolean();,       break;,     case FLOATING_POINT_LITERAL:,       FloatingPoint();,       break;,     case INTEGER_LITERAL:,       Integer();,       break;,     case STRING_LITERAL:,       String();,       break;,     case NULL:,       Null();,       break;,     default:,       jj_la1[50] = jj_gen;,       jj_consume_token(-1);,       throw new ParseException();,     },   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,LiteralExpression,87-100,[                                                AstLiteralExpression jjtn000 = new AstLiteralExpression(JJTLITERALEXPRESSION);,                                                 boolean jjtc000 = true;,                                                 jjtree.openNodeScope(jjtn000);Token t = null;,     try {,       t = jj_consume_token(LITERAL_EXPRESSION);,                              jjtree.closeNodeScope(jjtn000, true);,                              jjtc000 = false;,                              jjtn000.setImage(t.image);,     } finally {,       if (jjtc000) {,         jjtree.closeNodeScope(jjtn000, true);,       },     },   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,MapData,1712-1771,[  AstMapData jjtn000 = new AstMapData(JJTMAPDATA);,   boolean jjtc000 = true;,   jjtree.openNodeScope(jjtn000);,     try {,       jj_consume_token(START_SET_OR_MAP);,       switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,       case START_SET_OR_MAP:,       case INTEGER_LITERAL:,       case FLOATING_POINT_LITERAL:,       case STRING_LITERAL:,       case TRUE:,       case FALSE:,       case NULL:,       case LPAREN:,       case LBRACK:,       case NOT0:,       case NOT1:,       case EMPTY:,       case MINUS:,       case IDENTIFIER:,         MapEntry();,         label_18:,         while (true) {,           switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,           case COMMA:,             ;,             break;,           default:,             jj_la1[46] = jj_gen;,             break label_18;,           },           jj_consume_token(COMMA);,           MapEntry();,         },         break;,       default:,         jj_la1[47] = jj_gen;,         ;,       },       jj_consume_token(RBRACE);,     } catch (Throwable jjte000) {,       if (jjtc000) {,         jjtree.clearNodeScope(jjtn000);,         jjtc000 = false;,       } else {,         jjtree.popNode();,       },       if (jjte000 instanceof RuntimeException) {,         {if (true) throw (RuntimeException)jjte000;},       },       if (jjte000 instanceof ParseException) {,         {if (true) throw (ParseException)jjte000;},       },       {if (true) throw (Error)jjte000;},     } finally {,       if (jjtc000) {,         jjtree.closeNodeScope(jjtn000, true);,       },     },   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,MapEntry,1775-1801,[  AstMapEntry jjtn000 = new AstMapEntry(JJTMAPENTRY);,   boolean jjtc000 = true;,   jjtree.openNodeScope(jjtn000);,     try {,       Expression();,       jj_consume_token(COLON);,       Expression();,     } catch (Throwable jjte000) {,       if (jjtc000) {,         jjtree.clearNodeScope(jjtn000);,         jjtc000 = false;,       } else {,         jjtree.popNode();,       },       if (jjte000 instanceof RuntimeException) {,         {if (true) throw (RuntimeException)jjte000;},       },       if (jjte000 instanceof ParseException) {,         {if (true) throw (ParseException)jjte000;},       },       {if (true) throw (Error)jjte000;},     } finally {,       if (jjtc000) {,         jjtree.closeNodeScope(jjtn000, true);,       },     },   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,Math,980-1053,[    Multiplication();,     label_12:,     while (true) {,       switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,       case PLUS:,       case MINUS:,         ;,         break;,       default:,         jj_la1[25] = jj_gen;,         break label_12;,       },       switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,       case PLUS:,         jj_consume_token(PLUS);,                   AstPlus jjtn001 = new AstPlus(JJTPLUS);,                   boolean jjtc001 = true;,                   jjtree.openNodeScope(jjtn001);,         try {,           Multiplication();,         } catch (Throwable jjte001) {,                   if (jjtc001) {,                     jjtree.clearNodeScope(jjtn001);,                     jjtc001 = false;,                   } else {,                     jjtree.popNode();,                   },                   if (jjte001 instanceof RuntimeException) {,                     {if (true) throw (RuntimeException)jjte001;},                   },                   if (jjte001 instanceof ParseException) {,                     {if (true) throw (ParseException)jjte001;},                   },                   {if (true) throw (Error)jjte001;},         } finally {,                   if (jjtc001) {,                     jjtree.closeNodeScope(jjtn001,  2);,                   },         },         break;,       case MINUS:,         jj_consume_token(MINUS);,                    AstMinus jjtn002 = new AstMinus(JJTMINUS);,                    boolean jjtc002 = true;,                    jjtree.openNodeScope(jjtn002);,         try {,           Multiplication();,         } catch (Throwable jjte002) {,                    if (jjtc002) {,                      jjtree.clearNodeScope(jjtn002);,                      jjtc002 = false;,                    } else {,                      jjtree.popNode();,                    },                    if (jjte002 instanceof RuntimeException) {,                      {if (true) throw (RuntimeException)jjte002;},                    },                    if (jjte002 instanceof ParseException) {,                      {if (true) throw (ParseException)jjte002;},                    },                    {if (true) throw (Error)jjte002;},         } finally {,                    if (jjtc002) {,                      jjtree.closeNodeScope(jjtn002,  2);,                    },         },         break;,       default:,         jj_la1[26] = jj_gen;,         jj_consume_token(-1);,         throw new ParseException();,       },     },   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,MethodParameters,1466-1525,[  AstMethodParameters jjtn000 = new AstMethodParameters(JJTMETHODPARAMETERS);,   boolean jjtc000 = true;,   jjtree.openNodeScope(jjtn000);,     try {,       jj_consume_token(LPAREN);,       switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,       case START_SET_OR_MAP:,       case INTEGER_LITERAL:,       case FLOATING_POINT_LITERAL:,       case STRING_LITERAL:,       case TRUE:,       case FALSE:,       case NULL:,       case LPAREN:,       case LBRACK:,       case NOT0:,       case NOT1:,       case EMPTY:,       case MINUS:,       case IDENTIFIER:,         Expression();,         label_15:,         while (true) {,           switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,           case COMMA:,             ;,             break;,           default:,             jj_la1[37] = jj_gen;,             break label_15;,           },           jj_consume_token(COMMA);,           Expression();,         },         break;,       default:,         jj_la1[38] = jj_gen;,         ;,       },       jj_consume_token(RPAREN);,     } catch (Throwable jjte000) {,       if (jjtc000) {,         jjtree.clearNodeScope(jjtn000);,         jjtc000 = false;,       } else {,         jjtree.popNode();,       },       if (jjte000 instanceof RuntimeException) {,         {if (true) throw (RuntimeException)jjte000;},       },       if (jjte000 instanceof ParseException) {,         {if (true) throw (ParseException)jjte000;},       },       {if (true) throw (Error)jjte000;},     } finally {,       if (jjtc000) {,         jjtree.closeNodeScope(jjtn000, true);,       },     },   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,Multiplication,1060-1187,[    Unary();,     label_13:,     while (true) {,       switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,       case MULT:,       case DIV0:,       case DIV1:,       case MOD0:,       case MOD1:,         ;,         break;,       default:,         jj_la1[27] = jj_gen;,         break label_13;,       },       switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,       case MULT:,         jj_consume_token(MULT);,                   AstMult jjtn001 = new AstMult(JJTMULT);,                   boolean jjtc001 = true;,                   jjtree.openNodeScope(jjtn001);,         try {,           Unary();,         } catch (Throwable jjte001) {,                   if (jjtc001) {,                     jjtree.clearNodeScope(jjtn001);,                     jjtc001 = false;,                   } else {,                     jjtree.popNode();,                   },                   if (jjte001 instanceof RuntimeException) {,                     {if (true) throw (RuntimeException)jjte001;},                   },                   if (jjte001 instanceof ParseException) {,                     {if (true) throw (ParseException)jjte001;},                   },                   {if (true) throw (Error)jjte001;},         } finally {,                   if (jjtc001) {,                     jjtree.closeNodeScope(jjtn001,  2);,                   },         },         break;,       case DIV0:,       case DIV1:,         switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,         case DIV0:,           jj_consume_token(DIV0);,           break;,         case DIV1:,           jj_consume_token(DIV1);,           break;,         default:,           jj_la1[28] = jj_gen;,           jj_consume_token(-1);,           throw new ParseException();,         },                            AstDiv jjtn002 = new AstDiv(JJTDIV);,                            boolean jjtc002 = true;,                            jjtree.openNodeScope(jjtn002);,         try {,           Unary();,         } catch (Throwable jjte002) {,                            if (jjtc002) {,                              jjtree.clearNodeScope(jjtn002);,                              jjtc002 = false;,                            } else {,                              jjtree.popNode();,                            },                            if (jjte002 instanceof RuntimeException) {,                              {if (true) throw (RuntimeException)jjte002;},                            },                            if (jjte002 instanceof ParseException) {,                              {if (true) throw (ParseException)jjte002;},                            },                            {if (true) throw (Error)jjte002;},         } finally {,                            if (jjtc002) {,                              jjtree.closeNodeScope(jjtn002,  2);,                            },         },         break;,       case MOD0:,       case MOD1:,         switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,         case MOD0:,           jj_consume_token(MOD0);,           break;,         case MOD1:,           jj_consume_token(MOD1);,           break;,         default:,           jj_la1[29] = jj_gen;,           jj_consume_token(-1);,           throw new ParseException();,         },                            AstMod jjtn003 = new AstMod(JJTMOD);,                            boolean jjtc003 = true;,                            jjtree.openNodeScope(jjtn003);,         try {,           Unary();,         } catch (Throwable jjte003) {,                            if (jjtc003) {,                              jjtree.clearNodeScope(jjtn003);,                              jjtc003 = false;,                            } else {,                              jjtree.popNode();,                            },                            if (jjte003 instanceof RuntimeException) {,                              {if (true) throw (RuntimeException)jjte003;},                            },                            if (jjte003 instanceof ParseException) {,                              {if (true) throw (ParseException)jjte003;},                            },                            {if (true) throw (Error)jjte003;},         } finally {,                            if (jjtc003) {,                              jjtree.closeNodeScope(jjtn003,  2);,                            },         },         break;,       default:,         jj_la1[30] = jj_gen;,         jj_consume_token(-1);,         throw new ParseException();,       },     },   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,NonLiteral,1532-1572,[    if (jj_2_6(5)) {,       LambdaExpressionOrInvocation();,     } else {,       switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,       case LPAREN:,         jj_consume_token(LPAREN);,         Expression();,         jj_consume_token(RPAREN);,         break;,       default:,         jj_la1[39] = jj_gen;,         if (jj_2_7(2147483647)) {,           Function();,         } else {,           switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,           case IDENTIFIER:,             Identifier();,             break;,           default:,             jj_la1[40] = jj_gen;,             if (jj_2_8(3)) {,               SetData();,             } else {,               switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,               case LBRACK:,                 ListData();,                 break;,               case START_SET_OR_MAP:,                 MapData();,                 break;,               default:,                 jj_la1[41] = jj_gen;,                 jj_consume_token(-1);,                 throw new ParseException();,               },             },           },         },       },     },   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,Null,2019-2029,[  AstNull jjtn000 = new AstNull(JJTNULL);,   boolean jjtc000 = true;,   jjtree.openNodeScope(jjtn000);,     try {,       jj_consume_token(NULL);,     } finally {,       if (jjtc000) {,         jjtree.closeNodeScope(jjtn000, true);,       },     },   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,Or,529-578,[    And();,     label_7:,     while (true) {,       switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,       case OR0:,       case OR1:,         ;,         break;,       default:,         jj_la1[10] = jj_gen;,         break label_7;,       },       switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,       case OR0:,         jj_consume_token(OR0);,         break;,       case OR1:,         jj_consume_token(OR1);,         break;,       default:,         jj_la1[11] = jj_gen;,         jj_consume_token(-1);,         throw new ParseException();,       },                            AstOr jjtn001 = new AstOr(JJTOR);,                            boolean jjtc001 = true;,                            jjtree.openNodeScope(jjtn001);,       try {,         And();,       } catch (Throwable jjte001) {,                            if (jjtc001) {,                              jjtree.clearNodeScope(jjtn001);,                              jjtc001 = false;,                            } else {,                              jjtree.popNode();,                            },                            if (jjte001 instanceof RuntimeException) {,                              {if (true) throw (RuntimeException)jjte001;},                            },                            if (jjte001 instanceof ParseException) {,                              {if (true) throw (ParseException)jjte001;},                            },                            {if (true) throw (Error)jjte001;},       } finally {,                            if (jjtc001) {,                              jjtree.closeNodeScope(jjtn001,  2);,                            },       },     },   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,ReInit,2884-2885,[     ReInit(stream, null);,   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,ReInit,2888-2896,[    try { jj_input_stream.ReInit(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); },     token_source.ReInit(jj_input_stream);,     token = new Token();,     jj_ntk = -1;,     jjtree.reset();,     jj_gen = 0;,     for (int i = 0; i < 52; i++) jj_la1[i] = -1;,     for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();,   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,ReInit,2911-2919,[    jj_input_stream.ReInit(stream, 1, 1);,     token_source.ReInit(jj_input_stream);,     token = new Token();,     jj_ntk = -1;,     jjtree.reset();,     jj_gen = 0;,     for (int i = 0; i < 52; i++) jj_la1[i] = -1;,     for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();,   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,ReInit,2933-2940,[    token_source = tm;,     token = new Token();,     jj_ntk = -1;,     jjtree.reset();,     jj_gen = 0;,     for (int i = 0; i < 52; i++) jj_la1[i] = -1;,     for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();,   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,Semicolon,182-219,[    Assignment();,     label_2:,     while (true) {,       switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,       case SEMICOLON:,         ;,         break;,       default:,         jj_la1[2] = jj_gen;,         break label_2;,       },       jj_consume_token(SEMICOLON);,                                  AstSemicolon jjtn001 = new AstSemicolon(JJTSEMICOLON);,                                  boolean jjtc001 = true;,                                  jjtree.openNodeScope(jjtn001);,       try {,         Assignment();,       } catch (Throwable jjte001) {,                                  if (jjtc001) {,                                    jjtree.clearNodeScope(jjtn001);,                                    jjtc001 = false;,                                  } else {,                                    jjtree.popNode();,                                  },                                  if (jjte001 instanceof RuntimeException) {,                                    {if (true) throw (RuntimeException)jjte001;},                                  },                                  if (jjte001 instanceof ParseException) {,                                    {if (true) throw (ParseException)jjte001;},                                  },                                  {if (true) throw (Error)jjte001;},       } finally {,                                  if (jjtc001) {,                                    jjtree.closeNodeScope(jjtn001,  2);,                                  },       },     },   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,SetData,1581-1640,[  AstSetData jjtn000 = new AstSetData(JJTSETDATA);,   boolean jjtc000 = true;,   jjtree.openNodeScope(jjtn000);,     try {,       jj_consume_token(START_SET_OR_MAP);,       switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,       case START_SET_OR_MAP:,       case INTEGER_LITERAL:,       case FLOATING_POINT_LITERAL:,       case STRING_LITERAL:,       case TRUE:,       case FALSE:,       case NULL:,       case LPAREN:,       case LBRACK:,       case NOT0:,       case NOT1:,       case EMPTY:,       case MINUS:,       case IDENTIFIER:,         Expression();,         label_16:,         while (true) {,           switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,           case COMMA:,             ;,             break;,           default:,             jj_la1[42] = jj_gen;,             break label_16;,           },           jj_consume_token(COMMA);,           Expression();,         },         break;,       default:,         jj_la1[43] = jj_gen;,         ;,       },       jj_consume_token(RBRACE);,     } catch (Throwable jjte000) {,       if (jjtc000) {,         jjtree.clearNodeScope(jjtn000);,         jjtc000 = false;,       } else {,         jjtree.popNode();,       },       if (jjte000 instanceof RuntimeException) {,         {if (true) throw (RuntimeException)jjte000;},       },       if (jjte000 instanceof ParseException) {,         {if (true) throw (ParseException)jjte000;},       },       {if (true) throw (Error)jjte000;},     } finally {,       if (jjtc000) {,         jjtree.closeNodeScope(jjtn000, true);,       },     },   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,String,1998-2011,[                          AstString jjtn000 = new AstString(JJTSTRING);,                           boolean jjtc000 = true;,                           jjtree.openNodeScope(jjtn000);Token t = null;,     try {,       t = jj_consume_token(STRING_LITERAL);,                          jjtree.closeNodeScope(jjtn000, true);,                          jjtc000 = false;,                          jjtn000.setImage(t.image);,     } finally {,       if (jjtc000) {,         jjtree.closeNodeScope(jjtn000, true);,       },     },   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,Unary,1194-1305,[    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,     case MINUS:,       jj_consume_token(MINUS);,                   AstNegative jjtn001 = new AstNegative(JJTNEGATIVE);,                   boolean jjtc001 = true;,                   jjtree.openNodeScope(jjtn001);,       try {,         Unary();,       } catch (Throwable jjte001) {,                   if (jjtc001) {,                     jjtree.clearNodeScope(jjtn001);,                     jjtc001 = false;,                   } else {,                     jjtree.popNode();,                   },                   if (jjte001 instanceof RuntimeException) {,                     {if (true) throw (RuntimeException)jjte001;},                   },                   if (jjte001 instanceof ParseException) {,                     {if (true) throw (ParseException)jjte001;},                   },                   {if (true) throw (Error)jjte001;},       } finally {,                   if (jjtc001) {,                     jjtree.closeNodeScope(jjtn001, true);,                   },       },       break;,     case NOT0:,     case NOT1:,       switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,       case NOT0:,         jj_consume_token(NOT0);,         break;,       case NOT1:,         jj_consume_token(NOT1);,         break;,       default:,         jj_la1[31] = jj_gen;,         jj_consume_token(-1);,         throw new ParseException();,       },                           AstNot jjtn002 = new AstNot(JJTNOT);,                           boolean jjtc002 = true;,                           jjtree.openNodeScope(jjtn002);,       try {,         Unary();,       } catch (Throwable jjte002) {,                           if (jjtc002) {,                             jjtree.clearNodeScope(jjtn002);,                             jjtc002 = false;,                           } else {,                             jjtree.popNode();,                           },                           if (jjte002 instanceof RuntimeException) {,                             {if (true) throw (RuntimeException)jjte002;},                           },                           if (jjte002 instanceof ParseException) {,                             {if (true) throw (ParseException)jjte002;},                           },                           {if (true) throw (Error)jjte002;},       } finally {,                           if (jjtc002) {,                             jjtree.closeNodeScope(jjtn002, true);,                           },       },       break;,     case EMPTY:,       jj_consume_token(EMPTY);,                   AstEmpty jjtn003 = new AstEmpty(JJTEMPTY);,                   boolean jjtc003 = true;,                   jjtree.openNodeScope(jjtn003);,       try {,         Unary();,       } catch (Throwable jjte003) {,                   if (jjtc003) {,                     jjtree.clearNodeScope(jjtn003);,                     jjtc003 = false;,                   } else {,                     jjtree.popNode();,                   },                   if (jjte003 instanceof RuntimeException) {,                     {if (true) throw (RuntimeException)jjte003;},                   },                   if (jjte003 instanceof ParseException) {,                     {if (true) throw (ParseException)jjte003;},                   },                   {if (true) throw (Error)jjte003;},       } finally {,                   if (jjtc003) {,                     jjtree.closeNodeScope(jjtn003, true);,                   },       },       break;,     case START_SET_OR_MAP:,     case INTEGER_LITERAL:,     case FLOATING_POINT_LITERAL:,     case STRING_LITERAL:,     case TRUE:,     case FALSE:,     case NULL:,     case LPAREN:,     case LBRACK:,     case IDENTIFIER:,       Value();,       break;,     default:,       jj_la1[32] = jj_gen;,       jj_consume_token(-1);,       throw new ParseException();,     },   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,Value,1312-1349,[      AstValue jjtn001 = new AstValue(JJTVALUE);,       boolean jjtc001 = true;,       jjtree.openNodeScope(jjtn001);,     try {,       ValuePrefix();,       label_14:,       while (true) {,         switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,         case DOT:,         case LBRACK:,           ;,           break;,         default:,           jj_la1[33] = jj_gen;,           break label_14;,         },         ValueSuffix();,       },     } catch (Throwable jjte001) {,       if (jjtc001) {,         jjtree.clearNodeScope(jjtn001);,         jjtc001 = false;,       } else {,         jjtree.popNode();,       },       if (jjte001 instanceof RuntimeException) {,         {if (true) throw (RuntimeException)jjte001;},       },       if (jjte001 instanceof ParseException) {,         {if (true) throw (ParseException)jjte001;},       },       {if (true) throw (Error)jjte001;},     } finally {,       if (jjtc001) {,         jjtree.closeNodeScope(jjtn001, jjtree.nodeArity() > 1);,       },     },   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,ValuePrefix,1356-1376,[    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,     case INTEGER_LITERAL:,     case FLOATING_POINT_LITERAL:,     case STRING_LITERAL:,     case TRUE:,     case FALSE:,     case NULL:,       Literal();,       break;,     case START_SET_OR_MAP:,     case LPAREN:,     case LBRACK:,     case IDENTIFIER:,       NonLiteral();,       break;,     default:,       jj_la1[34] = jj_gen;,       jj_consume_token(-1);,       throw new ParseException();,     },   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParser.java,ValueSuffix,1383-1403,[    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,     case DOT:,       DotSuffix();,       break;,     case LBRACK:,       BracketSuffix();,       break;,     default:,       jj_la1[35] = jj_gen;,       jj_consume_token(-1);,       throw new ParseException();,     },     switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {,     case LPAREN:,       MethodParameters();,       break;,     default:,       jj_la1[36] = jj_gen;,       ;,     },   }],,
STYLE,SF_SWITCH_NO_DEFAULT,org/apache/el/parser/ELParser.java,jj_rescan_token,3100-3108,[          switch (i) {,             case 0: jj_3_1(); break;,             case 1: jj_3_2(); break;,             case 2: jj_3_3(); break;,             case 3: jj_3_4(); break;,             case 4: jj_3_5(); break;,             case 5: jj_3_6(); break;,             case 6: jj_3_7(); break;,             case 7: jj_3_8(); break;],,
MALICIOUS_CODE,MS_OOI_PKGPROTECT,org/apache/el/parser/ELParserConstants.java,,136-136,[  String[] tokenImage = {],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/el/parser/ELParserTokenManager.java,,1885-1885,[public static final int[] jjnewLexState = {],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/el/parser/ELParserTokenManager.java,,1867-1867,[public static final String[] jjstrLiteralImages = {],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/el/parser/ELParserTokenManager.java,,1878-1878,[public static final String[] lexStateNames = {],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParserTokenManager.java,ReInit,1920-1924,[   jjmatchedPos = jjnewStateCnt = 0;,    curLexState = defaultLexState;,    input_stream = stream;,    ReInitRounds();, }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParserTokenManager.java,ReInit,1936-1938,[   ReInit(stream);,    SwitchTo(lexState);, }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParserTokenManager.java,SwitchTo,1943-1947,[   if (lexState >= 3 || lexState < 0),       throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);,    else,       curLexState = lexState;, }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParserTokenManager.java,ReInitRounds,1928-1931,[   jjround = 0x80000001;,    for (i = 30; i-- > 0;),       jjrounds[i] = 0x80000000;, }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/ELParserTokenManager.java,TokenLexicalActions,2083-2108,[   switch(jjmatchedKind),    {,       case 2 :,         image.append(jjstrLiteralImages[2]);,         lengthOfMatch = jjstrLiteralImages[2].length();,                                       deque.push(DEFAULT);,          break;,       case 3 :,         image.append(jjstrLiteralImages[3]);,         lengthOfMatch = jjstrLiteralImages[3].length();,                                        deque.push(DEFAULT);,          break;,       case 8 :,         image.append(jjstrLiteralImages[8]);,         lengthOfMatch = jjstrLiteralImages[8].length();,                                  deque.push(curLexState);,          break;,       case 9 :,         image.append(jjstrLiteralImages[9]);,         lengthOfMatch = jjstrLiteralImages[9].length();,                       SwitchTo(deque.pop());,          break;,       default :,          break;,    }, }],,
STYLE,SF_SWITCH_NO_DEFAULT,org/apache/el/parser/ELParserTokenManager.java,getNextToken,2003-2035,[   switch(curLexState),    {,      case 0:,        jjmatchedKind = 0x7fffffff;,        jjmatchedPos = 0;,        curPos = jjMoveStringLiteralDfa0_0();,        break;,      case 1:,        try { input_stream.backup(0);,           while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L),              curChar = input_stream.BeginToken();,        },        catch (java.io.IOException e1) { continue EOFLoop; },        jjmatchedKind = 0x7fffffff;,        jjmatchedPos = 0;,        curPos = jjMoveStringLiteralDfa0_1();,        if (jjmatchedPos == 0 && jjmatchedKind > 61),        {,           jjmatchedKind = 61;,        },        break;,      case 2:,        try { input_stream.backup(0);,           while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L),              curChar = input_stream.BeginToken();,        },        catch (java.io.IOException e1) { continue EOFLoop; },        jjmatchedKind = 0x7fffffff;,        jjmatchedPos = 0;,        curPos = jjMoveStringLiteralDfa0_2();,        if (jjmatchedPos == 0 && jjmatchedKind > 61),        {,           jjmatchedKind = 61;],,
PERFORMANCE,URF_UNREAD_FIELD,org/apache/el/parser/ELParserTokenManager.java,,2001-2001,[   jjimageLen = 0;],,
PERFORMANCE,URF_UNREAD_FIELD,org/apache/el/parser/ELParserTokenManager.java,,2087-2087,[        lengthOfMatch = jjstrLiteralImages[2].length();],,
STYLE,URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD,org/apache/el/parser/ELParserTokenManager.java,,15-15,[  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }],,
MALICIOUS_CODE,MS_OOI_PKGPROTECT,org/apache/el/parser/ELParserTreeConstants.java,,51-51,[  public String[] jjtNodeName = {],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/el/parser/ParseException.java,<init>,36-36,[    expectedTokenSequences = expectedTokenSequencesVal;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/el/parser/ParseException.java,<init>,37-37,[    tokenImage = tokenImageVal;],,
PERFORMANCE,SBSC_USE_STRINGBUFFER_CONCATENATION,org/apache/el/parser/ParseException.java,initialise,117-117,[      retval += " \"";],,
I18N,DM_DEFAULT_ENCODING,org/apache/el/parser/SimpleCharStream.java,<init>,323-323,[    this(new java.io.InputStreamReader(dstream), startline, startcolumn, buffersize);],,
I18N,DM_DEFAULT_ENCODING,org/apache/el/parser/SimpleCharStream.java,<init>,316-316,[    this(encoding == null ? new java.io.InputStreamReader(dstream) : new java.io.InputStreamReader(dstream, encoding), startline, startcolumn, buffersize);],,
I18N,DM_DEFAULT_ENCODING,org/apache/el/parser/SimpleCharStream.java,ReInit,363-363,[    ReInit(new java.io.InputStreamReader(dstream), startline, startcolumn, buffersize);],,
I18N,DM_DEFAULT_ENCODING,org/apache/el/parser/SimpleCharStream.java,ReInit,356-356,[    ReInit(encoding == null ? new java.io.InputStreamReader(dstream) : new java.io.InputStreamReader(dstream, encoding), startline, startcolumn, buffersize);],,
BAD_PRACTICE,NM_CONFUSING,org/apache/el/parser/SimpleCharStream.java,GetImage,392-395,[    if (bufpos >= tokenBegin),       return new String(buffer, tokenBegin, bufpos - tokenBegin + 1);,     else,       return new String(buffer, tokenBegin, bufsize - tokenBegin) +],,getImage,109-109,[        return image;],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/SimpleCharStream.java,BeginToken,136-140,[    tokenBegin = -1;,     char c = readChar();,     tokenBegin = bufpos;, ,     return c;],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/SimpleCharStream.java,Done,419-422,[    buffer = null;,     bufline = null;,     bufcolumn = null;,   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/SimpleCharStream.java,ExpandBuff,42-87,[    char[] newbuffer = new char[bufsize + 2048];,     int newbufline[] = new int[bufsize + 2048];,     int newbufcolumn[] = new int[bufsize + 2048];, ,     try,     {,       if (wrapAround),       {,         System.arraycopy(buffer, tokenBegin, newbuffer, 0, bufsize - tokenBegin);,         System.arraycopy(buffer, 0, newbuffer, bufsize - tokenBegin, bufpos);,         buffer = newbuffer;, ,         System.arraycopy(bufline, tokenBegin, newbufline, 0, bufsize - tokenBegin);,         System.arraycopy(bufline, 0, newbufline, bufsize - tokenBegin, bufpos);,         bufline = newbufline;, ,         System.arraycopy(bufcolumn, tokenBegin, newbufcolumn, 0, bufsize - tokenBegin);,         System.arraycopy(bufcolumn, 0, newbufcolumn, bufsize - tokenBegin, bufpos);,         bufcolumn = newbufcolumn;, ,         maxNextCharInd = (bufpos += (bufsize - tokenBegin));,       },       else,       {,         System.arraycopy(buffer, tokenBegin, newbuffer, 0, bufsize - tokenBegin);,         buffer = newbuffer;, ,         System.arraycopy(bufline, tokenBegin, newbufline, 0, bufsize - tokenBegin);,         bufline = newbufline;, ,         System.arraycopy(bufcolumn, tokenBegin, newbufcolumn, 0, bufsize - tokenBegin);,         bufcolumn = newbufcolumn;, ,         maxNextCharInd = (bufpos -= tokenBegin);,       },     },     catch (Throwable t),     {,       throw new Error(t.getMessage());,     }, , ,     bufsize += 2048;,     available = bufsize;,     tokenBegin = 0;,   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/SimpleCharStream.java,FillBuff,91-129,[    if (maxNextCharInd == available),     {,       if (available == bufsize),       {,         if (tokenBegin > 2048),         {,           bufpos = maxNextCharInd = 0;,           available = tokenBegin;,         },         else if (tokenBegin < 0),           bufpos = maxNextCharInd = 0;,         else,           ExpandBuff(false);,       },       else if (available > tokenBegin),         available = bufsize;,       else if ((tokenBegin - available) < 2048),         ExpandBuff(true);,       else,         available = tokenBegin;,     }, ,     int i;,     try {,       if ((i = inputStream.read(buffer, maxNextCharInd, available - maxNextCharInd)) == -1),       {,         inputStream.close();,         throw new java.io.IOException();,       },       else,         maxNextCharInd += i;,       return;,     },     catch(java.io.IOException e) {,       --bufpos;,       backup(0);,       if (tokenBegin == -1),         tokenBegin = bufpos;,       throw e;],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/SimpleCharStream.java,GetImage,392-395,[    if (bufpos >= tokenBegin),       return new String(buffer, tokenBegin, bufpos - tokenBegin + 1);,     else,       return new String(buffer, tokenBegin, bufsize - tokenBegin) +],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/SimpleCharStream.java,GetSuffix,402-413,[    char[] ret = new char[len];, ,     if ((bufpos + 1) >= len),       System.arraycopy(buffer, bufpos - len + 1, ret, 0, len);,     else,     {,       System.arraycopy(buffer, bufsize - (len - bufpos - 1), ret, 0,,                                                         len - bufpos - 1);,       System.arraycopy(buffer, 0, ret, len - bufpos - 1, bufpos + 1);,     }, ,     return ret;],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/SimpleCharStream.java,ReInit,375-376,[    ReInit(dstream, 1, 1, 4096);,   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/SimpleCharStream.java,ReInit,387-388,[    ReInit(dstream, startline, startcolumn, 4096);,   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/SimpleCharStream.java,ReInit,363-364,[    ReInit(new java.io.InputStreamReader(dstream), startline, startcolumn, buffersize);,   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/SimpleCharStream.java,ReInit,369-370,[    ReInit(dstream, encoding, 1, 1, 4096);,   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/SimpleCharStream.java,ReInit,381-382,[    ReInit(dstream, encoding, startline, startcolumn, 4096);,   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/SimpleCharStream.java,ReInit,356-357,[    ReInit(encoding == null ? new java.io.InputStreamReader(dstream) : new java.io.InputStreamReader(dstream, encoding), startline, startcolumn, buffersize);,   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/SimpleCharStream.java,ReInit,310-311,[    ReInit(dstream, 1, 1, 4096);,   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/SimpleCharStream.java,ReInit,304-305,[    ReInit(dstream, startline, startcolumn, 4096);,   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/SimpleCharStream.java,ReInit,284-298,[    inputStream = dstream;,     line = startline;,     column = startcolumn - 1;, ,     if (buffer == null || buffersize != buffer.length),     {,       available = bufsize = buffersize;,       buffer = new char[buffersize];,       bufline = new int[buffersize];,       bufcolumn = new int[buffersize];,     },     prevCharIsLF = prevCharIsCR = false;,     tokenBegin = inBuf = maxNextCharInd = 0;,     bufpos = -1;,   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/SimpleCharStream.java,UpdateLineColumn,145-181,[    column++;, ,     if (prevCharIsLF),     {,       prevCharIsLF = false;,       line += (column = 1);,     },     else if (prevCharIsCR),     {,       prevCharIsCR = false;,       if (c == '\n'),       {,         prevCharIsLF = true;,       },       else,         line += (column = 1);,     }, ,     switch (c),     {,       case '\r' :,         prevCharIsCR = true;,         break;,       case '\n' :,         prevCharIsLF = true;,         break;,       case '\t' :,         column--;,         column += (tabSize - (column % tabSize));,         break;,       default :,         break;,     }, ,     bufline[bufpos] = line;,     bufcolumn[bufpos] = column;,   }],,
BAD_PRACTICE,NM_METHOD_NAMING_CONVENTION,org/apache/el/parser/TokenMgrError.java,LexicalError,109-113,[    return("Lexical error at line " +,           errorLine + ", column " +,           errorColumn + ".  Encountered: " +,           (EOFSeen ? "<EOF> " : ("\"" + addEscapes(String.valueOf(curChar)) + "\"") + " (" + (int)curChar + "), ") +,           "after : \"" + addEscapes(errorAfter) + "\"");],,
PERFORMANCE,DM_BOOLEAN_CTOR,org/apache/el/stream/Stream.java,noneMatch,394-394,[        return new Optional(new Boolean(!match.booleanValue()));],,
BAD_PRACTICE,SE_COMPARATOR_SHOULD_BE_SERIALIZABLE,org/apache/el/stream/Stream.java,,475-482,[        public LambdaExpressionComparator(LambdaExpression le) {,             this.le = le;,         }, ,         @Override,         public int compare(Object o1, Object o2) {,             return ELSupport.coerceToNumber(,                     le.invoke(o1, o2), Integer.class).intValue();],,
BAD_PRACTICE,IT_NO_SUCH_ELEMENT,org/apache/el/stream/StreamELResolverImpl.java,next,100-100,[            return Array.get(base, index++);],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/el/util/MessageFactory.java,get,40-40,[        if (value == null) {],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/el/util/ReflectionUtil.java,,43-43,[    protected static final Class<?>[] PRIMITIVES = new Class[] { boolean.class,],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/el/util/ReflectionUtil.java,,40-40,[    protected static final String[] PRIMITIVE_NAMES = new String[] { "boolean",],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/el/util/ReflectionUtil.java,toTypeArray,85-85,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/el/util/ReflectionUtil.java,toTypeNameArray,99-99,[            return null;],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/el/util/ReflectionUtil.java,getMethod,151-151,[            if (mParamTypes == null) {],,
BAD_PRACTICE,EQ_COMPARETO_USE_OBJECT_EQUALS,org/apache/el/util/ReflectionUtil.java,compareTo,481-495,[            int cmp = Integer.compare(this.getExact(), o.getExact());,             if (cmp == 0) {,                 cmp = Integer.compare(this.getAssignable(), o.getAssignable());,                 if (cmp == 0) {,                     cmp = Integer.compare(this.getCoercible(), o.getCoercible());,                     if (cmp == 0) {,                         // The nature of bridge methods is such that it actually,                         // doesn't matter which one we pick as long as we pick,                         // one. That said, pick the 'right' one (the non-bridge,                         // one) anyway.,                         cmp = Boolean.compare(o.isBridge(), this.isBridge());,                     },                 },             },             return cmp;],,
I18N,DM_DEFAULT_ENCODING,org/apache/jasper/JspC.java,initServletContext,1467-1467,[        PrintWriter log = new PrintWriter(System.out);],,
I18N,DM_DEFAULT_ENCODING,org/apache/jasper/JspC.java,openWebxmlReader,1651-1651,[            return webxmlEncoding != null ? new InputStreamReader(fis,],,
I18N,DM_DEFAULT_ENCODING,org/apache/jasper/JspC.java,openWebxmlWriter,1662-1662,[            return webxmlEncoding != null ? new OutputStreamWriter(fos,],,
PERFORMANCE,DM_STRING_TOSTRING,org/apache/jasper/JspC.java,execute,1352-1352,[                String nextjsp = iter.next().toString();],,
MALICIOUS_CODE,DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEGED,org/apache/jasper/JspC.java,initClassLoader,1571-1571,[        loader = new URLClassLoader(urlsA, this.getClass().getClassLoader());],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/jasper/JspC.java,setArgs,295-295,[        args = arg;],,
MALICIOUS_CODE,MS_MUTABLE_COLLECTION_PKGPROTECT,org/apache/jasper/JspC.java,,146-146,[    protected static final Set<String> insertBefore = new HashSet<>();],,
STYLE,NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE,org/apache/jasper/JspC.java,initClassLoader,1544-1544,[                for (int i = 0; i < libs.length; i++) {],,initClassLoader,1543-1543,[                String[] libs = lib.list();],,
BAD_PRACTICE,OS_OPEN_STREAM_EXCEPTION_PATH,org/apache/jasper/JspC.java,mergeIntoWebXml,1113-1113,[        FileInputStream fis = new FileInputStream(webXml2);],,
BAD_PRACTICE,OS_OPEN_STREAM_EXCEPTION_PATH,org/apache/jasper/JspC.java,mergeIntoWebXml,1114-1114,[        FileOutputStream fos = new FileOutputStream(webXml);],,
BAD_PRACTICE,OS_OPEN_STREAM_EXCEPTION_PATH,org/apache/jasper/JspC.java,mergeIntoWebXml,1056-1056,[        BufferedReader fragmentReader = new BufferedReader(],,
BAD_PRACTICE,OS_OPEN_STREAM_EXCEPTION_PATH,org/apache/jasper/JspC.java,mergeIntoWebXml,1058-1058,[        PrintWriter writer = new PrintWriter(openWebxmlWriter(webXml2));],,
MALICIOUS_CODE,DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEGED,org/apache/jasper/JspCompilationContext.java,getJspLoader,176-176,[            jspLoader = new JasperLoader],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/jasper/JspCompilationContext.java,<init>,117-117,[        if (baseURI == null) {],,
BAD_PRACTICE,RV_RETURN_VALUE_IGNORED_BAD_PRACTICE,org/apache/jasper/compiler/AntCompiler.java,generateClass,254-254,[            javaFile.delete();],,
I18N,DM_DEFAULT_ENCODING,org/apache/jasper/compiler/AntCompiler.java,<init>,318-318,[            super(wrapped);],,
I18N,DM_DEFAULT_ENCODING,org/apache/jasper/compiler/AntCompiler.java,setThread,354-354,[            streams.set(new PrintStream(baos));],,
I18N,DM_DEFAULT_ENCODING,org/apache/jasper/compiler/AntCompiler.java,unsetThread,368-368,[            return baos.toString();],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/jasper/compiler/Compiler.java,generateJava,105-105,[        t1 = t2 = t3 = t4 = 0;],,
STYLE,ICAST_INTEGER_MULTIPLY_CAST_TO_LONG,org/apache/jasper/compiler/Compiler.java,isOutDated,427-427,[                    + (ctxt.getOptions().getModificationTestInterval() * 1000) > System],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/jasper/compiler/Compiler.java,compile,365-365,[                if (targetFileName != null) {],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/jasper/compiler/Compiler.java,removeGeneratedClassFiles,572-572,[            if (classFileName != null) {],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/jasper/compiler/Compiler.java,removeGeneratedFiles,550-550,[            if (javaFileName != null) {],,
STYLE,REC_CATCH_EXCEPTION,org/apache/jasper/compiler/Compiler.java,generateJava,264-264,[        } catch (Exception e) {],,
STYLE,REC_CATCH_EXCEPTION,org/apache/jasper/compiler/Compiler.java,generateJava,264-264,[        } catch (Exception e) {],,
STYLE,REC_CATCH_EXCEPTION,org/apache/jasper/compiler/Compiler.java,isOutDated,512-512,[            } catch (Exception e) {],,
BAD_PRACTICE,RV_RETURN_VALUE_IGNORED_BAD_PRACTICE,org/apache/jasper/compiler/Compiler.java,compile,359-359,[            javaFile.setLastModified(jspLastModified.longValue());],,compile,368-368,[                        targetFile.setLastModified(jspLastModified.longValue());],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/jasper/compiler/ELFunctionMapper.java,map,65-65,[            unused = new Node.Declaration(],,map,64-64,[            Node unused = new Node.Declaration(map.ss.toString(), null, root);],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/jasper/compiler/ELNode.java,getParameters,183-183,[            return parameters;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/jasper/compiler/ELNode.java,setParameters,179-179,[            this.parameters = parameters;],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/jasper/compiler/ELParser.java,nextToken,370-370,[                                ch = expression.charAt(index))) {],,
STYLE,IM_AVERAGE_COMPUTATION_COULD_OVERFLOW,org/apache/jasper/compiler/ELParser.java,isELReserved,183-183,[            int k = (i + j) / 2;],,
STYLE,BC_UNCONFIRMED_CAST_OF_RETURN_VALUE,org/apache/jasper/compiler/Generator.java,generate,3511-3511,[            JasperTagInfo tagInfo = (JasperTagInfo) gen.ctxt.getTagInfo();],,
STYLE,SF_SWITCH_NO_DEFAULT,org/apache/jasper/compiler/Generator.java,generateSetJspContext,3812-3834,[            switch (tagVars[i].getScope()) {,             case VariableInfo.NESTED:,                 if (!nestedSeen) {,                     out.printil("_jspx_nested = new java.util.ArrayList();");,                     nestedSeen = true;,                 },                 out.printin("_jspx_nested.add(");,                 break;, ,             case VariableInfo.AT_BEGIN:,                 if (!atBeginSeen) {,                     out.printil("_jspx_at_begin = new java.util.ArrayList();");,                     atBeginSeen = true;,                 },                 out.printin("_jspx_at_begin.add(");,                 break;, ,             case VariableInfo.AT_END:,                 if (!atEndSeen) {,                     out.printil("_jspx_at_end = new java.util.ArrayList();");,                     atEndSeen = true;,                 },                 out.printin("_jspx_at_end.add(");],,
BAD_PRACTICE,RV_RETURN_VALUE_IGNORED_BAD_PRACTICE,org/apache/jasper/compiler/JDTCompiler.java,generateClass,444-444,[            javaFile.delete();],,
BAD_PRACTICE,OS_OPEN_STREAM_EXCEPTION_PATH,org/apache/jasper/compiler/JDTCompiler.java,acceptResult,415-415,[                                BufferedOutputStream bos =],,
I18N,DM_DEFAULT_ENCODING,org/apache/jasper/compiler/JavacErrorDetail.java,readFile,203-203,[        BufferedReader reader = new BufferedReader(new InputStreamReader(s));],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/jasper/compiler/JspConfig.java,,337-337,[        String isDeferedSyntaxAllowedAsLiteral =],,,167-167,[                    defaultJspProperty = new JspProperty(defaultIsXml,],,,68-68,[            defaultDeferedSyntaxAllowedAsLiteral = "true";],,,73-73,[                defaultDeferedSyntaxAllowedAsLiteral = "true";],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/jasper/compiler/JspConfig.java,,334-334,[        String isELIgnored = defaultIsELIgnored;],,,167-167,[                    defaultJspProperty = new JspProperty(defaultIsXml,],,,67-67,[            defaultIsELIgnored = "true";],,,76-76,[                defaultIsELIgnored = "true";],,
STYLE,NP_NULL_ON_SOME_PATH_MIGHT_BE_INFEASIBLE,org/apache/jasper/compiler/JspConfig.java,selectProperty,212-212,[        if (prevPath.length() >= currPath.length()) {],,selectProperty,206-206,[        if (prevPath == null && currPath != null) {],,selectProperty,209-209,[        if (prevPath != null && currPath == null) {],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/jasper/compiler/JspDocumentParser.java,processChars,629-629,[                        ttext.toString(), startMark, current);],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/jasper/compiler/JspDocumentParser.java,processChars,558-558,[                                ttext.toString(), startMark, current);],,processChars,593-593,[                                    (char) elType, ttext.toString(),],,
BAD_PRACTICE,NP_BOOLEAN_RETURN_NULL,org/apache/jasper/compiler/JspReader.java,indexOf,217-217,[            return null;],,
STYLE,ICAST_INTEGER_MULTIPLY_CAST_TO_LONG,org/apache/jasper/compiler/JspRuntimeContext.java,<init>,141-141,[        jspIdleTimeout = options.getJspIdleTimeout() * 1000;],,
STYLE,REC_CATCH_EXCEPTION,org/apache/jasper/compiler/JspRuntimeContext.java,initSecurity,535-535,[            } catch(Exception e) {],,
STYLE,IM_AVERAGE_COMPUTATION_COULD_OVERFLOW,org/apache/jasper/compiler/JspUtil.java,isJavaKeyword,873-873,[            int k = (i + j) / 2;],,
STYLE,SF_SWITCH_NO_DEFAULT,org/apache/jasper/compiler/JspUtil.java,toJavaSourceType,943-952,[                switch (type.charAt(i)) {,                 case 'Z': t = "boolean"; break;,                 case 'B': t = "byte"; break;,                 case 'C': t = "char"; break;,                 case 'D': t = "double"; break;,                 case 'F': t = "float"; break;,                 case 'I': t = "int"; break;,                 case 'J': t = "long"; break;,                 case 'S': t = "short"; break;,                 case 'L': t = type.substring(i+1, type.indexOf(';')); break;],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/jasper/compiler/Node.java,getJspAttributes,1543-1543,[            return jspAttrs;],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/jasper/compiler/Node.java,getVariableInfos,1623-1623,[            return varInfos;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/jasper/compiler/Node.java,setJspAttributes,1539-1539,[            this.jspAttrs = jspAttrs;],,
STYLE,SF_SWITCH_NO_DEFAULT,org/apache/jasper/compiler/Node.java,getScriptingVars,1663-1671,[            switch (scope) {,             case VariableInfo.AT_BEGIN:,                 vec = this.atBeginScriptingVars;,                 break;,             case VariableInfo.AT_END:,                 vec = this.atEndScriptingVars;,                 break;,             case VariableInfo.NESTED:,                 vec = this.nestedScriptingVars;],,
STYLE,SF_SWITCH_NO_DEFAULT,org/apache/jasper/compiler/Node.java,setScriptingVars,1643-1651,[            switch (scope) {,             case VariableInfo.AT_BEGIN:,                 this.atBeginScriptingVars = vec;,                 break;,             case VariableInfo.AT_END:,                 this.atEndScriptingVars = vec;,                 break;,             case VariableInfo.NESTED:,                 this.nestedScriptingVars = vec;],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/jasper/compiler/Node.java,getJspAttributes,1275-1275,[            return jspAttrs;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/jasper/compiler/Node.java,setJspAttributes,1271-1271,[            this.jspAttrs = jspAttrs;],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/jasper/compiler/Node.java,addSmap,2067-2067,[            extraSmap.add(new Integer(srcLine));],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/jasper/compiler/Node.java,getJspAttributes,1241-1241,[            return jspAttrs;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/jasper/compiler/Node.java,setJspAttributes,1237-1237,[            this.jspAttrs = jspAttrs;],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/jasper/compiler/PageInfo.java,setBufferValue,458-458,[                Integer k = new Integer(value.substring(0, value.length()-2));],,
PERFORMANCE,SS_SHOULD_BE_STATIC,org/apache/jasper/compiler/PageInfo.java,,52-52,[    private final String defaultLanguage = "java";],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/jasper/compiler/Parser.java,parseAttributeDirective,591-591,[        Node unused = new Node.AttributeDirective(attrs, start, parent);],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/jasper/compiler/Parser.java,parseComment,616-616,[                new Node.Comment(reader.getText(start, stop), start, parent);],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/jasper/compiler/Parser.java,parseDeclaration,631-631,[                parseScriptText(reader.getText(start, stop)), start, parent);],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/jasper/compiler/Parser.java,parseELExpression,751-751,[        Node unused = new Node.ELExpression(type, reader.getText(start, last),],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/jasper/compiler/Parser.java,parseExpression,692-692,[                parseScriptText(reader.getText(start, stop)), start, parent);],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/jasper/compiler/Parser.java,parseScriptlet,767-767,[                parseScriptText(reader.getText(start, stop)), start, parent);],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/jasper/compiler/Parser.java,parseTagDependentBody,1603-1603,[        Node unused = new Node.TemplateText(reader.getText(bodyStart, bodyEnd),],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/jasper/compiler/Parser.java,parseTaglibDirective,436-436,[        Node unused = new Node.TaglibDirective(attrs, start, parent);],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/jasper/compiler/Parser.java,parseTemplateText,1329-1329,[        Node unused = new Node.TemplateText(ttext.toString(), start, parent);],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/jasper/compiler/Parser.java,parseVariableDirective,601-601,[        Node unused = new Node.VariableDirective(attrs, start, parent);],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/jasper/compiler/Parser.java,parseXMLTemplateText,1396-1396,[                    new Node.TemplateText(ttext.toString(), start, parent);],,parseXMLTemplateText,1382-1382,[                            ttext.toString(), start, parent);],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/jasper/compiler/Parser.java,parseXMLDeclaration,658-658,[                Node unused = new Node.Declaration(text, start, parent);],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/jasper/compiler/Parser.java,parseXMLExpression,717-717,[                Node unused = new Node.Expression(text, start, parent);],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/jasper/compiler/Parser.java,parseXMLScriptlet,792-792,[                Node unused = new Node.Scriptlet(text, start, parent);],,
BAD_PRACTICE,ES_COMPARING_PARAMETER_STRING_WITH_EQ,org/apache/jasper/compiler/Parser.java,parseBody,1670-1670,[                } else if (bodyType == JAVAX_BODY_CONTENT_PARAM) {],,
BAD_PRACTICE,ES_COMPARING_PARAMETER_STRING_WITH_EQ,org/apache/jasper/compiler/Parser.java,parseBody,1675-1675,[                } else if (bodyType == JAVAX_BODY_CONTENT_TEMPLATE_TEXT) {],,
BAD_PRACTICE,ES_COMPARING_PARAMETER_STRING_WITH_EQ,org/apache/jasper/compiler/Parser.java,parseBody,1647-1647,[                || bodyType.equalsIgnoreCase(TagInfo.BODY_CONTENT_SCRIPTLESS)],,
BAD_PRACTICE,ES_COMPARING_PARAMETER_STRING_WITH_EQ,org/apache/jasper/compiler/Parser.java,parseBody,1638-1638,[        } else if (bodyType == JAVAX_BODY_CONTENT_PLUGIN) {],,
BAD_PRACTICE,ES_COMPARING_PARAMETER_STRING_WITH_EQ,org/apache/jasper/compiler/Parser.java,parseBody,1647-1647,[                || bodyType.equalsIgnoreCase(TagInfo.BODY_CONTENT_SCRIPTLESS)],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/jasper/compiler/ScriptingVariabler.java,<clinit>,38-38,[    private static final Integer MAX_SCOPE = new Integer(Integer.MAX_VALUE);],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/jasper/compiler/ScriptingVariabler.java,visit,57-57,[            n.setNumCount(new Integer(count++));],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/jasper/compiler/SmapGenerator.java,,104-104,[        doEmbedded = status;],,,122-122,[        if (doEmbedded) {],,
EXPERIMENTAL,OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE,org/apache/jasper/compiler/SmapUtil.java,install,226-226,[            FileOutputStream outStream = new FileOutputStream(outClassFile);],,install,227-227,[            outStream.write(gen, 0, genPos);],,
BAD_PRACTICE,OS_OPEN_STREAM_EXCEPTION_PATH,org/apache/jasper/compiler/SmapUtil.java,install,226-226,[            FileOutputStream outStream = new FileOutputStream(outClassFile);],,
STYLE,REC_CATCH_EXCEPTION,org/apache/jasper/compiler/TagFileProcessor.java,loadTagFile,599-599,[            } catch (Exception e) {],,
STYLE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,org/apache/jasper/compiler/TagFileProcessor.java,loadTagFile,576-576,[                    tempVector.add(tempWrapper.getJspEngineContext()],,
STYLE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,org/apache/jasper/compiler/TagFileProcessor.java,removeProtoTypeFiles,690-690,[        Iterator<Compiler> iter = tempVector.iterator();],,
BAD_PRACTICE,ES_COMPARING_PARAMETER_STRING_WITH_EQ,org/apache/jasper/compiler/TagFileProcessor.java,checkUniqueName,426-426,[            HashMap<String, NameEntry> table = (type == VAR_NAME_FROM) ? nameFromTable : nameTable;],,
STYLE,UCF_USELESS_CONTROL_FLOW,org/apache/jasper/compiler/TagFileProcessor.java,getTagInfo,353-353,[            if (name == null) {],,
PERFORMANCE,WMI_WRONG_MAP_ITERATOR,org/apache/jasper/compiler/TagFileProcessor.java,postCheck,449-449,[                NameEntry nameFromEntry = nameFromTable.get(nameFrom);],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/jasper/compiler/TagLibraryInfoImpl.java,validate,371-371,[            return null;],,
STYLE,REC_CATCH_EXCEPTION,org/apache/jasper/compiler/TagLibraryInfoImpl.java,createValidator,341-341,[        } catch (Exception e) {],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/jasper/compiler/TagPluginManager.java,init,99-99,[            if (urls != null) {],,
STYLE,REC_CATCH_EXCEPTION,org/apache/jasper/compiler/TagPluginManager.java,init,130-130,[            } catch (Exception e) {],,
STYLE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,org/apache/jasper/compiler/TextOptimizer.java,collectText,108-108,[                firstTextNode.setText(textBuffer.toString());],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/jasper/compiler/Validator.java,,1692-1704,[            class ValidateFunctionMapper extends FunctionMapper {, ,                 private HashMap<String, Method> fnmap = new HashMap<>();, ,                 @Override,                 public void mapFunction(String prefix, String localName,,                         Method method) {,                     fnmap.put(prefix + ":" + localName, method);,                 }, ,                 @Override,                 public Method resolveFunction(String prefix, String localName) {,                     return this.fnmap.get(prefix + ":" + localName);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/jasper/el/ELResolverImpl.java,getType,72-72,[            context.setPropertyResolved(base, property);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/jasper/el/ELResolverImpl.java,getValue,48-48,[            context.setPropertyResolved(base, property);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/jasper/el/ELResolverImpl.java,isReadOnly,115-115,[            context.setPropertyResolved(base, property);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/jasper/el/ELResolverImpl.java,setValue,98-98,[            context.setPropertyResolved(base, property);],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/jasper/el/JasperELResolver.java,,96-96,[                result = resolvers[i].getValue(context, base, property);],,,110-110,[            result = resolvers[i].getValue(context, base, property);],,,136-136,[            result = resolvers[i].invoke(],,,147-147,[            result = resolvers[i].invoke(],,,72-72,[        if (resolvers.length > size) {],,,73-73,[            resolvers[size] = elResolver;],,,76-76,[            System.arraycopy(resolvers, 0, nr, 0, size);],,,79-79,[            resolvers = nr;],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/jasper/el/JasperELResolver.java,,109-109,[        for (int i = start; i < size; i++) {],,,146-146,[        for (int i = index; i < size; i++) {],,,72-72,[        if (resolvers.length > size) {],,,75-75,[            ELResolver[] nr = new ELResolver[size + 1];],,,73-73,[            resolvers[size] = elResolver;],,,76-76,[            System.arraycopy(resolvers, 0, nr, 0, size);],,,81-81,[        size ++;],,,77-77,[            nr[size] = elResolver;],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/jasper/el/JasperELResolver.java,getValue,96-96,[                result = resolvers[i].getValue(context, base, property);],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/jasper/runtime/JspApplicationContextImpl.java,,92-95,[                    new PrivilegedAction<ELContextImpl>() {,                         @Override,                         public ELContextImpl run() {,                             return new ELContextImpl(r);],,
STYLE,SF_SWITCH_NO_DEFAULT,org/apache/jasper/runtime/JspContextWrapper.java,copyTagToPageScope,407-420,[        switch (scope) {,         case VariableInfo.NESTED:,             if (nestedVars != null) {,                 iter = nestedVars.iterator();,             },             break;,         case VariableInfo.AT_BEGIN:,             if (atBeginVars != null) {,                 iter = atBeginVars.iterator();,             },             break;,         case VariableInfo.AT_END:,             if (atEndVars != null) {,                 iter = atEndVars.iterator();],,
PERFORMANCE,DM_BOXED_PRIMITIVE_FOR_PARSING,org/apache/jasper/runtime/JspFactoryImpl.java,<clinit>,45-45,[        Integer.valueOf(System.getProperty("org.apache.jasper.runtime.JspFactoryImpl.POOL_SIZE", "8")).intValue();],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/jasper/runtime/JspFactoryImpl.java,,81-84,[        return new JspEngineInfo() {,             @Override,             public String getSpecificationVersion() {,                 return SPEC_VERSION;],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/jasper/runtime/JspFactoryImpl.java,,210-213,[                    new PrivilegedAction<JspApplicationContext>() {,                 @Override,                 public JspApplicationContext run() {,                     return JspApplicationContextImpl.getInstance(context);],,
STYLE,URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD,org/apache/jasper/runtime/JspFragmentHelper.java,,46-46,[        this.discriminator = discriminator;],,
STYLE,BC_UNCONFIRMED_CAST_OF_RETURN_VALUE,org/apache/jasper/runtime/JspRuntimeLibrary.java,introspecthelper,305-305,[                throw (JasperException)e;],,
I18N,DM_DEFAULT_ENCODING,org/apache/jasper/runtime/JspRuntimeLibrary.java,URLEncode,965-965,[            writer = new OutputStreamWriter(buf);],,
PERFORMANCE,DM_FP_NUMBER_CTOR,org/apache/jasper/runtime/JspRuntimeLibrary.java,createTypedArray,472-472,[                    tmpval[i] = new Double (values[i]);],,
PERFORMANCE,DM_FP_NUMBER_CTOR,org/apache/jasper/runtime/JspRuntimeLibrary.java,createTypedArray,477-477,[                    tmpval[i] = new Float (values[i]);],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/jasper/runtime/JspRuntimeLibrary.java,createTypedArray,452-452,[                    tmpval[i] = new Byte (values[i]);],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/jasper/runtime/JspRuntimeLibrary.java,createTypedArray,447-447,[                    tmpval[i] =  new Integer (values[i]);],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/jasper/runtime/JspRuntimeLibrary.java,createTypedArray,467-467,[                    tmpval[i] = new Long (values[i]);],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/jasper/runtime/JspRuntimeLibrary.java,createTypedArray,462-462,[                    tmpval[i] = new Short (values[i]);],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/jasper/runtime/JspRuntimeLibrary.java,getReadMethod,783-783,[            if ( info != null ) {],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/jasper/runtime/JspRuntimeLibrary.java,getWriteMethod,739-739,[            if ( info != null ) {],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/jasper/runtime/JspRuntimeLibrary.java,internalIntrospecthelper,324-324,[            if ( info != null ) {],,
STYLE,REC_CATCH_EXCEPTION,org/apache/jasper/runtime/JspRuntimeLibrary.java,createTypedArray,533-533,[        } catch (Exception ex) {],,
STYLE,REC_CATCH_EXCEPTION,org/apache/jasper/runtime/JspRuntimeLibrary.java,getReadMethod,799-799,[        } catch (Exception ex) {],,
STYLE,REC_CATCH_EXCEPTION,org/apache/jasper/runtime/JspRuntimeLibrary.java,getWriteMethod,755-755,[        } catch (Exception ex) {],,
STYLE,REC_CATCH_EXCEPTION,org/apache/jasper/runtime/JspRuntimeLibrary.java,handleSetPropertyExpression,599-599,[        } catch (Exception ex) {],,
STYLE,REC_CATCH_EXCEPTION,org/apache/jasper/runtime/JspRuntimeLibrary.java,internalIntrospecthelper,359-359,[        } catch (Exception ex) {],,
PERFORMANCE,SBSC_USE_STRINGBUFFER_CONCATENATION,org/apache/jasper/runtime/JspRuntimeLibrary.java,escapeQueryString,559-559,[        escString += nextChar;],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/jasper/runtime/JspWriterImpl.java,,121-124,[            return AccessController.doPrivileged(new PrivilegedAction<String>(){,                 @Override,                 public String run(){,                     return Localizer.getMessage(message);],,
STYLE,BC_UNCONFIRMED_CAST_OF_RETURN_VALUE,org/apache/jasper/runtime/PageContextImpl.java,forward,704-704,[                    throw (ServletException) ex;],,
STYLE,BC_UNCONFIRMED_CAST_OF_RETURN_VALUE,org/apache/jasper/runtime/PageContextImpl.java,handlePageException,830-830,[                    throw (ServletException) ex;],,
STYLE,BC_UNCONFIRMED_CAST_OF_RETURN_VALUE,org/apache/jasper/runtime/PageContextImpl.java,include,665-665,[                    throw (ServletException) ex;],,
STYLE,DB_DUPLICATE_BRANCHES,org/apache/jasper/runtime/PageContextImpl.java,release,173-173,[                ((JspWriterImpl) out).flushBuffer();],,release,181-181,[                ((JspWriterImpl) out).flushBuffer();],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/jasper/runtime/PageContextImpl.java,doHandlePageException,855-855,[            request.setAttribute(RequestDispatcher.ERROR_STATUS_CODE,],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/jasper/runtime/ProtectedFunctionMapper.java,,104-107,[                        new PrivilegedExceptionAction<Method>() {,                             @Override,                             public Method run() throws Exception {,                                 return c.getDeclaredMethod(methodName, args);],,
STYLE,BC_UNCONFIRMED_CAST,org/apache/jasper/runtime/ServletResponseWrapperInclude.java,<init>,50-50,[        super((HttpServletResponse)response);],,
STYLE,NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE,org/apache/jasper/servlet/JspCServletContext.java,getResourcePaths,394-394,[        for (int i = 0; i < theFiles.length; i++) {],,getResourcePaths,393-393,[        String theFiles[] = theBaseDir.list();],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/jasper/servlet/JspServletWrapper.java,,352-352,[            if (options.getDevelopment() || firstTime ) {],,,237-237,[            if (options.getDevelopment() || firstTime ) {],,,354-354,[                    firstTime = false;],,,182-182,[                    if (!firstTime) {],,,239-239,[                    firstTime = false;],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/jasper/servlet/JspServletWrapper.java,,509-509,[        return lastUsageTime;],,,415-415,[                        if (lastUsageTime < ctxt.getRuntimeContext().getLastJspQueueUpdate()) {],,,410-410,[                        } else if (lastUsageTime < ctxt.getRuntimeContext().getLastJspQueueUpdate()) {],,,416-416,[                            lastUsageTime = System.currentTimeMillis();],,,412-412,[                            lastUsageTime = System.currentTimeMillis();],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/jasper/servlet/JspServletWrapper.java,,320-320,[        return unloadHandle;],,,408-408,[                        if (unloadHandle == null) {],,,409-409,[                            unloadHandle = ctxt.getRuntimeContext().push(this);],,,411-411,[                            ctxt.getRuntimeContext().makeYoungest(unloadHandle);],,
STYLE,REC_CATCH_EXCEPTION,org/apache/jasper/servlet/JspServletWrapper.java,handleJspException,580-580,[        } catch (Exception je) {],,
STYLE,NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE,org/apache/jasper/servlet/TldScanner.java,visitFile,328-328,[                    if (!file.getFileName().toString()],,
BAD_PRACTICE,ES_COMPARING_STRINGS_WITH_EQ,org/apache/jasper/xmlparser/XMLEncodingDetector.java,scanXMLDeclOrTextDecl,1310-1310,[                    if (name == fEncodingSymbol) {],,scanXMLDeclOrTextDecl,1287-1287,[                    } else if (name == fEncodingSymbol) {],,
BAD_PRACTICE,ES_COMPARING_STRINGS_WITH_EQ,org/apache/jasper/xmlparser/XMLEncodingDetector.java,scanXMLDeclOrTextDecl,1336-1336,[                    if (name == fStandaloneSymbol) {],,scanXMLDeclOrTextDecl,1321-1321,[                    } else if (!scanningTextDecl && name == fStandaloneSymbol) {],,
CORRECTNESS,RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE,org/apache/jasper/xmlparser/XMLEncodingDetector.java,load,961-961,[        int count = fCurrentEntity.reader.read(fCurrentEntity.ch, offset,],,load,980-980,[                if (fCurrentEntity == null) {],,
STYLE,UC_USELESS_CONDITION,org/apache/jasper/xmlparser/XMLEncodingDetector.java,createInitialReader,160-160,[                if (count > 2 && encoding.equals("UTF-8")) {],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC,org/apache/jasper/xmlparser/XMLEncodingDetector.java,,1025-1157,[        public RewindableInputStream(InputStream is) {,             fData = new byte[DEFAULT_XMLDECL_BUFFER_SIZE];,             fInputStream = is;,             fEndOffset = -1;,             fOffset = 0;,             fLength = 0;,             fMark = 0;,         }, ,         @Override,         public int read() throws IOException {,             int b = 0;,             if (fOffset < fLength) {,                 return fData[fOffset++] & 0xff;,             },             if (fOffset == fEndOffset) {,                 return -1;,             },             if (fOffset == fData.length) {,                 byte[] newData = new byte[fOffset << 1];,                 System.arraycopy(fData, 0, newData, 0, fOffset);,                 fData = newData;,             },             b = fInputStream.read();,             if (b == -1) {,                 fEndOffset = fOffset;,                 return -1;,             },             fData[fLength++] = (byte)b;,             fOffset++;,             return b & 0xff;,         }, ,         @Override,         public int read(byte[] b, int off, int len) throws IOException {,             int bytesLeft = fLength - fOffset;,             if (bytesLeft == 0) {,                 if (fOffset == fEndOffset) {,                     return -1;,                 },                 // better get some more for the voracious reader...,                 int returnedVal = read();,                 if (returnedVal == -1) {,                     fEndOffset = fOffset;,                     return -1;,                 },                 b[off] = (byte)returnedVal;,                 return 1;,             },             if (len < bytesLeft) {,                 if (len <= 0) {,                     return 0;,                 },             },             else {,                 len = bytesLeft;,             },             if (b != null) {,                 System.arraycopy(fData, fOffset, b, off, len);,             },             fOffset += len;,             return len;,         }, ,         @Override,         public long skip(long n),             throws IOException,         {,             int bytesLeft;,             if (n <= 0) {,                 return 0;,             },             bytesLeft = fLength - fOffset;,             if (bytesLeft == 0) {,                 if (fOffset == fEndOffset) {,                     return 0;,                 },                 return fInputStream.skip(n);,             },             if (n <= bytesLeft) {,                 fOffset += n;,                 return n;,             },             fOffset += bytesLeft;,             if (fOffset == fEndOffset) {,                 return bytesLeft;,             },             n -= bytesLeft;,             /*,              * In a manner of speaking, when this class isn't permitting more,              * than one byte at a time to be read, it is "blocking".  The,              * available() method should indicate how much can be read without,              * blocking, so while we're in this mode, it should only indicate,              * that bytes in its buffer are available; otherwise, the result of,              * available() on the underlying InputStream is appropriate.,              */,             return fInputStream.skip(n) + bytesLeft;,         }, ,         @Override,         public int available() throws IOException {,             int bytesLeft = fLength - fOffset;,             if (bytesLeft == 0) {,                 if (fOffset == fEndOffset) {,                     return -1;,                 },                 return 0;,             },             return bytesLeft;,         }, ,         @Override,         public synchronized void mark(int howMuch) {,             fMark = fOffset;,         }, ,         @Override,         public synchronized void reset() {,             fOffset = fMark;,         }, ,         @Override,         public boolean markSupported() {,             return true;,         }, ,         @Override,         public void close() throws IOException {,             if (fInputStream != null) {,                 fInputStream.close();,                 fInputStream = null;,             },         }],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/jasper/xmlparser/XMLString.java,setValues,86-86,[        this.ch = ch;],,
STYLE,SF_SWITCH_NO_DEFAULT,org/apache/juli/AsyncFileHandler.java,publish,101-117,[                switch (OVERFLOW_DROP_TYPE) {,                     case OVERFLOW_DROP_LAST: {,                         //remove the last added element,                         queue.pollLast();,                         break;,                     },                     case OVERFLOW_DROP_FIRST: {,                         //remove the first element in the queue,                         queue.pollFirst();,                         break;,                     },                     case OVERFLOW_DROP_FLUSH: {,                         added = queue.offer(entry,1000,TimeUnit.MILLISECONDS);,                         break;,                     },                     case OVERFLOW_DROP_CURRENT: {,                         added = true;],,
PERFORMANCE,SS_SHOULD_BE_STATIC,org/apache/juli/AsyncFileHandler.java,,134-134,[        protected final boolean run = true;],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/juli/ClassLoaderLogManager.java,resetLoggers,373-373,[                } catch (Exception e) {],,
EXPERIMENTAL,OBL_UNSATISFIED_OBLIGATION,org/apache/juli/ClassLoaderLogManager.java,readConfiguration,479-479,[                    is = new FileInputStream(defaultFile);],,readConfiguration,482-482,[                }],,readConfiguration,486-486,[        Logger localRootLogger = new RootLogger();],,readConfiguration,487-487,[        if (is == null) {],,readConfiguration,499-499,[        ClassLoaderLogInfo info =],,readConfiguration,501-501,[        classLoaderLoggers.put(classLoader, info);],,readConfiguration,503-503,[        if (is != null) {],,readConfiguration,504-504,[            readConfiguration(is, classLoader);],,readConfiguration,506-506,[        addLogger(localRootLogger);],,readConfiguration,508-508,[    }],,
STYLE,REC_CATCH_EXCEPTION,org/apache/juli/ClassLoaderLogManager.java,readConfiguration,571-571,[                } catch (Exception e) {],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/juli/ClassLoaderLogManager.java,,147-151,[                AccessController.doPrivileged(new PrivilegedAction<Void>() {,                     @Override,                     public Void run() {,                         logger.setLevel(Level.parse(levelString.trim()));,                         return null;],,
I18N,DM_DEFAULT_ENCODING,org/apache/juli/FileHandler.java,openWriter,386-386,[            writer = new PrintWriter(],,
STYLE,REC_CATCH_EXCEPTION,org/apache/juli/FileHandler.java,configure,316-316,[            } catch (Exception e) {],,configure,326-326,[            } catch (Exception e) {],,
STYLE,REC_CATCH_EXCEPTION,org/apache/juli/FileHandler.java,openWriter,390-390,[        } catch (Exception e) {],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/juli/logging/DirectJDKLog.java,log,174-174,[            if (locations != null && locations.length >2) {],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/naming/NamingContext.java,getEnvironment,744-744,[        return env;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/naming/SelectorContext.java,<init>,70-70,[        this.env = env;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/naming/SelectorContext.java,<init>,80-80,[        this.env = env;],,
PERFORMANCE,DM_FP_NUMBER_CTOR,org/apache/naming/factory/BeanFactory.java,getObjectInstance,192-192,[                                valueArray[0] = new Double(value);],,
PERFORMANCE,DM_FP_NUMBER_CTOR,org/apache/naming/factory/BeanFactory.java,getObjectInstance,189-189,[                                valueArray[0] = new Float(value);],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/naming/factory/BeanFactory.java,getObjectInstance,177-177,[                                valueArray[0] = new Byte(value);],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/naming/factory/BeanFactory.java,getObjectInstance,183-183,[                                valueArray[0] = new Integer(value);],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/naming/factory/BeanFactory.java,getObjectInstance,186-186,[                                valueArray[0] = new Long(value);],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/naming/factory/BeanFactory.java,getObjectInstance,180-180,[                                valueArray[0] = new Short(value);],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/naming/factory/MailSessionFactory.java,,104-150,[        return AccessController.doPrivileged(new PrivilegedAction<Session>() {,                 @Override,                 public Session run() {, ,                     // Create the JavaMail properties we will use,                     Properties props = new Properties();,                     props.put("mail.transport.protocol", "smtp");,                     props.put("mail.smtp.host", "localhost");, ,                     String password = null;, ,                     Enumeration<RefAddr> attrs = ref.getAll();,                     while (attrs.hasMoreElements()) {,                         RefAddr attr = attrs.nextElement();,                         if ("factory".equals(attr.getType())) {,                             continue;,                         }, ,                         if ("password".equals(attr.getType())) {,                             password = (String) attr.getContent();,                             continue;,                         }, ,                         props.put(attr.getType(), attr.getContent());,                     }, ,                     Authenticator auth = null;,                     if (password != null) {,                         String user = props.getProperty("mail.smtp.user");,                         if(user == null) {,                             user = props.getProperty("mail.user");,                         }, ,                         if(user != null) {,                             final PasswordAuthentication pa = new PasswordAuthentication(user, password);,                             auth = new Authenticator() {,                                     @Override,                                     protected PasswordAuthentication getPasswordAuthentication() {,                                         return pa;,                                     },                                 };,                         },                     }, ,                     // Create and return the new Session object,                     Session session = Session.getInstance(props, auth);,                     return (session);],,
PERFORMANCE,SS_SHOULD_BE_STATIC,org/apache/naming/factory/SendMailFactory.java,,79-79,[    protected final String DataSourceClassName =],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/naming/factory/SendMailFactory.java,run,123-123,[                    } catch (Exception e) {/*Ignore*/}],,
STYLE,REC_CATCH_EXCEPTION,org/apache/naming/factory/SendMailFactory.java,run,123-123,[                    } catch (Exception e) {/*Ignore*/}],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/naming/factory/SendMailFactory.java,,93-125,[            {,                 @Override,                 public MimePartDataSource run() {,                     // set up the smtp session that will send the message,                     Properties props = new Properties();,                     // enumeration of all refaddr,                     Enumeration<RefAddr> list = ref.getAll();,                     // current refaddr to be set,                     RefAddr refaddr;,                     // set transport to smtp,                     props.put("mail.transport.protocol", "smtp");, ,                     while (list.hasMoreElements()) {,                         refaddr = list.nextElement();, ,                         // set property,                         props.put(refaddr.getType(), refaddr.getContent());,                     },                     MimeMessage message = new MimeMessage(,                         Session.getInstance(props));,                     try {,                         RefAddr fromAddr = ref.get("mail.from");,                         String from = null;,                         if (fromAddr != null) {,                             from = (String)ref.get("mail.from").getContent();,                         },                         if (from != null) {,                             message.setFrom(new InternetAddress(from));,                         },                         message.setSubject("");,                     } catch (Exception e) {/*Ignore*/},                     MimePartDataSource mds = new MimePartDataSource(message);,                     return mds;],,
BAD_PRACTICE,NM_CLASS_NAMING_CONVENTION,org/apache/naming/java/javaURLContextFactory.java,,50-117,[public class javaURLContextFactory,     implements ObjectFactory, InitialContextFactory {, , ,     // ----------------------------------------------------------- Constructors, , ,     // -------------------------------------------------------------- Constants, , ,     public static final String MAIN = "initialContext";, , ,     // ----------------------------------------------------- Instance Variables, , ,     /**,      * Initial context.,      */,     protected static volatile Context initialContext = null;, , ,     // --------------------------------------------------------- Public Methods, , ,     // -------------------------------------------------- ObjectFactory Methods, , ,     /**,      * Crete a new Context's instance.,      */,     @SuppressWarnings("unchecked"),     @Override,     public Object getObjectInstance(Object obj, Name name, Context nameCtx,,                                     Hashtable<?,?> environment),         throws NamingException {,         if ((ContextBindings.isThreadBound()) ||,             (ContextBindings.isClassLoaderBound())) {,             return new SelectorContext((Hashtable<String,Object>)environment);,         },         return null;,     }, , ,     /**,      * Get a new (writable) initial context.,      */,     @SuppressWarnings("unchecked"),     @Override,     public Context getInitialContext(Hashtable<?,?> environment),         throws NamingException {,         if (ContextBindings.isThreadBound() ||,             (ContextBindings.isClassLoaderBound())) {,             // Redirect the request to the bound initial context,             return new SelectorContext(,                     (Hashtable<String,Object>)environment, true);,         }, ,         // If the thread is not bound, return a shared writable context,         if (initialContext == null) {,             synchronized(javaURLContextFactory.class) {,                 if (initialContext == null) {,                     initialContext = new NamingContext(,                             (Hashtable<String,Object>)environment, MAIN);,                 },             },         },         return initialContext;],,
STYLE,RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT,org/apache/tomcat/SimpleInstanceManager.java,prepareInstance,58-58,[        prepareInstance(o);],,
STYLE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,org/apache/tomcat/buildutil/Txt2Html.java,execute,127-127,[                    " to " + todir.getAbsolutePath() );],,
MT_CORRECTNESS,DC_PARTIALLY_CONSTRUCTED,org/apache/tomcat/dbcp/dbcp2/BasicDataSource.java,createDataSource,1926-1926,[                dataSource.setLogWriter(logWriter);],,createDataSource,1925-1925,[                dataSource = createDataSourceInstance();],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/tomcat/dbcp/dbcp2/BasicDataSource.java,closeConnectionPool,2096-2096,[        } catch(Exception e) {],,
STYLE,REC_CATCH_EXCEPTION,org/apache/tomcat/dbcp/dbcp2/BasicDataSource.java,createConnectionFactory,2016-2016,[            } catch (Exception t) {],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/tomcat/dbcp/dbcp2/DelegatingCallableStatement.java,getBytes,124-124,[    { checkOpen(); try { return ((CallableStatement)getDelegate()).getBytes( parameterIndex); } catch (SQLException e) { handleException(e); return null; } }],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/tomcat/dbcp/dbcp2/DelegatingCallableStatement.java,getBytes,332-332,[    { checkOpen(); try { return ((CallableStatement)getDelegate()).getBytes(parameterName); } catch (SQLException e) { handleException(e); return null; } }],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/tomcat/dbcp/dbcp2/DelegatingConnection.java,checkOpen,601-601,[                } catch (Exception ex) {],,
SECURITY,SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING,org/apache/tomcat/dbcp/dbcp2/DelegatingConnection.java,prepareStatement,288-288,[                    this, _conn.prepareStatement(sql));],,
SECURITY,SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING,org/apache/tomcat/dbcp/dbcp2/DelegatingConnection.java,prepareStatement,772-772,[                    this, _conn.prepareStatement(sql, autoGeneratedKeys));],,
SECURITY,SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING,org/apache/tomcat/dbcp/dbcp2/DelegatingConnection.java,prepareStatement,305-305,[                    this, _conn.prepareStatement(sql,resultSetType,resultSetConcurrency));],,
SECURITY,SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING,org/apache/tomcat/dbcp/dbcp2/DelegatingConnection.java,prepareStatement,738-738,[                    this, _conn.prepareStatement(sql, resultSetType,],,
SECURITY,SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING,org/apache/tomcat/dbcp/dbcp2/DelegatingConnection.java,prepareStatement,787-787,[                    this, _conn.prepareStatement(sql, columnIndexes));],,
SECURITY,SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING,org/apache/tomcat/dbcp/dbcp2/DelegatingConnection.java,prepareStatement,802-802,[                    this, _conn.prepareStatement(sql, columnNames));],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/tomcat/dbcp/dbcp2/DelegatingResultSet.java,getBytes,236-236,[    { try { return _res.getBytes(columnIndex); } catch (SQLException e) { handleException(e); return null; } }],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/tomcat/dbcp/dbcp2/DelegatingResultSet.java,getBytes,304-304,[    { try { return _res.getBytes(columnName); } catch (SQLException e) { handleException(e); return null; } }],,
SECURITY,SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE,org/apache/tomcat/dbcp/dbcp2/DelegatingStatement.java,addBatch,331-331,[    { checkOpen(); try { _stmt.addBatch(sql); } catch (SQLException e) { handleException(e); } }],,
SECURITY,SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE,org/apache/tomcat/dbcp/dbcp2/DelegatingStatement.java,execute,290-290,[            return _stmt.execute(sql);],,
SECURITY,SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE,org/apache/tomcat/dbcp/dbcp2/DelegatingStatement.java,execute,425-425,[            return _stmt.execute(sql, autoGeneratedKeys);],,
SECURITY,SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE,org/apache/tomcat/dbcp/dbcp2/DelegatingStatement.java,execute,439-439,[            return _stmt.execute(sql, columnIndexes);],,
SECURITY,SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE,org/apache/tomcat/dbcp/dbcp2/DelegatingStatement.java,execute,453-453,[            return _stmt.execute(sql, columnNames);],,
SECURITY,SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE,org/apache/tomcat/dbcp/dbcp2/DelegatingStatement.java,executeQuery,206-206,[            return DelegatingResultSet.wrapResultSet(this,_stmt.executeQuery(sql));],,
SECURITY,SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE,org/apache/tomcat/dbcp/dbcp2/DelegatingStatement.java,executeUpdate,233-233,[            return _stmt.executeUpdate(sql);],,
SECURITY,SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE,org/apache/tomcat/dbcp/dbcp2/DelegatingStatement.java,executeUpdate,383-383,[            return _stmt.executeUpdate(sql, autoGeneratedKeys);],,
SECURITY,SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE,org/apache/tomcat/dbcp/dbcp2/DelegatingStatement.java,executeUpdate,397-397,[            return _stmt.executeUpdate(sql, columnIndexes);],,
SECURITY,SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE,org/apache/tomcat/dbcp/dbcp2/DelegatingStatement.java,executeUpdate,411-411,[            return _stmt.executeUpdate(sql, columnNames);],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/tomcat/dbcp/dbcp2/PoolableConnection.java,<clinit>,52-52,[        } catch (Exception ex) {],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/tomcat/dbcp/dbcp2/PoolableConnection.java,close,142-142,[            } catch (Exception ie) {],,
SECURITY,SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING,org/apache/tomcat/dbcp/dbcp2/PoolableConnection.java,validate,237-237,[                    getInnermostDelegateInternal().prepareStatement(sql);],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/tomcat/dbcp/dbcp2/PoolableConnectionFactory.java,setPool,105-105,[            } catch(Exception e) {],,
SECURITY,SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE,org/apache/tomcat/dbcp/dbcp2/PoolableConnectionFactory.java,initializeConnection,270-270,[                    stmt.execute(sql);],,
SECURITY,SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING,org/apache/tomcat/dbcp/dbcp2/PoolableConnectionFactory.java,validateConnection,302-302,[        conn.validate(_validationQuery, _validationQueryTimeout);],,
SECURITY,SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING,org/apache/tomcat/dbcp/dbcp2/PoolingConnection.java,makeObject,323-323,[                        getDelegate().prepareStatement(key.getSql()), key, _pstmtPool, this);],,makeObject,331-331,[                    getDelegate().prepareStatement(key.getSql(), key.getAutoGeneratedKeys().intValue()), key, _pstmtPool, this);],,makeObject,336-336,[                PoolablePreparedStatement pps = new PoolablePreparedStatement(getDelegate().prepareStatement(],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/tomcat/dbcp/dbcp2/PoolingDriver.java,<clinit>,48-48,[        } catch(Exception e) {],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/tomcat/dbcp/dbcp2/PoolingDriver.java,invalidateConnection,167-167,[            catch (Exception e) {],,
MALICIOUS_CODE,MS_MUTABLE_COLLECTION_PKGPROTECT,org/apache/tomcat/dbcp/dbcp2/PoolingDriver.java,,53-53,[    protected static final HashMap<String,ObjectPool<? extends Connection>> pools =],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/tomcat/dbcp/dbcp2/Utils.java,closeQuietly,68-68,[            } catch (Exception e) {],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/tomcat/dbcp/dbcp2/Utils.java,closeQuietly,53-53,[            } catch (Exception e) {],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/tomcat/dbcp/dbcp2/Utils.java,closeQuietly,83-83,[            } catch (Exception e) {],,
SECURITY,SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING,org/apache/tomcat/dbcp/dbcp2/cpdsadapter/ConnectionImpl.java,prepareStatement,101-101,[                (this, pooledConnection.prepareStatement(sql));],,
SECURITY,SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING,org/apache/tomcat/dbcp/dbcp2/cpdsadapter/ConnectionImpl.java,prepareStatement,156-156,[                    pooledConnection.prepareStatement(sql, autoGeneratedKeys));],,
SECURITY,SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING,org/apache/tomcat/dbcp/dbcp2/cpdsadapter/ConnectionImpl.java,prepareStatement,125-125,[                    (sql,resultSetType,resultSetConcurrency));],,
SECURITY,SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING,org/apache/tomcat/dbcp/dbcp2/cpdsadapter/ConnectionImpl.java,prepareStatement,141-141,[                    pooledConnection.prepareStatement(sql, resultSetType,],,
SECURITY,SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING,org/apache/tomcat/dbcp/dbcp2/cpdsadapter/ConnectionImpl.java,prepareStatement,170-170,[                    pooledConnection.prepareStatement(sql, columnIndexes));],,
SECURITY,SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING,org/apache/tomcat/dbcp/dbcp2/cpdsadapter/ConnectionImpl.java,prepareStatement,184-184,[                    pooledConnection.prepareStatement(sql, columnNames));],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/tomcat/dbcp/dbcp2/cpdsadapter/PooledConnectionImpl.java,finalize,218-218,[        } catch (Exception ignored) {],,
SECURITY,SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING,org/apache/tomcat/dbcp/dbcp2/cpdsadapter/PooledConnectionImpl.java,makeObject,431-431,[                        connection.prepareStatement(key.getSql()),],,makeObject,440-440,[                connection.prepareStatement(key.getSql(),],,makeObject,435-435,[                            connection.prepareStatement(key.getSql(),],,
SECURITY,SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING,org/apache/tomcat/dbcp/dbcp2/cpdsadapter/PooledConnectionImpl.java,prepareStatement,249-249,[            return connection.prepareStatement(sql);],,
SECURITY,SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING,org/apache/tomcat/dbcp/dbcp2/cpdsadapter/PooledConnectionImpl.java,prepareStatement,306-306,[            return connection.prepareStatement(sql, autoGeneratedKeys);],,
SECURITY,SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING,org/apache/tomcat/dbcp/dbcp2/cpdsadapter/PooledConnectionImpl.java,prepareStatement,280-280,[            return connection.prepareStatement(sql, resultSetType, resultSetConcurrency);],,
SECURITY,SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING,org/apache/tomcat/dbcp/dbcp2/cpdsadapter/PooledConnectionImpl.java,prepareStatement,321-321,[            return connection.prepareStatement(sql, resultSetType,],,
SECURITY,SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING,org/apache/tomcat/dbcp/dbcp2/cpdsadapter/PooledConnectionImpl.java,prepareStatement,337-337,[            return connection.prepareStatement(sql, columnIndexes);],,
SECURITY,SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING,org/apache/tomcat/dbcp/dbcp2/cpdsadapter/PooledConnectionImpl.java,prepareStatement,351-351,[            return connection.prepareStatement(sql, columnNames);],,
STYLE,REC_CATCH_EXCEPTION,org/apache/tomcat/dbcp/dbcp2/datasources/CPDSConnectionFactory.java,validateObject,205-205,[            } catch (Exception e) {],,
SECURITY,SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE,org/apache/tomcat/dbcp/dbcp2/datasources/CPDSConnectionFactory.java,validateObject,196-196,[                rset = stmt.executeQuery(_validationQuery);],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/tomcat/dbcp/dbcp2/datasources/InstanceKeyDataSource.java,getConnection,915-915,[            closeDueToException(info);],,getConnection,918-918,[            closeDueToException(info);],,getConnection,921-921,[            closeDueToException(info);],,getConnection,954-954,[                    closeDueToException(info);],,getConnection,957-957,[                    closeDueToException(info);],,getConnection,960-960,[                    closeDueToException(info);],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/tomcat/dbcp/dbcp2/datasources/InstanceKeyDataSourceFactory.java,deserialize,323-323,[                } catch (IOException ex) {],,
STYLE,REC_CATCH_EXCEPTION,org/apache/tomcat/dbcp/dbcp2/datasources/KeyedCPDSConnectionFactory.java,validateObject,205-205,[            } catch(Exception e) {],,
SECURITY,SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE,org/apache/tomcat/dbcp/dbcp2/datasources/KeyedCPDSConnectionFactory.java,validateObject,196-196,[                rset = stmt.executeQuery(_validationQuery);],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/tomcat/dbcp/dbcp2/datasources/PerUserPoolDataSource.java,close,108-108,[            } catch (Exception closePoolException) {],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/tomcat/dbcp/pool2/PoolUtils.java,close,1725-1725,[            } catch (Exception e) {],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/tomcat/dbcp/pool2/PoolUtils.java,invalidateObject,1655-1655,[            } catch (Exception e) {],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/tomcat/dbcp/pool2/PoolUtils.java,close,1524-1524,[            } catch (Exception e) {],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/tomcat/dbcp/pool2/PoolUtils.java,invalidateObject,1479-1479,[            } catch (Exception e) {],,
STYLE,REC_CATCH_EXCEPTION,org/apache/tomcat/dbcp/pool2/PoolUtils.java,run,681-681,[            } catch (Exception e) {],,
I18N,DM_DEFAULT_ENCODING,org/apache/tomcat/dbcp/pool2/impl/AbandonedConfig.java,<init>,174-174,[    private PrintWriter logWriter = new PrintWriter(System.out);],,
BAD_PRACTICE,EQ_COMPARETO_USE_OBJECT_EQUALS,org/apache/tomcat/dbcp/pool2/impl/DefaultPooledObject.java,compareTo,38-38,[public class DefaultPooledObject<T> implements PooledObject<T> {],,
STYLE,UCF_USELESS_CONTROL_FLOW,org/apache/tomcat/dbcp/pool2/impl/DefaultPooledObject.java,endEvictionTest,171-171,[            if (!idleQueue.offerFirst(this)) {],,
MT_CORRECTNESS,VO_VOLATILE_INCREMENT,org/apache/tomcat/dbcp/pool2/impl/DefaultPooledObject.java,allocate,190-190,[            borrowedCount++;],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/tomcat/dbcp/pool2/impl/GenericKeyedObjectPool.java,borrowObject,395-395,[                        } catch (Exception e1) {],,
STYLE,UCF_USELESS_CONTROL_FLOW,org/apache/tomcat/dbcp/pool2/impl/GenericKeyedObjectPool.java,evict,982-982,[                    if (!underTest.endEvictionTest(idleObjects)) {],,
PERFORMANCE,WMI_WRONG_MAP_ITERATOR,org/apache/tomcat/dbcp/pool2/impl/GenericKeyedObjectPool.java,clearOldest,743-743,[            ObjectDeque<T> queue = poolMap.get(k);],,
PERFORMANCE,WMI_WRONG_MAP_ITERATOR,org/apache/tomcat/dbcp/pool2/impl/GenericKeyedObjectPool.java,getNumWaitersByKey,1375-1375,[            ObjectDeque<T> queue = poolMap.get(key);],,
PERFORMANCE,WMI_WRONG_MAP_ITERATOR,org/apache/tomcat/dbcp/pool2/impl/GenericKeyedObjectPool.java,hasBorrowWaiters,842-842,[            final ObjectDeque<T> deque = poolMap.get(k);],,
PERFORMANCE,WMI_WRONG_MAP_ITERATOR,org/apache/tomcat/dbcp/pool2/impl/GenericKeyedObjectPool.java,listAllObjects,1405-1405,[            ObjectDeque<T> queue = poolMap.get(key);],,
PERFORMANCE,WMI_WRONG_MAP_ITERATOR,org/apache/tomcat/dbcp/pool2/impl/GenericKeyedObjectPool.java,reuseCapacity,805-805,[            final ObjectDeque<T> deque = poolMap.get(k);],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/tomcat/dbcp/pool2/impl/GenericObjectPool.java,borrowObject,474-474,[                    } catch (Exception e1) {],,
STYLE,UCF_USELESS_CONTROL_FLOW,org/apache/tomcat/dbcp/pool2/impl/GenericObjectPool.java,evict,825-825,[                        if (!underTest.endEvictionTest(idleObjects)) {],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/tomcat/dbcp/pool2/impl/SoftReferenceObjectPool.java,addObject,297-297,[            } catch (Exception e) {],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/tomcat/dbcp/pool2/impl/SoftReferenceObjectPool.java,returnObject,222-222,[            } catch (Exception e) {],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/tomcat/jdbc/naming/GenericNamingResourcesFactory.java,setProperty,123-123,[                            params[0] = new Integer(value);],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/tomcat/jdbc/naming/GenericNamingResourcesFactory.java,setProperty,131-131,[                                params[0] = new Long(value);],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/tomcat/jdbc/pool/ConnectionPool.java,init,498-498,[                    try {this.returnConnection(initialPool[i]);}catch(Exception x){/*NOOP*/}],,
STYLE,DLS_DEAD_LOCAL_STORE_OF_NULL,org/apache/tomcat/jdbc/pool/ConnectionPool.java,borrowConnection,818-818,[                con = null;],,
I18N,DM_DEFAULT_ENCODING,org/apache/tomcat/jdbc/pool/ConnectionPool.java,getStackTrace,1068-1068,[            String result = bout.toString();],,
I18N,DM_DEFAULT_ENCODING,org/apache/tomcat/jdbc/pool/ConnectionPool.java,getStackTrace,1066-1066,[            java.io.PrintStream writer = new java.io.PrintStream(bout);],,
STYLE,ICAST_INTEGER_MULTIPLY_CAST_TO_LONG,org/apache/tomcat/jdbc/pool/ConnectionPool.java,checkAbandoned,947-947,[                    } else if (sto > 0 && (now - time) > (sto*1000)) {],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/tomcat/jdbc/pool/ConnectionPool.java,borrowConnection,157-157,[            if (pc!=null) {],,
STYLE,REC_CATCH_EXCEPTION,org/apache/tomcat/jdbc/pool/ConnectionPool.java,close,404-404,[            }catch (Exception x) {],,
STYLE,REC_CATCH_EXCEPTION,org/apache/tomcat/jdbc/pool/ConnectionPool.java,init,470-470,[            }catch (Exception x) {],,
STYLE,REC_CATCH_EXCEPTION,org/apache/tomcat/jdbc/pool/ConnectionPool.java,setupConnection,301-301,[                }catch(Exception x) {],,setupConnection,330-330,[        }catch (Exception x) {],,
BAD_PRACTICE,RV_RETURN_VALUE_IGNORED_BAD_PRACTICE,org/apache/tomcat/jdbc/pool/ConnectionPool.java,release,592-592,[            idle.offer(create(true));],,
CORRECTNESS,RV_RETURN_VALUE_IGNORED,org/apache/tomcat/jdbc/pool/ConnectionPool.java,get,1218-1218,[                    latch.await(timeout,unit); //this shouldn't block for long],,
BAD_PRACTICE,NM_SAME_SIMPLE_NAME_AS_INTERFACE,org/apache/tomcat/jdbc/pool/DataSource.java,,39-157,[    private static final Log log = LogFactory.getLog(DataSource.class);, ,     /**,      * Constructor for reflection only. A default set of pool properties will be created.,      */,     public DataSource() {,         super();,     }, ,     /**,      * Constructs a DataSource object wrapping a connection,      * @param poolProperties,      */,     public DataSource(PoolConfiguration poolProperties) {,         super(poolProperties);,     }, , , , , , //===============================================================================, //  JMX Operations - Register the actual pool itself under the tomcat.jdbc domain, //===============================================================================,     protected volatile ObjectName oname = null;, ,     /**,      * Unregisters the underlying connection pool mbean.<br/>,      * {@inheritDoc},      */,     @Override,     public void postDeregister() {,         if (oname!=null) unregisterJmx();,     }, ,     /**,      * no-op<br/>,      * {@inheritDoc},      */,     @Override,     public void postRegister(Boolean registrationDone) {,         // NOOP,     }, , ,     /**,      * no-op<br/>,      * {@inheritDoc},      */,     @Override,     public void preDeregister() throws Exception {,         // NOOP,     }, ,     /**,      * If the connection pool MBean exists, it will be registered during this operation.<br/>,      * {@inheritDoc},      */,     @Override,     public ObjectName preRegister(MBeanServer server, ObjectName name) throws Exception {,         try {,             if ( isJmxEnabled() ) {,                 this.oname = createObjectName(name);,                 if (oname!=null) registerJmx();,             },         }catch (MalformedObjectNameException x) {,             log.error("Unable to create object name for JDBC pool.",x);,         },         return name;,     }, ,     /**,      * Creates the ObjectName for the ConnectionPoolMBean object to be registered,      * @param original the ObjectName for the DataSource,      * @return the ObjectName for the ConnectionPoolMBean,      * @throws MalformedObjectNameException,      */,     public ObjectName createObjectName(ObjectName original) throws MalformedObjectNameException {,         String domain = ConnectionPool.POOL_JMX_DOMAIN;,         Hashtable<String,String> properties = original.getKeyPropertyList();,         String origDomain = original.getDomain();,         properties.put("type", "ConnectionPool");,         properties.put("class", this.getClass().getName());,         if (original.getKeyProperty("path")!=null || properties.get("context")!=null) {,             //this ensures that if the registration came from tomcat, we're not losing,             //the unique domain, but putting that into as an engine attribute,             properties.put("engine", origDomain);,         },         ObjectName name = new ObjectName(domain,properties);,         return name;,     }, ,     /**,      * Registers the ConnectionPoolMBean under a unique name based on the ObjectName for the DataSource,      */,     protected void registerJmx() {,         try {,             if (pool.getJmxPool()!=null) {,                 MBeanServer mbs = ManagementFactory.getPlatformMBeanServer();,                 mbs.registerMBean(pool.getJmxPool(), oname);,             },         } catch (Exception e) {,             log.error("Unable to register JDBC pool with JMX",e);,         },     }, ,     /**,      *,      */,     protected void unregisterJmx() {,         try {,             MBeanServer mbs = ManagementFactory.getPlatformMBeanServer();,             mbs.unregisterMBean(oname);,         } catch (InstanceNotFoundException ignore) {,             // NOOP,         } catch (Exception e) {,             log.error("Unable to unregister JDBC pool with JMX",e);,         },     }],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/jdbc/pool/DataSourceFactory.java,,132-132,[    protected static final String[] ALL_PROPERTIES = {],,
STYLE,BC_UNCONFIRMED_CAST_OF_RETURN_VALUE,org/apache/tomcat/jdbc/pool/DataSourceProxy.java,getPooledConnection,180-180,[        return (javax.sql.PooledConnection) getConnection();],,
STYLE,BC_UNCONFIRMED_CAST_OF_RETURN_VALUE,org/apache/tomcat/jdbc/pool/DataSourceProxy.java,getPooledConnection,190-190,[        return (javax.sql.PooledConnection) getConnection();],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/tomcat/jdbc/pool/DataSourceProxy.java,getXAConnection,151-151,[            } catch (Exception ignore) {],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/tomcat/jdbc/pool/DataSourceProxy.java,getXAConnection,168-168,[            } catch (Exception ignore) {],,
BAD_PRACTICE,RV_RETURN_VALUE_IGNORED_BAD_PRACTICE,org/apache/tomcat/jdbc/pool/FairBlockingQueue.java,offer,339-339,[            offer(e);],,
BAD_PRACTICE,RV_RETURN_VALUE_IGNORED_BAD_PRACTICE,org/apache/tomcat/jdbc/pool/FairBlockingQueue.java,offer,312-312,[        offer(e);],,
MT_CORRECTNESS,UL_UNRELEASED_LOCK_EXCEPTION_PATH,org/apache/tomcat/jdbc/pool/FairBlockingQueue.java,poll,137-137,[        lock.lock();],,
STYLE,URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD,org/apache/tomcat/jdbc/pool/FairBlockingQueue.java,,442-442,[        protected volatile boolean canceled = false;],,
BAD_PRACTICE,ES_COMPARING_PARAMETER_STRING_WITH_EQ,org/apache/tomcat/jdbc/pool/JdbcInterceptor.java,compare,138-138,[            return name1==name2;],,
BAD_PRACTICE,RV_RETURN_VALUE_IGNORED_BAD_PRACTICE,org/apache/tomcat/jdbc/pool/MultiLockFairBlockingQueue.java,offer,336-336,[            offer(e);],,
BAD_PRACTICE,RV_RETURN_VALUE_IGNORED_BAD_PRACTICE,org/apache/tomcat/jdbc/pool/MultiLockFairBlockingQueue.java,offer,309-309,[        offer(e);],,
MT_CORRECTNESS,UL_UNRELEASED_LOCK_EXCEPTION_PATH,org/apache/tomcat/jdbc/pool/MultiLockFairBlockingQueue.java,poll,149-149,[            lock.lock();],,poll,162-162,[                    lock.lock();],,
STYLE,URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD,org/apache/tomcat/jdbc/pool/MultiLockFairBlockingQueue.java,,439-439,[        protected volatile boolean canceled = false;],,
I18N,DM_DEFAULT_ENCODING,org/apache/tomcat/jdbc/pool/PoolProperties.java,getProperties,1183-1183,[                props.load(new ByteArrayInputStream(propText.replace(';', '\n').getBytes()));],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/tomcat/jdbc/pool/PoolProperties.java,getJdbcInterceptorsAsArray,497-497,[        return interceptors;],,
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,org/apache/tomcat/jdbc/pool/PoolProperties.java,,40-40,[    protected static AtomicInteger poolCounter = new AtomicInteger(0);],,
STYLE,REC_CATCH_EXCEPTION,org/apache/tomcat/jdbc/pool/PoolProperties.java,toString,846-846,[        }catch (Exception x) {],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/tomcat/jdbc/pool/PooledConnection.java,validate,514-514,[                try { stmt.close();} catch (Exception ignore2){/*NOOP*/}],,
STYLE,ICAST_INTEGER_MULTIPLY_CAST_TO_LONG,org/apache/tomcat/jdbc/pool/PooledConnection.java,getAbandonTimeout,403-403,[            return poolProperties.getRemoveAbandonedTimeout()*1000;],,
STYLE,REC_CATCH_EXCEPTION,org/apache/tomcat/jdbc/pool/PooledConnection.java,connectUsingDriver,276-276,[        } catch (java.lang.Exception cn) {],,
SECURITY,SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE,org/apache/tomcat/jdbc/pool/PooledConnection.java,validate,503-503,[            stmt.execute(query);],,
STYLE,UCF_USELESS_CONTROL_FLOW,org/apache/tomcat/jdbc/pool/PooledConnection.java,connect,193-193,[        if (poolProperties.getDataSource()==null && poolProperties.getDataSourceJNDI()!=null) {],,
BAD_PRACTICE,NM_CLASS_NOT_EXCEPTION,org/apache/tomcat/jdbc/pool/TrapException.java,,34-79,[    public TrapException() {,     }, ,     @Override,     public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {,         try {,             return super.invoke(proxy, method, args);,         }catch (Exception t) {,             Throwable exception = t;,             if (t instanceof InvocationTargetException && t.getCause() != null) {,                 exception = t.getCause();,                 if (exception instanceof Error) {,                     throw exception;,                 },             },             Class<?> exceptionClass = exception.getClass();,             if (!isDeclaredException(method, exceptionClass)) {,                 if (isDeclaredException(method,SQLException.class)) {,                     SQLException sqlx = new SQLException("Uncaught underlying exception.");,                     sqlx.initCause(exception);,                     exception = sqlx;,                 } else {,                     RuntimeException rx = new RuntimeException("Uncaught underlying exception.");,                     rx.initCause(exception);,                     exception = rx;,                 },             },             throw exception;,         }, ,     }, ,     public boolean isDeclaredException(Method m, Class<?> clazz) {,         for (Class<?> cl : m.getExceptionTypes()) {,             if (cl.equals(clazz) || cl.isAssignableFrom(clazz)) return true;,         },         return false;,     }, ,     /**,      * no-op for this interceptor. no state is stored.,      */,     @Override,     public void reset(ConnectionPool parent, PooledConnection con) {,         // NOOP,     }],,
BAD_PRACTICE,NM_SAME_SIMPLE_NAME_AS_INTERFACE,org/apache/tomcat/jdbc/pool/XADataSource.java,,26-35,[        super();,     }, ,     /**,      * Constructs a DataSource object wrapping a connection,      * @param poolProperties,      */,     public XADataSource(PoolConfiguration poolProperties) {,         super(poolProperties);,     }],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/jdbc/pool/interceptor/AbstractCreateStatementInterceptor.java,,47-47,[    protected static final String[] EXECUTE_TYPES = {EXECUTE, EXECUTE_QUERY, EXECUTE_UPDATE, EXECUTE_BATCH};],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/jdbc/pool/interceptor/AbstractCreateStatementInterceptor.java,,39-39,[    protected static final String[] STATEMENT_TYPES = {CREATE_STATEMENT, PREPARE_STATEMENT, PREPARE_CALL};],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/jdbc/pool/interceptor/AbstractQueryReport.java,,49-49,[    protected static final Constructor<?>[] constructors =],,
STYLE,SF_SWITCH_NO_DEFAULT,org/apache/tomcat/jdbc/pool/interceptor/ConnectionState.java,invoke,154-158,[            switch (index) {,                 case 0:{autoCommit = (Boolean) (read?result:args[0]); break;},                 case 1:{transactionIsolation = (Integer)(read?result:args[0]); break;},                 case 2:{readOnly = (Boolean)(read?result:args[0]); break;},                 case 3:{catalog = (String)(read?result:args[0]); break;}],,
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,org/apache/tomcat/jdbc/pool/interceptor/SlowQueryReport.java,,49-49,[    protected static ConcurrentHashMap<String,ConcurrentHashMap<String,QueryStats>> perPoolStats =],,
MALICIOUS_CODE,MS_EXPOSE_REP,org/apache/tomcat/jdbc/pool/interceptor/SlowQueryReport.java,getFieldDescriptions,314-314,[            return FIELD_DESCRIPTIONS;],,
MALICIOUS_CODE,MS_EXPOSE_REP,org/apache/tomcat/jdbc/pool/interceptor/SlowQueryReport.java,getFieldNames,310-310,[            return FIELD_NAMES;],,
MALICIOUS_CODE,MS_EXPOSE_REP,org/apache/tomcat/jdbc/pool/interceptor/SlowQueryReport.java,getFieldTypes,318-318,[            return FIELD_TYPES;],,
MT_CORRECTNESS,VO_VOLATILE_INCREMENT,org/apache/tomcat/jdbc/pool/interceptor/SlowQueryReport.java,failure,396-396,[            failures++;],,
MT_CORRECTNESS,VO_VOLATILE_INCREMENT,org/apache/tomcat/jdbc/pool/interceptor/SlowQueryReport.java,add,389-389,[            nrOfInvocations++;],,
MT_CORRECTNESS,VO_VOLATILE_INCREMENT,org/apache/tomcat/jdbc/pool/interceptor/SlowQueryReport.java,prepare,374-374,[            prepareCount++;],,
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,org/apache/tomcat/jdbc/pool/interceptor/SlowQueryReportJmx.java,,67-67,[    protected static ConcurrentHashMap<String,SlowQueryReportJmxMBean> mbeans =],,
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,org/apache/tomcat/jdbc/pool/interceptor/SlowQueryReportJmx.java,,102-102,[    protected static AtomicLong notifySequence = new AtomicLong(0);],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/tomcat/jdbc/pool/interceptor/SlowQueryReportJmx.java,getSlowQueriesCD,238-238,[            if (stats!=null) {],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/tomcat/jdbc/pool/interceptor/StatementCache.java,getTypes,63-63,[        return types;],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/jdbc/pool/interceptor/StatementCache.java,,35-35,[    protected static final String[] ALL_TYPES = new String[] {PREPARE_STATEMENT,PREPARE_CALL};],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/jdbc/pool/interceptor/StatementCache.java,,36-36,[    protected static final String[] CALLABLE_TYPE = new String[] {PREPARE_CALL};],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/jdbc/pool/interceptor/StatementCache.java,,37-37,[    protected static final String[] PREPARED_TYPE = new String[] {PREPARE_STATEMENT};],,
STYLE,REC_CATCH_EXCEPTION,org/apache/tomcat/jdbc/pool/interceptor/StatementCache.java,closeInvoked,249-249,[                } catch (Exception x) {],,
PERFORMANCE,URF_UNREAD_FIELD,org/apache/tomcat/jdbc/pool/interceptor/StatementCache.java,,227-227,[        boolean cached = false;],,
MT_CORRECTNESS,LI_LAZY_INIT_STATIC,org/apache/tomcat/jdbc/pool/interceptor/StatementDecoratorInterceptor.java,getResultSetConstructor,80-83,[        if (resultSetConstructor == null) {,             Class<?> proxyClass = Proxy.getProxyClass(StatementDecoratorInterceptor.class.getClassLoader(),,                     new Class[] { ResultSet.class });,             resultSetConstructor = proxyClass.getConstructor(new Class[] { InvocationHandler.class });],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/jdbc/pool/interceptor/StatementDecoratorInterceptor.java,,48-48,[    protected static final Constructor<?>[] constructors = new Constructor[AbstractCreateStatementInterceptor.STATEMENT_TYPE_COUNT];],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/jdbc/pool/interceptor/StatementDecoratorInterceptor.java,,53-53,[    protected static Constructor<?> resultSetConstructor = null;],,
STYLE,ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD,org/apache/tomcat/jdbc/pool/interceptor/StatementDecoratorInterceptor.java,getResultSetConstructor,83-83,[            resultSetConstructor = proxyClass.getConstructor(new Class[] { InvocationHandler.class });],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC,org/apache/tomcat/jdbc/pool/interceptor/StatementDecoratorInterceptor.java,,287-304,[        public ResultSetProxy(Object st, Object delegate) {,             this.st = st;,             this.delegate = delegate;,         }, ,         @Override,         public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {,             if (method.getName().equals("getStatement")) {,                 return this.st;,             } else {,                 try {,                     return method.invoke(this.delegate, args);,                 } catch (Throwable t) {,                     if (t instanceof InvocationTargetException,                             && t.getCause() != null) {,                         throw t.getCause();,                     } else {,                         throw t;],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_NEEDS_THIS,org/apache/tomcat/jdbc/pool/interceptor/StatementFinalizer.java,,99-111,[        public StatementEntry(Statement statement) {,             this.statement = new WeakReference<>(statement);,             if (logCreationStack) {,                 this.allocationStack = new Throwable();,             },         }, ,         public Statement getStatement() {,             return statement.get();,         }, ,         public Throwable getAllocationStack() {,             return allocationStack;],,
MT_CORRECTNESS,LI_LAZY_INIT_STATIC,org/apache/tomcat/jni/Library.java,initialize,170-174,[        if (_instance == null) {,             if (libraryName == null),                 _instance = new Library();,             else,                 _instance = new Library(libraryName);],,
MALICIOUS_CODE,MS_CANNOT_BE_FINAL,org/apache/tomcat/jni/Library.java,,124-124,[    public static boolean APR_HAS_RANDOM          = false;],,
MALICIOUS_CODE,MS_CANNOT_BE_FINAL,org/apache/tomcat/jni/Library.java,,121-121,[    public static boolean APR_HAS_SENDFILE        = false;],,
MALICIOUS_CODE,MS_CANNOT_BE_FINAL,org/apache/tomcat/jni/Library.java,,127-127,[    public static boolean APR_HAS_SO_ACCEPTFILTER = false;],,
MALICIOUS_CODE,MS_CANNOT_BE_FINAL,org/apache/tomcat/jni/Library.java,,118-118,[    public static boolean APR_HAVE_IPV6           = false;],,
MALICIOUS_CODE,MS_CANNOT_BE_FINAL,org/apache/tomcat/jni/Library.java,,104-104,[    public static int APR_MAJOR_VERSION  = 0;],,
MALICIOUS_CODE,MS_CANNOT_BE_FINAL,org/apache/tomcat/jni/Library.java,,106-106,[    public static int APR_MINOR_VERSION  = 0;],,
MALICIOUS_CODE,MS_CANNOT_BE_FINAL,org/apache/tomcat/jni/Library.java,,108-108,[    public static int APR_PATCH_VERSION  = 0;],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/jni/Library.java,,120-120,[    public static boolean APR_HAS_THREADS         = false;],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/jni/Library.java,,142-142,[    public static boolean APR_CHARSET_EBCDIC      = false;],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/jni/Library.java,,139-139,[    public static boolean APR_FILES_AS_SOCKETS    = false;],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/jni/Library.java,,126-126,[    public static boolean APR_HAS_DSO             = false;],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/jni/Library.java,,123-123,[    public static boolean APR_HAS_FORK            = false;],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/jni/Library.java,,131-131,[    public static boolean APR_HAS_LARGE_FILES     = false;],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/jni/Library.java,,122-122,[    public static boolean APR_HAS_MMAP            = false;],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/jni/Library.java,,133-133,[    public static boolean APR_HAS_OS_UUID         = false;],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/jni/Library.java,,125-125,[    public static boolean APR_HAS_OTHER_CHILD     = false;],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/jni/Library.java,,129-129,[    public static boolean APR_HAS_PROC_INVOKED    = false;],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/jni/Library.java,,119-119,[    public static boolean APR_HAS_SHARED_MEMORY   = false;],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/jni/Library.java,,128-128,[    public static boolean APR_HAS_UNICODE_FS      = false;],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/jni/Library.java,,130-130,[    public static boolean APR_HAS_USER            = false;],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/jni/Library.java,,132-132,[    public static boolean APR_HAS_XTHREAD_FILES   = false;],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/jni/Library.java,,135-135,[    public static boolean APR_IS_BIGENDIAN        = false;],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/jni/Library.java,,110-110,[    public static int APR_IS_DEV_VERSION = 0;],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/jni/Library.java,,148-148,[    public static boolean APR_O_NONBLOCK_INHERITED  = false;],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/jni/Library.java,,145-145,[    public static boolean APR_TCP_NODELAY_INHERITED = false;],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/jni/Library.java,,102-102,[    public static int TCN_IS_DEV_VERSION = 0;],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/jni/Library.java,,96-96,[    public static int TCN_MAJOR_VERSION  = 0;],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/jni/Library.java,,98-98,[    public static int TCN_MINOR_VERSION  = 0;],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/jni/Library.java,,100-100,[    public static int TCN_PATCH_VERSION  = 0;],,
STYLE,UWF_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD,org/apache/tomcat/util/net/AprEndpoint.java,,442-442,[        serverSock = Socket.create(Address.getInfo(inetAddress).family,],,
STYLE,UWF_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD,org/apache/tomcat/util/net/AprEndpoint.java,,342-342,[                return addr.port;],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/tomcat/jni/socket/AprSocket.java,,114-114,[        status = 0;],,,252-252,[            if ((status & CLOSED) != 0],,,257-257,[            if ((status & WRITING) != 0) {],,,260-260,[            status |= WRITING;],,,271-271,[            status &= ~WRITING;],,,453-453,[            if ((status & CLOSED) != 0 || socket == 0 || !context.running) {],,,896-896,[            return ((status & bit) != 0 && socket != 0 &&],,,392-392,[            if (socket == 0 ||],,,399-399,[            if ((status & CLOSED) == 0) {],,,402-402,[            if ((status & (WRITING | READING)) != 0) {],,,415-415,[            if (socket != 0 && (status & CLOSED) == 0) {],,,417-417,[                status |= CLOSED;],,,168-168,[                if ((status & CONNECTING) != 0) {],,,171-171,[                status |= CONNECTING;],,,878-878,[            if (socket == 0 || ((status & CLOSED) != 0)) {],,,884-884,[            if ((status & POLLIN) != 0) {],,,887-887,[            if ((status & POLLOUT) != 0) {],,,787-787,[            if ((status & SSL_ATTACHED) != 0) {],,,790-790,[            status |= SSL_ATTACHED;],,,344-344,[            if ((status & CLOSED) != 0],,,349-349,[            if ((status & READING) != 0) {],,,352-352,[            status |= READING;],,,355-355,[            status &= ~READING;],,,915-915,[            int old = status & bit;],,,916-916,[            status |= bit;],,,699-699,[            if ((status & CLOSED) != 0) {],,,903-903,[            return ((status & bit) != 0);],,,909-909,[            status &= ~bit;],,,143-143,[            return (status & POLL) != 0;],,,124-124,[                Long.toHexString(socket) + " " + Integer.toHexString(status);],,
STYLE,RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT,org/apache/tomcat/jni/socket/AprSocket.java,getHost,475-475,[        getHost();],,
STYLE,RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT,org/apache/tomcat/jni/socket/AprSocket.java,getHost,839-839,[        getHost();],,
MT_CORRECTNESS,UW_UNCOND_WAIT,org/apache/tomcat/jni/socket/AprSocket.java,read,300-300,[                        wait(to);],,
MT_CORRECTNESS,WA_NOT_IN_LOOP,org/apache/tomcat/jni/socket/AprSocket.java,read,300-300,[                        wait(to);],,
I18N,DM_DEFAULT_ENCODING,org/apache/tomcat/jni/socket/AprSocketContext.java,setNpn,248-248,[        byte[] data = npn.getBytes();],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/tomcat/jni/socket/AprSocketContext.java,setNpn,259-259,[        spdyNPN = data;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/tomcat/jni/socket/AprSocketContext.java,setTicketKey,314-314,[        this.ticketKey = key48Bytes;],,
STYLE,ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD,org/apache/tomcat/jni/socket/AprSocketContext.java,allocatePoller,890-890,[            sizeLogged = true;],,
STYLE,UCF_USELESS_CONTROL_FLOW,org/apache/tomcat/jni/socket/AprSocketContext.java,getSslCtx,637-637,[                            if (ticketKey != null) {],,
STYLE,BC_UNCONFIRMED_CAST,org/apache/tomcat/jni/socket/AprSocketContext.java,rejectedExecution,205-205,[                        AprSocket s = (AprSocket) r;],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/tomcat/jni/socket/AprSocketContext.java,,201-208,[                new LinkedBlockingQueue<Runnable>(), new RejectedExecutionHandler() {,                     @Override,                     public void rejectedExecution(Runnable r,,                             java.util.concurrent.ThreadPoolExecutor executor) {,                         AprSocket s = (AprSocket) r;,                         log.severe("Rejecting " + s);,                         s.reset();,                     }],,
STYLE,REC_CATCH_EXCEPTION,org/apache/tomcat/jni/socket/AprSocketContext.java,unblock,800-800,[            } catch (Exception ex) {],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/tomcat/jni/socket/AprSocketContext.java,,884-884,[        res.size = size;],,,1177-1177,[                if (keepAliveCount.get() >= size) {],,
MT_CORRECTNESS,NN_NAKED_NOTIFY,org/apache/tomcat/jni/socket/AprSocketContext.java,run,1038-1038,[                                    ch.notifyAll();],,
STYLE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,org/apache/tomcat/jni/socket/AprSocketContext.java,remaining,1162-1162,[                return (desc.length - channels.size() * 2);],,
I18N,DM_DEFAULT_ENCODING,org/apache/tomcat/jni/socket/HostInfo.java,getNpn,76-76,[        return new String(npn, 0, npnLen);],,
I18N,DM_DEFAULT_ENCODING,org/apache/tomcat/spdy/CompressDeflater6.java,<clinit>,48-48,[    private static final byte[] SPDY_DICT = SPDY_DICT_S.getBytes();],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/tomcat/spdy/NetSupportOpenSSL.java,,36-39,[        con.customVerification(new TlsCertVerifier() {,             @Override,             public void handshakeDone(AprSocket ch) {,             }],,
STYLE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,org/apache/tomcat/spdy/NetSupportOpenSSL.java,close,169-169,[            socket.close();],,
STYLE,BC_UNCONFIRMED_CAST_OF_RETURN_VALUE,org/apache/tomcat/spdy/NetSupportSocket.java,getSocket,58-58,[                SSLSocket socket = (SSLSocket) sslCtx.getSocketFactory().createSocket(host, port);],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/tomcat/spdy/SpdyConnection.java,handleFrame,564-564,[                int errCode = inFrame.read32();],,
MALICIOUS_CODE,MS_FINAL_PKGPROTECT,org/apache/tomcat/spdy/SpdyConnection.java,,72-72,[    public static String[] TYPES = { "SYN_STREAM", "SYN_REPLY", "RST_STREAM",],,
STYLE,UCF_USELESS_CONTROL_FLOW,org/apache/tomcat/spdy/SpdyConnection.java,_drain,217-217,[                    if (goAway < out.streamId) {],,
I18N,DM_DEFAULT_ENCODING,org/apache/tomcat/spdy/SpdyContext.java,<clinit>,42-42,[        SPDY_NPN = "spdy/2".getBytes();],,
MALICIOUS_CODE,MS_MUTABLE_ARRAY,org/apache/tomcat/spdy/SpdyContext.java,,43-43,[        SPDY_NPN_OUT = new byte[SPDY_NPN.length + 2];],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/spdy/SpdyContext.java,,42-42,[        SPDY_NPN = "spdy/2".getBytes();],,
STYLE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,org/apache/tomcat/spdy/SpdyStream.java,run,252-252,[            spdy.spdyContext.handler.onStream(spdy, this);],,
STYLE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,org/apache/tomcat/spdy/SpdyContext.java,getConnection,195-195,[        return netSupport.getConnection(host, port);],,
STYLE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,org/apache/tomcat/spdy/SpdyContext.java,listen,199-199,[        netSupport.listen(port, cert, key);],,
STYLE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,org/apache/tomcat/spdy/SpdyContext.java,stop,206-206,[        netSupport.stop();],,
I18N,DM_DEFAULT_ENCODING,org/apache/tomcat/spdy/SpdyFrame.java,<clinit>,23-23,[    public static final byte[] STATUS = "status".getBytes();],,<clinit>,25-25,[    public static final byte[] VERSION = "version".getBytes();],,<clinit>,27-27,[    public static final byte[] HTTP11 = "HTTP/1.1".getBytes();],,<clinit>,29-29,[    public static final byte[] OK200 = "200 OK".getBytes();],,
I18N,DM_DEFAULT_ENCODING,org/apache/tomcat/spdy/SpdyFrame.java,addHeader,247-247,[        byte[] nameB = name.getBytes();],,addHeader,249-249,[        nameB = value.getBytes();],,
I18N,DM_DEFAULT_ENCODING,org/apache/tomcat/spdy/SpdyFrame.java,addHeader,255-255,[        nameB = value.getBytes();],,
MALICIOUS_CODE,MS_MUTABLE_ARRAY,org/apache/tomcat/spdy/SpdyFrame.java,,27-27,[    public static final byte[] HTTP11 = "HTTP/1.1".getBytes();],,
MALICIOUS_CODE,MS_MUTABLE_ARRAY,org/apache/tomcat/spdy/SpdyFrame.java,,29-29,[    public static final byte[] OK200 = "200 OK".getBytes();],,
MALICIOUS_CODE,MS_MUTABLE_ARRAY,org/apache/tomcat/spdy/SpdyFrame.java,,23-23,[    public static final byte[] STATUS = "status".getBytes();],,
MALICIOUS_CODE,MS_MUTABLE_ARRAY,org/apache/tomcat/spdy/SpdyFrame.java,,25-25,[    public static final byte[] VERSION = "version".getBytes();],,
STYLE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,org/apache/tomcat/spdy/SpdyStream.java,getHeaders,175-175,[        int nvCount = f.nvCount;],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/tomcat/util/IntrospectionUtils.java,convert,408-408,[                result = new Integer(object);],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/tomcat/util/IntrospectionUtils.java,setProperty,83-83,[                            params[0] = new Integer(value);],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/tomcat/util/IntrospectionUtils.java,setProperty,91-91,[                                params[0] = new Long(value);],,
STYLE,NP_NULL_ON_SOME_PATH_MIGHT_BE_INFEASIBLE,org/apache/tomcat/util/IntrospectionUtils.java,findMethod,323-323,[                if (params.length != methodParams.length)],,findMethod,320-320,[                if (params == null)],,findMethod,321-321,[                    if (methodParams == null || methodParams.length == 0)],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/tomcat/util/IntrospectionUtils.java,findMethod,317-317,[                if (methodParams == null)],,findMethod,321-321,[                    if (methodParams == null || methodParams.length == 0)],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/tomcat/util/IntrospectionUtils.java,findMethods,312-312,[        if (methods == null)],,
MALICIOUS_CODE,MS_MUTABLE_ARRAY,org/apache/tomcat/util/bcel/Constants.java,,86-86,[  public static final String[] CONSTANT_NAMES = {],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/tomcat/util/bcel/classfile/Annotations.java,getAnnotationEntries,51-51,[        return annotation_table;],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/tomcat/util/bcel/classfile/ArrayElementValue.java,getElementValuesArray,53-53,[        return evalues;],,
BAD_PRACTICE,SE_BAD_FIELD,org/apache/tomcat/util/bcel/classfile/ConstantPool.java,,48-109,[    ConstantPool(DataInput file) throws IOException, ClassFormatException {,         int constant_pool_count = file.readUnsignedShort();,         constant_pool = new Constant[constant_pool_count];,         /* constant_pool[0] is unused by the compiler and may be used freely,          * by the implementation.,          */,         for (int i = 1; i < constant_pool_count; i++) {,             constant_pool[i] = Constant.readConstant(file);,             /* Quote from the JVM specification:,              * "All eight byte constants take up two spots in the constant pool.,              * If this is the n'th byte in the constant pool, then the next item,              * will be numbered n+2",              *,              * Thus we have to increment the index counter.,              */,             if (constant_pool[i] != null) {,                 byte tag = constant_pool[i].getTag();,                 if ((tag == Constants.CONSTANT_Double) || (tag == Constants.CONSTANT_Long)) {,                     i++;,                 },             },         },     }, , ,     /**,      * Get constant from constant pool.,      *,      * @param  index Index in constant pool,      * @return Constant value,      * @see    Constant,      */,     public Constant getConstant( int index ) {,         if (index >= constant_pool.length || index < 0) {,             throw new ClassFormatException("Invalid constant pool reference: " + index,                     + ". Constant pool size is: " + constant_pool.length);,         },         return constant_pool[index];,     }, , ,     /**,      * Get constant from constant pool and check whether it has the,      * expected type.,      *,      * @param  index Index in constant pool,      * @param  tag Tag of expected constant, i.e., its type,      * @return Constant value,      * @see    Constant,      * @throws  ClassFormatException,      */,     public Constant getConstant( int index, byte tag ) throws ClassFormatException {,         Constant c;,         c = getConstant(index);,         if (c == null) {,             throw new ClassFormatException("Constant pool at index " + index + " is null.");,         },         if (c.getTag() != tag) {,             throw new ClassFormatException("Expected class `" + Constants.CONSTANT_NAMES[tag],                     + "' at index " + index + " and got " + c);,         },         return c;],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/tomcat/util/bcel/classfile/JavaClass.java,getInterfaceNames,90-90,[        return interface_names;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/tomcat/util/bcel/classfile/JavaClass.java,getAnnotationEntries,75-75,[        return null;],,
BAD_PRACTICE,CN_IDIOM,org/apache/tomcat/util/buf/ByteChunk.java,,103-790,[    public static final Charset DEFAULT_CHARSET = StandardCharsets.ISO_8859_1;, ,     private int hashCode=0;,     // did we compute the hashcode ?,     private boolean hasHashCode = false;, ,     // byte[],     private byte[] buff;, ,     private int start=0;,     private int end;, ,     private Charset charset;, ,     private boolean isSet=false; // XXX, ,     // How much can it grow, when data is added,     private int limit=-1;, ,     private ByteInputChannel in = null;,     private ByteOutputChannel out = null;, ,     /**,      * Creates a new, uninitialized ByteChunk object.,      */,     public ByteChunk() {,         // NO-OP,     }, ,     public ByteChunk( int initial ) {,         allocate( initial, -1 );,     }, ,     public boolean isNull() {,         return ! isSet; // buff==null;,     }, ,     /**,      * Resets the message buff to an uninitialized state.,      */,     public void recycle() {,         //        buff = null;,         charset=null;,         start=0;,         end=0;,         isSet=false;,         hasHashCode = false;,     }, ,     public void reset() {,         buff=null;,     }, ,     // -------------------- Setup --------------------, ,     public void allocate( int initial, int limit  ) {,         if( buff==null || buff.length < initial ) {,             buff=new byte[initial];,         },         this.limit=limit;,         start=0;,         end=0;,         isSet=true;,         hasHashCode = false;,     }, ,     /**,      * Sets the message bytes to the specified subarray of bytes.,      *,      * @param b the ascii bytes,      * @param off the start offset of the bytes,      * @param len the length of the bytes,      */,     public void setBytes(byte[] b, int off, int len) {,         buff = b;,         start = off;,         end = start+ len;,         isSet=true;,         hasHashCode = false;,     }, ,     public void setCharset(Charset charset) {,         this.charset = charset;,     }, ,     public Charset getCharset() {,         if (charset == null) {,             charset = DEFAULT_CHARSET;,         },         return charset;,     }, ,     /**,      * Returns the message bytes.,      */,     public byte[] getBytes() {,         return getBuffer();,     }, ,     /**,      * Returns the message bytes.,      */,     public byte[] getBuffer() {,         return buff;,     }, ,     /**,      * Returns the start offset of the bytes.,      * For output this is the end of the buffer.,      */,     public int getStart() {,         return start;,     }, ,     public int getOffset() {,         return start;,     }, ,     public void setOffset(int off) {,         if (end < off ) {,             end=off;,         },         start=off;,     }, ,     /**,      * Returns the length of the bytes.,      * XXX need to clean this up,      */,     public int getLength() {,         return end-start;,     }, ,     /** Maximum amount of data in this buffer.,      *,      *  If -1 or not set, the buffer will grow indefinitely.,      *  Can be smaller than the current buffer size ( which will not shrink ).,      *  When the limit is reached, the buffer will be flushed ( if out is set ),      *  or throw exception.,      */,     public void setLimit(int limit) {,         this.limit=limit;,     }, ,     public int getLimit() {,         return limit;,     }, ,     /**,      * When the buffer is empty, read the data from the input channel.,      */,     public void setByteInputChannel(ByteInputChannel in) {,         this.in = in;,     }, ,     /** When the buffer is full, write the data to the output channel.,      *         Also used when large amount of data is appended.,      *,      *  If not set, the buffer will grow to the limit.,      */,     public void setByteOutputChannel(ByteOutputChannel out) {,         this.out=out;,     }, ,     public int getEnd() {,         return end;,     }, ,     public void setEnd( int i ) {,         end=i;,     }, ,     // -------------------- Adding data to the buffer --------------------,     public void append( byte b ),         throws IOException,     {,         makeSpace( 1 );, ,         // couldn't make space,         if( limit >0 && end >= limit ) {,             flushBuffer();,         },         buff[end++]=b;,     }, ,     public void append( ByteChunk src ),         throws IOException,     {,         append( src.getBytes(), src.getStart(), src.getLength());,     }, ,     /** Add data to the buffer,      */,     public void append( byte src[], int off, int len ),         throws IOException,     {,         // will grow, up to limit,         makeSpace( len );, ,         // if we don't have limit: makeSpace can grow as it wants,         if( limit < 0 ) {,             // assert: makeSpace made enough space,             System.arraycopy( src, off, buff, end, len );,             end+=len;,             return;,         }, ,         // Optimize on a common case.,         // If the buffer is empty and the source is going to fill up all the,         // space in buffer, may as well write it directly to the output,,         // and avoid an extra copy,         if ( len == limit && end == start && out != null ) {,             out.realWriteBytes( src, off, len );,             return;,         },         // if we have limit and we're below,         if( len <= limit - end ) {,             // makeSpace will grow the buffer to the limit,,             // so we have space,             System.arraycopy( src, off, buff, end, len );,             end+=len;,             return;,         }, ,         // need more space than we can afford, need to flush,         // buffer, ,         // the buffer is already at ( or bigger than ) limit, ,         // We chunk the data into slices fitting in the buffer limit, although,         // if the data is written directly if it doesn't fit, ,         int avail=limit-end;,         System.arraycopy(src, off, buff, end, avail);,         end += avail;, ,         flushBuffer();, ,         int remain = len - avail;, ,         while (remain > (limit - end)) {,             out.realWriteBytes( src, (off + len) - remain, limit - end );,             remain = remain - (limit - end);,         }, ,         System.arraycopy(src, (off + len) - remain, buff, end, remain);,         end += remain;, ,     }, , ,     // -------------------- Removing data from the buffer --------------------, ,     public int substract(),         throws IOException {, ,         if ((end - start) == 0) {,             if (in == null) {,                 return -1;,             },             int n = in.realReadBytes( buff, 0, buff.length );,             if (n < 0) {,                 return -1;,             },         }, ,         return (buff[start++] & 0xFF);, ,     }, ,     public byte substractB(),         throws IOException {, ,         if ((end - start) == 0) {,             if (in == null),                 return -1;,             int n = in.realReadBytes( buff, 0, buff.length );,             if (n < 0),                 return -1;,         }, ,         return (buff[start++]);, ,     }, ,     public int substract( byte src[], int off, int len ),         throws IOException {, ,         if ((end - start) == 0) {,             if (in == null) {,                 return -1;,             },             int n = in.realReadBytes( buff, 0, buff.length );,             if (n < 0) {,                 return -1;,             },         }, ,         int n = len;,         if (len > getLength()) {,             n = getLength();,         },         System.arraycopy(buff, start, src, off, n);,         start += n;,         return n;, ,     }, , ,     /**,      * Send the buffer to the sink. Called by append() when the limit is,      * reached. You can also call it explicitly to force the data to be written.,      *,      * @throws IOException,      */,     public void flushBuffer(),         throws IOException,     {,         //assert out!=null,         if( out==null ) {,             throw new IOException( "Buffer overflow, no sink " + limit + " " +,                                    buff.length  );,         },         out.realWriteBytes( buff, start, end-start );,         end=start;,     }, ,     /**,      * Make space for len chars. If len is small, allocate a reserve space too.,      * Never grow bigger than limit.,      */,     public void makeSpace(int count) {,         byte[] tmp = null;, ,         int newSize;,         int desiredSize=end + count;, ,         // Can't grow above the limit,         if( limit > 0 &&,             desiredSize > limit) {,             desiredSize=limit;,         }, ,         if( buff==null ) {,             if( desiredSize < 256 ),              {,                 desiredSize=256; // take a minimum,             },             buff=new byte[desiredSize];,         }, ,         // limit < buf.length ( the buffer is already big ),         // or we already have space XXX,         if( desiredSize <= buff.length ) {,             return;,         },         // grow in larger chunks,         if( desiredSize < 2 * buff.length ) {,             newSize= buff.length * 2;,             if( limit >0 &&,                 newSize > limit ) {,                 newSize=limit;,             },             tmp=new byte[newSize];,         } else {,             newSize= buff.length * 2 + count ;,             if( limit > 0 &&,                 newSize > limit ) {,                 newSize=limit;,             },             tmp=new byte[newSize];,         }, ,         System.arraycopy(buff, start, tmp, 0, end-start);,         buff = tmp;,         tmp = null;,         end=end-start;,         start=0;,     }, ,     // -------------------- Conversion and getters --------------------, ,     @Override,     public String toString() {,         if (null == buff) {,             return null;,         } else if (end-start == 0) {,             return "";,         },         return StringCache.toString(this);,     }, ,     public String toStringInternal() {,         if (charset == null) {,             charset = DEFAULT_CHARSET;,         },         // new String(byte[], int, int, Charset) takes a defensive copy of the,         // entire byte array. This is expensive if only a small subset of the,         // bytes will be used. The code below is from Apache Harmony.,         CharBuffer cb;,         cb = charset.decode(ByteBuffer.wrap(buff, start, end-start));,         return new String(cb.array(), cb.arrayOffset(), cb.length());,     }, ,     public long getLong() {,         return Ascii.parseLong(buff, start,end-start);,     }, , ,     // -------------------- equals --------------------, ,     @Override,     public boolean equals(Object obj) {,         if (obj instanceof ByteChunk) {,             return equals((ByteChunk) obj);,         },         return false;,     }, ,     /**,      * Compares the message bytes to the specified String object.,      * @param s the String to compare,      * @return true if the comparison succeeded, false otherwise,      */,     public boolean equals(String s) {,         // XXX ENCODING - this only works if encoding is UTF8-compat,         // ( ok for tomcat, where we compare ascii - header names, etc )!!!, ,         byte[] b = buff;,         int blen = end-start;,         if (b == null || blen != s.length()) {,             return false;,         },         int boff = start;,         for (int i = 0; i < blen; i++) {,             if (b[boff++] != s.charAt(i)) {,                 return false;,             },         },         return true;,     }, ,     /**,      * Compares the message bytes to the specified String object.,      * @param s the String to compare,      * @return true if the comparison succeeded, false otherwise,      */,     public boolean equalsIgnoreCase(String s) {,         byte[] b = buff;,         int blen = end-start;,         if (b == null || blen != s.length()) {,             return false;,         },         int boff = start;,         for (int i = 0; i < blen; i++) {,             if (Ascii.toLower(b[boff++]) != Ascii.toLower(s.charAt(i))) {,                 return false;,             },         },         return true;,     }, ,     public boolean equals( ByteChunk bb ) {,         return equals( bb.getBytes(), bb.getStart(), bb.getLength());,     }, ,     public boolean equals( byte b2[], int off2, int len2) {,         byte b1[]=buff;,         if( b1==null && b2==null ) {,             return true;,         }, ,         int len=end-start;,         if ( len2 != len || b1==null || b2==null ) {,             return false;,         }, ,         int off1 = start;, ,         while ( len-- > 0) {,             if (b1[off1++] != b2[off2++]) {,                 return false;,             },         },         return true;,     }, ,     public boolean equals( CharChunk cc ) {,         return equals( cc.getChars(), cc.getStart(), cc.getLength());,     }, ,     public boolean equals( char c2[], int off2, int len2) {,         // XXX works only for enc compatible with ASCII/UTF !!!,         byte b1[]=buff;,         if( c2==null && b1==null ) {,             return true;,         }, ,         if (b1== null || c2==null || end-start != len2 ) {,             return false;,         },         int off1 = start;,         int len=end-start;, ,         while ( len-- > 0) {,             if ( (char)b1[off1++] != c2[off2++]) {,                 return false;,             },         },         return true;,     }, ,     /**,      * Returns true if the message bytes starts with the specified string.,      * @param s the string,      * @param pos The position,      */,     public boolean startsWithIgnoreCase(String s, int pos) {,         byte[] b = buff;,         int len = s.length();,         if (b == null || len+pos > end-start) {,             return false;,         },         int off = start+pos;,         for (int i = 0; i < len; i++) {,             if (Ascii.toLower( b[off++] ) != Ascii.toLower( s.charAt(i))) {,                 return false;,             },         },         return true;,     }, ,     public int indexOf( String src, int srcOff, int srcLen, int myOff ) {,         char first=src.charAt( srcOff );, ,         // Look for first char,         int srcEnd = srcOff + srcLen;, ,         mainLoop:,         for( int i=myOff+start; i <= (end - srcLen); i++ ) {,             if( buff[i] != first ) {,                 continue;,             },             // found first char, now look for a match,             int myPos=i+1;,             for( int srcPos=srcOff + 1; srcPos< srcEnd;) {,                 if( buff[myPos++] != src.charAt( srcPos++ )) {,                     continue mainLoop;,                 },             },             return i-start; // found it,         },         return -1;,     }, ,     // -------------------- Hash code  --------------------, ,     @Override,     public int hashCode() {,         if (hasHashCode) {,             return hashCode;,         },         int code = 0;, ,         code = hash();,         hashCode = code;,         hasHashCode = true;,         return code;,     }, ,     // normal hash.,     public int hash() {,         return hashBytes( buff, start, end-start);,     }, ,     private static int hashBytes( byte buff[], int start, int bytesLen ) {,         int max=start+bytesLen;,         byte bb[]=buff;,         int code=0;,         for (int i = start; i < max ; i++) {,             code = code * 37 + bb[i];,         },         return code;,     }, ,     /**,      * Returns the first instance of the given character in this ByteChunk,      * starting at the specified byte. If the character is not found, -1 is,      * returned.,      * <br/>,      * NOTE: This only works for characters in the range 0-127.,      *,      * @param c         The character,      * @param starting  The start position,      * @return          The position of the first instance of the character or,      *                      -1 if the character is not found.,      */,     public int indexOf(char c, int starting) {,         int ret = indexOf(buff, start + starting, end, c);,         return (ret >= start) ? ret - start : -1;,     }, ,     /**,      * Returns the first instance of the given character in the given byte array,      * between the specified start and end.,      * <br/>,      * NOTE: This only works for characters in the range 0-127.,      *,      * @param bytes The byte array to search,      * @param start The point to start searching from in the byte array,      * @param end   The point to stop searching in the byte array,      * @param c     The character to search for,      * @return      The position of the first instance of the character or -1,      *                  if the character is not found.,      */,     public static int indexOf(byte bytes[], int start, int end, char c) {,         int offset = start;, ,         while (offset < end) {,             byte b=bytes[offset];,             if (b == c) {,                 return offset;,             },             offset++;,         },         return -1;,     }, ,     /**,      * Returns the first instance of the given byte in the byte array between,      * the specified start and end.,      *,      * @param bytes The byte array to search,      * @param start The point to start searching from in the byte array,      * @param end   The point to stop searching in the byte array,      * @param b     The byte to search for,      * @return      The position of the first instance of the byte or -1 if the,      *                  byte is not found.,      */,     public static int findByte(byte bytes[], int start, int end, byte b) {,         int offset = start;,         while (offset < end) {,             if (bytes[offset] == b) {,                 return offset;,             },             offset++;,         },         return -1;,     }, ,     /**,      * Returns the first instance of any of the given bytes in the byte array,      * between the specified start and end.,      *,      * @param bytes The byte array to search,      * @param start The point to start searching from in the byte array,      * @param end   The point to stop searching in the byte array,      * @param b     The array of bytes to search for,      * @return      The position of the first instance of the byte or -1 if the,      *                  byte is not found.,      */,     public static int findBytes(byte bytes[], int start, int end, byte b[]) {,         int blen = b.length;,         int offset = start;,         while (offset < end) {,             for (int i = 0;  i < blen; i++) {,                 if (bytes[offset] == b[i]) {,                     return offset;,                 },             },             offset++;,         },         return -1;,     }, ,     /**,      * Convert specified String to a byte array. This ONLY WORKS for ascii, UTF,      * chars will be truncated.,      *,      * @param value to convert to byte array,      * @return the byte array value,      */,     public static final byte[] convertToBytes(String value) {,         byte[] result = new byte[value.length()];,         for (int i = 0; i < value.length(); i++) {,             result[i] = (byte) value.charAt(i);,         },         return result;],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/tomcat/util/buf/ByteChunk.java,getBuffer,206-206,[        return buff;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/tomcat/util/buf/ByteChunk.java,setBytes,177-177,[        buff = b;],,
BAD_PRACTICE,NP_TOSTRING_COULD_RETURN_NULL,org/apache/tomcat/util/buf/ByteChunk.java,toString,488-488,[            return null;],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/tomcat/util/buf/CharChunk.java,getBuffer,177-177,[        return buff;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/tomcat/util/buf/CharChunk.java,setChars,131-131,[        buff=c;],,
BAD_PRACTICE,NP_TOSTRING_COULD_RETURN_NULL,org/apache/tomcat/util/buf/CharChunk.java,toString,453-453,[            return null;],,
STYLE,IM_BAD_CHECK_FOR_ODD,org/apache/tomcat/util/buf/HexUtils.java,fromHexString,100-100,[        if (input.length() % 2 == 1) {],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/tomcat/util/buf/HexUtils.java,fromHexString,97-97,[            return null;],,
BAD_PRACTICE,CN_IDIOM,org/apache/tomcat/util/buf/MessageBytes.java,,36-521,[public final class MessageBytes implements Cloneable, Serializable {,     private static final long serialVersionUID = 1L;, ,     // primary type ( whatever is set as original value ),     private int type = T_NULL;, ,     public static final int T_NULL = 0;,     /** getType() is T_STR if the the object used to create the MessageBytes,         was a String */,     public static final int T_STR  = 1;,     /** getType() is T_STR if the the object used to create the MessageBytes,         was a byte[] */,     public static final int T_BYTES = 2;,     /** getType() is T_STR if the the object used to create the MessageBytes,         was a char[] */,     public static final int T_CHARS = 3;, ,     private int hashCode=0;,     // did we compute the hashcode ?,     private boolean hasHashCode=false;, ,     // Internal objects to represent array + offset, and specific methods,     private final ByteChunk byteC=new ByteChunk();,     private final CharChunk charC=new CharChunk();, ,     // String,     private String strValue;,     // true if a String value was computed. Probably not needed,,     // strValue!=null is the same,     private boolean hasStrValue=false;, ,     /**,      * Creates a new, uninitialized MessageBytes object.,      * Use static newInstance() in order to allow,      *   future hooks.,      */,     private MessageBytes() {,     }, ,     /** Construct a new MessageBytes instance,      */,     public static MessageBytes newInstance() {,         return factory.newInstance();,     }, ,     public boolean isNull() {,         // should we check also hasStrValue ???,         return byteC.isNull() && charC.isNull() && ! hasStrValue;,         // bytes==null && strValue==null;,     }, ,     /**,      * Resets the message bytes to an uninitialized (NULL) state.,      */,     public void recycle() {,         type=T_NULL;,         byteC.recycle();,         charC.recycle();, ,         strValue=null;, ,         hasStrValue=false;,         hasHashCode=false;,         hasLongValue=false;,     }, , ,     /**,      * Sets the content to the specified subarray of bytes.,      *,      * @param b the bytes,      * @param off the start offset of the bytes,      * @param len the length of the bytes,      */,     public void setBytes(byte[] b, int off, int len) {,         byteC.setBytes( b, off, len );,         type=T_BYTES;,         hasStrValue=false;,         hasHashCode=false;,         hasLongValue=false;,     }, ,     /**,      * Sets the content to be a char[],      *,      * @param c the bytes,      * @param off the start offset of the bytes,      * @param len the length of the bytes,      */,     public void setChars( char[] c, int off, int len ) {,         charC.setChars( c, off, len );,         type=T_CHARS;,         hasStrValue=false;,         hasHashCode=false;,         hasLongValue=false;,     }, ,     /**,      * Set the content to be a string,      */,     public void setString( String s ) {,         strValue=s;,         hasHashCode=false;,         hasLongValue=false;,         if (s == null) {,             hasStrValue=false;,             type=T_NULL;,         } else {,             hasStrValue=true;,             type=T_STR;,         },     }, ,     // -------------------- Conversion and getters --------------------, ,     /** Compute the string value,      */,     @Override,     public String toString() {,         if( hasStrValue ) {,             return strValue;,         }, ,         switch (type) {,         case T_CHARS:,             strValue=charC.toString();,             hasStrValue=true;,             return strValue;,         case T_BYTES:,             strValue=byteC.toString();,             hasStrValue=true;,             return strValue;,         },         return null;,     }, ,     //----------------------------------------,     /** Return the type of the original content. Can be,      *  T_STR, T_BYTES, T_CHARS or T_NULL,      */,     public int getType() {,         return type;,     }, ,     /**,      * Returns the byte chunk, representing the byte[] and offset/length.,      * Valid only if T_BYTES or after a conversion was made.,      */,     public ByteChunk getByteChunk() {,         return byteC;,     }, ,     /**,      * Returns the char chunk, representing the char[] and offset/length.,      * Valid only if T_CHARS or after a conversion was made.,      */,     public CharChunk getCharChunk() {,         return charC;,     }, ,     /**,      * Returns the string value.,      * Valid only if T_STR or after a conversion was made.,      */,     public String getString() {,         return strValue;,     }, ,     /** Do a char->byte conversion.,      */,     public void toBytes() {,         if( ! byteC.isNull() ) {,             type=T_BYTES;,             return;,         },         toString();,         type=T_BYTES;,         byte bb[] = strValue.getBytes(StandardCharsets.ISO_8859_1);,         byteC.setBytes(bb, 0, bb.length);,     }, ,     /** Convert to char[] and fill the CharChunk.,      *  XXX Not optimized - it converts to String first.,      */,     public void toChars() {,         if( ! charC.isNull() ) {,             type=T_CHARS;,             return;,         },         // inefficient,         toString();,         type=T_CHARS;,         char cc[]=strValue.toCharArray();,         charC.setChars(cc, 0, cc.length);,     }, , ,     /**,      * Returns the length of the original buffer.,      * Note that the length in bytes may be different from the length,      * in chars.,      */,     public int getLength() {,         if(type==T_BYTES) {,             return byteC.getLength();,         },         if(type==T_CHARS) {,             return charC.getLength();,         },         if(type==T_STR) {,             return strValue.length();,         },         toString();,         if( strValue==null ) {,             return 0;,         },         return strValue.length();,     }, ,     // -------------------- equals --------------------, ,     /**,      * Compares the message bytes to the specified String object.,      * @param s the String to compare,      * @return true if the comparison succeeded, false otherwise,      */,     public boolean equals(String s) {,         switch (type) {,         case T_STR:,             if (strValue == null) {,                 return s == null;,             },             return strValue.equals( s );,         case T_CHARS:,             return charC.equals( s );,         case T_BYTES:,             return byteC.equals( s );,         default:,             return false;,         },     }, ,     /**,      * Compares the message bytes to the specified String object.,      * @param s the String to compare,      * @return true if the comparison succeeded, false otherwise,      */,     public boolean equalsIgnoreCase(String s) {,         switch (type) {,         case T_STR:,             if (strValue == null) {,                 return s == null;,             },             return strValue.equalsIgnoreCase( s );,         case T_CHARS:,             return charC.equalsIgnoreCase( s );,         case T_BYTES:,             return byteC.equalsIgnoreCase( s );,         default:,             return false;,         },     }, ,     @Override,     public boolean equals(Object obj) {,         if (obj instanceof MessageBytes) {,             return equals((MessageBytes) obj);,         },         return false;,     }, ,     public boolean equals(MessageBytes mb) {,         switch (type) {,         case T_STR:,             return mb.equals( strValue );,         }, ,         if( mb.type != T_CHARS &&,             mb.type!= T_BYTES ) {,             // it's a string or int/date string value,             return equals( mb.toString() );,         }, ,         // mb is either CHARS or BYTES.,         // this is either CHARS or BYTES,         // Deal with the 4 cases ( in fact 3, one is symmetric), ,         if( mb.type == T_CHARS && type==T_CHARS ) {,             return charC.equals( mb.charC );,         },         if( mb.type==T_BYTES && type== T_BYTES ) {,             return byteC.equals( mb.byteC );,         },         if( mb.type== T_CHARS && type== T_BYTES ) {,             return byteC.equals( mb.charC );,         },         if( mb.type== T_BYTES && type== T_CHARS ) {,             return mb.byteC.equals( charC );,         },         // can't happen,         return true;,     }, , ,     /**,      * Returns true if the message bytes starts with the specified string.,      * @param s the string,      * @param pos The start position,      */,     public boolean startsWithIgnoreCase(String s, int pos) {,         switch (type) {,         case T_STR:,             if( strValue==null ) {,                 return false;,             },             if( strValue.length() < pos + s.length() ) {,                 return false;,             }, ,             for( int i=0; i<s.length(); i++ ) {,                 if( Ascii.toLower( s.charAt( i ) ) !=,                     Ascii.toLower( strValue.charAt( pos + i ))) {,                     return false;,                 },             },             return true;,         case T_CHARS:,             return charC.startsWithIgnoreCase( s, pos );,         case T_BYTES:,             return byteC.startsWithIgnoreCase( s, pos );,         default:,             return false;,         },     }, , ,     // -------------------- Hash code  --------------------,     @Override,     public  int hashCode() {,         if( hasHashCode ) {,             return hashCode;,         },         int code = 0;, ,         code=hash();,         hashCode=code;,         hasHashCode=true;,         return code;,     }, ,     // normal hash.,     private int hash() {,         int code=0;,         switch (type) {,         case T_STR:,             // We need to use the same hash function,             for (int i = 0; i < strValue.length(); i++) {,                 code = code * 37 + strValue.charAt( i );,             },             return code;,         case T_CHARS:,             return charC.hash();,         case T_BYTES:,             return byteC.hash();,         default:,             return 0;,         },     }, ,     // Inefficient initial implementation. Will be replaced on the next,     // round of tune-up,     public int indexOf(String s, int starting) {,         toString();,         return strValue.indexOf( s, starting );,     }, ,     // Inefficient initial implementation. Will be replaced on the next,     // round of tune-up,     public int indexOf(String s) {,         return indexOf( s, 0 );,     }, ,     public int indexOfIgnoreCase(String s, int starting) {,         toString();,         String upper=strValue.toUpperCase(Locale.ENGLISH);,         String sU=s.toUpperCase(Locale.ENGLISH);,         return upper.indexOf( sU, starting );,     }, ,     /** Copy the src into this MessageBytes, allocating more space if,      *  needed,      */,     public void duplicate( MessageBytes src ) throws IOException,     {,         switch( src.getType() ) {,         case MessageBytes.T_BYTES:,             type=T_BYTES;,             ByteChunk bc=src.getByteChunk();,             byteC.allocate( 2 * bc.getLength(), -1 );,             byteC.append( bc );,             break;,         case MessageBytes.T_CHARS:,             type=T_CHARS;,             CharChunk cc=src.getCharChunk();,             charC.allocate( 2 * cc.getLength(), -1 );,             charC.append( cc );,             break;,         case MessageBytes.T_STR:,             type=T_STR;,             String sc=src.getString();,             this.setString( sc );,             break;,         },     }, ,     // -------------------- Deprecated code --------------------,     // efficient long,     // XXX used only for headers - shouldn't be stored here.,     private long longValue;,     private boolean hasLongValue=false;, ,     /** Set the buffer to the representation of an long,      */,     public void setLong(long l) {,         byteC.allocate(32, 64);,         long current = l;,         byte[] buf = byteC.getBuffer();,         int start = 0;,         int end = 0;,         if (l == 0) {,             buf[end++] = (byte) '0';,         },         if (l < 0) {,             current = -l;,             buf[end++] = (byte) '-';,         },         while (current > 0) {,             int digit = (int) (current % 10);,             current = current / 10;,             buf[end++] = HexUtils.getHex(digit);,         },         byteC.setOffset(0);,         byteC.setEnd(end);,         // Inverting buffer,         end--;,         if (l < 0) {,             start++;,         },         while (end > start) {,             byte temp = buf[start];,             buf[start] = buf[end];,             buf[end] = temp;,             start++;,             end--;,         },         longValue=l;,         hasStrValue=false;,         hasHashCode=false;,         hasLongValue=true;,         type=T_BYTES;,     }, ,     // Used for headers conversion,     /** Convert the buffer to an long, cache the value,      */,     public long getLong() {,         if( hasLongValue ) {,             return longValue;,         }, ,         switch (type) {,         case T_BYTES:,             longValue=byteC.getLong();,             break;,         default:,             longValue=Long.parseLong(toString());,         }, ,         hasLongValue=true;,         return longValue;, ,      }, ,     // -------------------- Future may be different --------------------, ,     private static final MessageBytesFactory factory=new MessageBytesFactory();],,
BAD_PRACTICE,NP_TOSTRING_COULD_RETURN_NULL,org/apache/tomcat/util/buf/MessageBytes.java,toString,169-169,[        return null;],,
STYLE,SF_SWITCH_NO_DEFAULT,org/apache/tomcat/util/buf/MessageBytes.java,duplicate,430-446,[        switch( src.getType() ) {,         case MessageBytes.T_BYTES:,             type=T_BYTES;,             ByteChunk bc=src.getByteChunk();,             byteC.allocate( 2 * bc.getLength(), -1 );,             byteC.append( bc );,             break;,         case MessageBytes.T_CHARS:,             type=T_CHARS;,             CharChunk cc=src.getCharChunk();,             charC.allocate( 2 * cc.getLength(), -1 );,             charC.append( cc );,             break;,         case MessageBytes.T_STR:,             type=T_STR;,             String sc=src.getString();,             this.setString( sc );],,
MALICIOUS_CODE,MS_MUTABLE_COLLECTION_PKGPROTECT,org/apache/tomcat/util/buf/StringCache.java,,67-67,[    protected static final HashMap<ByteEntry,int[]> bcStats =],,
MALICIOUS_CODE,MS_MUTABLE_COLLECTION_PKGPROTECT,org/apache/tomcat/util/buf/StringCache.java,,86-86,[    protected static final HashMap<CharEntry,int[]> ccStats =],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/util/buf/StringCache.java,,105-105,[    protected static int accessCount = 0;],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/util/buf/StringCache.java,,80-80,[    protected static ByteEntry[] bcCache = null;],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/util/buf/StringCache.java,,74-74,[    protected static int bcCount = 0;],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/util/buf/StringCache.java,,43-43,[    protected static boolean byteEnabled = ("true".equals(System.getProperty(],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/util/buf/StringCache.java,,55-55,[    protected static int cacheSize = Integer.parseInt(System.getProperty(],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/util/buf/StringCache.java,,99-99,[    protected static CharEntry[] ccCache = null;],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/util/buf/StringCache.java,,93-93,[    protected static int ccCount = 0;],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/util/buf/StringCache.java,,47-47,[    protected static boolean charEnabled = ("true".equals(System.getProperty(],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/util/buf/StringCache.java,,111-111,[    protected static int hitCount = 0;],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/util/buf/StringCache.java,,51-51,[    protected static int trainThreshold = Integer.parseInt(System.getProperty(],,
STYLE,ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD,org/apache/tomcat/util/buf/StringCache.java,reset,202-202,[        accessCount = 0;],,
STYLE,ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD,org/apache/tomcat/util/buf/StringCache.java,reset,201-201,[        hitCount = 0;],,
STYLE,ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD,org/apache/tomcat/util/buf/StringCache.java,setByteEnabled,145-145,[        StringCache.byteEnabled = byteEnabled;],,
STYLE,ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD,org/apache/tomcat/util/buf/StringCache.java,setCacheSize,129-129,[        StringCache.cacheSize = cacheSize;],,
STYLE,ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD,org/apache/tomcat/util/buf/StringCache.java,setCharEnabled,161-161,[        StringCache.charEnabled = charEnabled;],,
STYLE,ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD,org/apache/tomcat/util/buf/StringCache.java,setTrainThreshold,177-177,[        StringCache.trainThreshold = trainThreshold;],,
STYLE,ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD,org/apache/tomcat/util/buf/StringCache.java,reset,204-204,[            bcCache = null;],,
STYLE,ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD,org/apache/tomcat/util/buf/StringCache.java,reset,205-205,[            bcCount = 0;],,
STYLE,ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD,org/apache/tomcat/util/buf/StringCache.java,reset,208-208,[            ccCache = null;],,
STYLE,ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD,org/apache/tomcat/util/buf/StringCache.java,reset,209-209,[            ccCount = 0;],,
I18N,DM_DEFAULT_ENCODING,org/apache/tomcat/util/buf/UDecoder.java,URLDecode,388-388,[        return new String(bytes, 0, ox);],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/tomcat/util/buf/UDecoder.java,convert,195-195,[            if( strValue==null ) {],,
STYLE,SF_SWITCH_NO_DEFAULT,org/apache/tomcat/util/buf/UDecoder.java,convert,192-210,[        switch (mb.getType()) {,         case MessageBytes.T_STR:,             String strValue=mb.toString();,             if( strValue==null ) {,                 return;,             },             try {,                 mb.setString( convert( strValue, query ));,             } catch (RuntimeException ex) {,                 throw new DecodeException(ex.getMessage());,             },             break;,         case MessageBytes.T_CHARS:,             CharChunk charC=mb.getCharChunk();,             convert( charC, query );,             break;,         case MessageBytes.T_BYTES:,             ByteChunk bytesC=mb.getByteChunk();,             convert( bytesC, query );],,
PERFORMANCE,SS_SHOULD_BE_STATIC,org/apache/tomcat/util/buf/UEncoder.java,,43-43,[    private final String ENCODING = "UTF8";],,
CORRECTNESS,UWF_UNWRITTEN_FIELD,org/apache/tomcat/util/codec/binary/BaseNCodec.java,,103-103,[                    ibitWorkArea, lbitWorkArea, modulus, pos, readPos);],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/tomcat/util/codec/binary/StringUtils.java,getBytes,45-45,[            return null;],,
BAD_PRACTICE,IT_NO_SUCH_ELEMENT,org/apache/tomcat/util/collections/ManagedConcurrentWeakHashMap.java,next,243-243,[                        return new Map.Entry<K, V>() {],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/tomcat/util/descriptor/LocalResolver.java,resolveEntity,91-91,[            throw new FileNotFoundException(sm.getString("localResolver.unresolvedEntity",],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/tomcat/util/descriptor/tld/ImplicitTldRuleSet.java,,39-45,[        digester.addRule(PREFIX, new Rule() {,             // for TLD 2.0 and later, jsp-version is set by version attribute,             @Override,             public void begin(String namespace, String name, Attributes attributes) {,                 TaglibXml taglibXml = (TaglibXml) digester.peek();,                 taglibXml.setJspVersion(attributes.getValue("version"));,             }],,
PERFORMANCE,DMI_BLOCKING_METHODS_ON_URL,org/apache/tomcat/util/descriptor/tld/TldResourcePath.java,equals,149-149,[        return url.equals(other.url) &&],,
PERFORMANCE,DMI_BLOCKING_METHODS_ON_URL,org/apache/tomcat/util/descriptor/tld/TldResourcePath.java,hashCode,156-156,[        int result = url.hashCode();],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/tomcat/util/descriptor/tld/TldRuleSet.java,,47-53,[        digester.addRule(PREFIX, new Rule() {,             // for TLD 2.0 and later, jsp-version is set by version attribute,             @Override,             public void begin(String namespace, String name, Attributes attributes) {,                 TaglibXml taglibXml = (TaglibXml) digester.peek();,                 taglibXml.setJspVersion(attributes.getValue("version"));,             }],,
STYLE,SF_SWITCH_NO_DEFAULT,org/apache/tomcat/util/descriptor/tld/TldRuleSet.java,setScope,324-332,[            switch (scopeName) {,                 case "NESTED":,                     scope = VariableInfo.NESTED;,                     break;,                 case "AT_BEGIN":,                     scope = VariableInfo.AT_BEGIN;,                     break;,                 case "AT_END":,                     scope = VariableInfo.AT_END;],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/tomcat/util/descriptor/web/ContextService.java,getServiceqname,133-133,[        return (this.serviceqname);],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/tomcat/util/descriptor/web/ContextService.java,setServiceqname,149-149,[        this.serviceqname = serviceqname;],,
BAD_PRACTICE,BIT_SIGNED_CHECK,org/apache/tomcat/util/descriptor/web/FilterMap.java,getDispatcherNames,176-176,[        if ((dispatcherMapping & FORWARD) > 0) {],,
BAD_PRACTICE,BIT_SIGNED_CHECK,org/apache/tomcat/util/descriptor/web/FilterMap.java,getDispatcherNames,179-179,[        if ((dispatcherMapping & INCLUDE) > 0) {],,
BAD_PRACTICE,BIT_SIGNED_CHECK,org/apache/tomcat/util/descriptor/web/FilterMap.java,getDispatcherNames,182-182,[        if ((dispatcherMapping & REQUEST) > 0) {],,
BAD_PRACTICE,BIT_SIGNED_CHECK,org/apache/tomcat/util/descriptor/web/FilterMap.java,getDispatcherNames,185-185,[        if ((dispatcherMapping & ERROR) > 0) {],,
BAD_PRACTICE,BIT_SIGNED_CHECK,org/apache/tomcat/util/descriptor/web/FilterMap.java,getDispatcherNames,188-188,[        if ((dispatcherMapping & ASYNC) > 0) {],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/tomcat/util/descriptor/web/FilterMap.java,getServletNames,80-80,[            return (this.servletNames);],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/tomcat/util/descriptor/web/FilterMap.java,getURLPatterns,125-125,[            return (this.urlPatterns);],,
BAD_PRACTICE,NM_CONFUSING,org/apache/tomcat/util/descriptor/web/FilterMap.java,addURLPattern,130-138,[        if ("*".equals(urlPattern)) {,             this.matchAllUrlPatterns = true;,         } else {,             String[] results = new String[urlPatterns.length + 1];,             System.arraycopy(urlPatterns, 0, results, 0, urlPatterns.length);,             results[urlPatterns.length] = UDecoder.URLDecode(urlPattern);,             urlPatterns = results;,         },     }],,addUrlPattern,78-79,[        this.urlPattern.add(urlPattern);,     }],,
PERFORMANCE,DM_STRING_TOSTRING,org/apache/tomcat/util/descriptor/web/JspPropertyGroupDescriptorImpl.java,getDefaultContentType,55-55,[            result = jspPropertyGroup.getDefaultContentType().toString();],,
PERFORMANCE,DM_STRING_TOSTRING,org/apache/tomcat/util/descriptor/web/JspPropertyGroupDescriptorImpl.java,getPageEncoding,128-128,[            result = jspPropertyGroup.getPageEncoding().toString();],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/tomcat/util/descriptor/web/SecurityCollection.java,findMethods,257-257,[        return (methods);],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/tomcat/util/descriptor/web/SecurityCollection.java,findOmittedMethods,269-269,[        return (omittedMethods);],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/tomcat/util/descriptor/web/SecurityCollection.java,findPatterns,297-297,[        return (patterns);],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/tomcat/util/descriptor/web/SecurityConstraint.java,findAuthRoles,314-314,[        return (authRoles);],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/tomcat/util/descriptor/web/SecurityConstraint.java,findCollections,345-345,[        return (collections);],,
CORRECTNESS,NP_NULL_ON_SOME_PATH,org/apache/tomcat/util/digester/CallMethodRule.java,end,362-362,[        Object paramValues[] = new Object[paramTypes.length];],,end,340-340,[        } else if (paramTypes != null && paramTypes.length != 0) {],,
STYLE,UC_USELESS_CONDITION,org/apache/tomcat/util/digester/CallMethodRule.java,end,353-353,[                paramTypes = new Class[1];],,end,352-352,[            if (paramTypes.length == 0) {],,
BAD_PRACTICE,ES_COMPARING_STRINGS_WITH_EQ,org/apache/tomcat/util/digester/Digester.java,updateBodyText,2009-2009,[        if (out == in)  {],,
BAD_PRACTICE,ES_COMPARING_STRINGS_WITH_EQ,org/apache/tomcat/util/digester/Digester.java,updateAttributes,1981-1981,[                if (value != newValue) {],,
MALICIOUS_CODE,MS_FINAL_PKGPROTECT,org/apache/tomcat/util/digester/Digester.java,,85-85,[    protected static IntrospectionUtils.PropertySource source[] =],,
CORRECTNESS,UWF_NULL_FIELD,org/apache/catalina/startup/CredentialHandlerRuleSet.java,,64-64,[        this.namespaceURI = null;],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/tomcat/util/http/FastHttpDateFormat.java,formatDate,133-133,[        Long longValue = new Long(value);],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/tomcat/util/http/FastHttpDateFormat.java,internalParseDate,197-197,[        return new Long(date.getTime());],,
STYLE,SF_SWITCH_FALLTHROUGH,org/apache/tomcat/util/http/LegacyCookieProcessor.java,processCookieHeader,312-316,[                                    message += sm.getString(,                                             "cookies.fallToDebug");,                                     //$FALL-THROUGH$,                                 case INFO:,                                     log.info(message);],,processCookieHeader,407-410,[                            message += sm.getString("cookies.fallToDebug");,                             //$FALL-THROUGH$,                         case INFO:,                             log.info(message);],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/tomcat/util/http/Parameters.java,getParameterValues,129-129,[            return null;],,
STYLE,SF_SWITCH_FALLTHROUGH,org/apache/tomcat/util/http/Parameters.java,processParameters,327-330,[                            message += sm.getString("parameters.fallToDebug");,                             //$FALL-THROUGH$,                         case INFO:,                             log.info(message);],,processParameters,396-400,[                                message += sm.getString(,                                         "parameters.maxCountFail.fallToDebug");,                                 //$FALL-THROUGH$,                             case INFO:,                                 log.info(message);],,processParameters,423-426,[                                    message += sm.getString("parameters.fallToDebug");,                                     //$FALL-THROUGH$,                                 case INFO:,                                     log.info(message);],,processParameters,453-456,[                        message += sm.getString("parameters.fallToDebug");,                         //$FALL-THROUGH$,                     case INFO:,                         log.info(message);],,
I18N,DM_DEFAULT_ENCODING,org/apache/tomcat/util/http/fileupload/ByteArrayOutputStream.java,toString,262-262,[        return new String(toByteArray());],,
EXPERIMENTAL,OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE,org/apache/tomcat/util/http/fileupload/DeferredFileOutputStream.java,thresholdReached,148-148,[        FileOutputStream fos = new FileOutputStream(outputFile);],,thresholdReached,149-149,[        memoryOutputStream.writeTo(fos);],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/tomcat/util/http/fileupload/DeferredFileOutputStream.java,getData,185-185,[        return null;],,
STYLE,BC_UNCONFIRMED_CAST_OF_RETURN_VALUE,org/apache/tomcat/util/http/fileupload/FileUploadBase.java,getItemIterator,259-259,[            throw (FileUploadException) e.getCause();],,
STYLE,BC_UNCONFIRMED_CAST_OF_RETURN_VALUE,org/apache/tomcat/util/http/fileupload/FileUploadBase.java,parseRequest,306-306,[            throw (FileUploadException) e.getCause();],,parseRequest,295-295,[                    throw (FileUploadException) e.getCause();],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/tomcat/util/http/fileupload/FileUploadBase.java,parseRequest,314-314,[                    } catch (Exception e) {],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/tomcat/util/http/fileupload/FileUploadBase.java,getBoundary,374-374,[            return null;],,
STYLE,BC_UNCONFIRMED_CAST_OF_RETURN_VALUE,org/apache/tomcat/util/http/fileupload/FileUploadBase.java,hasNext,961-961,[                throw (FileUploadException) e.getCause();],,
CORRECTNESS,UWF_UNWRITTEN_FIELD,org/apache/tomcat/util/http/fileupload/FileUploadBase.java,,701-701,[                if (opened) {],,
I18N,DM_DEFAULT_ENCODING,org/apache/tomcat/util/http/fileupload/MultipartStream.java,readHeaders,509-509,[                headers = baos.toString();],,readHeaders,512-512,[            headers = baos.toString();],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/util/http/fileupload/MultipartStream.java,,203-203,[    protected static final byte[] BOUNDARY_PREFIX = {CR, LF, DASH, DASH};],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/util/http/fileupload/MultipartStream.java,,192-192,[    protected static final byte[] FIELD_SEPARATOR = {CR, LF};],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/util/http/fileupload/MultipartStream.java,,186-186,[    protected static final byte[] HEADER_SEPARATOR = {CR, LF, CR, LF};],,
MALICIOUS_CODE,MS_PKGPROTECT,org/apache/tomcat/util/http/fileupload/MultipartStream.java,,198-198,[    protected static final byte[] STREAM_TERMINATOR = {DASH, DASH};],,
BAD_PRACTICE,SR_NOT_CHECKED,org/apache/tomcat/util/http/fileupload/MultipartStream.java,skip,895-895,[                    skip(av);],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/tomcat/util/http/fileupload/ParameterParser.java,parse,302-302,[        this.chars = charArray;],,
I18N,DM_DEFAULT_ENCODING,org/apache/tomcat/util/http/fileupload/disk/DiskFileItem.java,getString,343-343,[            return new String(rawdata);],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/tomcat/util/http/fileupload/disk/DiskFileItem.java,get,288-288,[            return cachedContent;],,
BAD_PRACTICE,RV_RETURN_VALUE_IGNORED_BAD_PRACTICE,org/apache/tomcat/util/http/fileupload/disk/DiskFileItem.java,delete,427-427,[            outputFile.delete();],,
BAD_PRACTICE,RV_RETURN_VALUE_IGNORED_BAD_PRACTICE,org/apache/tomcat/util/http/fileupload/disk/DiskFileItem.java,finalize,542-542,[            outputFile.delete();],,
I18N,DM_DEFAULT_ENCODING,org/apache/tomcat/util/http/fileupload/util/Streams.java,asString,142-142,[        return baos.toString();],,
I18N,DM_CONVERT_CASE,org/apache/tomcat/util/http/fileupload/util/mime/MimeUtility.java,decodeWord,217-217,[        String charset = word.substring(2, charsetPos).toLowerCase();],,
STYLE,SF_SWITCH_FALLTHROUGH,org/apache/tomcat/util/http/parser/Cookie.java,logInvalidHeader,584-587,[                    message += sm.getString("cookie.fallToDebug");,                     //$FALL-THROUGH$,                 case INFO:,                     log.info(message);],,
STYLE,SF_SWITCH_FALLTHROUGH,org/apache/tomcat/util/http/parser/Cookie.java,logInvalidVersion,609-612,[                    message += sm.getString("cookie.fallToDebug");,                     //$FALL-THROUGH$,                 case INFO:,                     log.info(message);],,
BAD_PRACTICE,SR_NOT_CHECKED,org/apache/tomcat/util/http/parser/HttpParser.java,readLhex,314-314,[            input.skip(-1);],,
BAD_PRACTICE,SR_NOT_CHECKED,org/apache/tomcat/util/http/parser/HttpParser.java,readQuotedToken,257-257,[            input.skip(-1);],,
BAD_PRACTICE,SR_NOT_CHECKED,org/apache/tomcat/util/http/parser/HttpParser.java,readToken,156-156,[        input.skip(-1);],,
BAD_PRACTICE,SR_NOT_CHECKED,org/apache/tomcat/util/http/parser/HttpParser.java,skipConstant,131-131,[                input.skip(-(i + 1));],,
STYLE,UC_USELESS_CONDITION,org/apache/tomcat/util/http/parser/HttpParser.java,<clinit>,46-46,[            } else if (i == '(' || i == ')' || i == '<' || i == '>'  || i == '@'  ||],,
I18N,DM_DEFAULT_ENCODING,org/apache/tomcat/util/log/CaptureLog.java,<init>,32-32,[        ps = new PrintStream(baos);],,
I18N,DM_DEFAULT_ENCODING,org/apache/tomcat/util/log/CaptureLog.java,getCapture,47-47,[        return baos.toString();],,
I18N,DM_DEFAULT_ENCODING,org/apache/tomcat/util/log/SystemLogHandler.java,<init>,44-44,[        super(wrapped);],,
STYLE,BC_UNCONFIRMED_CAST,org/apache/tomcat/util/modeler/AttributeInfo.java,createAttributeInfo,129-129,[        return (MBeanAttributeInfo)info;],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/tomcat/util/modeler/BaseModelMBean.java,getAttributes,234-234,[            } catch (Exception e) {],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/tomcat/util/modeler/BaseModelMBean.java,setAttributes,482-482,[            } catch (Exception e) {],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/tomcat/util/modeler/BaseModelMBean.java,setAttribute,439-439,[            sendAttributeChangeNotification(new Attribute( name, oldValue),],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/tomcat/util/modeler/BaseModelMBean.java,getNotificationInfo,809-809,[        if (current == null)],,
STYLE,REC_CATCH_EXCEPTION,org/apache/tomcat/util/modeler/BaseModelMBean.java,getAttributes,234-234,[            } catch (Exception e) {],,
STYLE,REC_CATCH_EXCEPTION,org/apache/tomcat/util/modeler/BaseModelMBean.java,setAttributes,482-482,[            } catch (Exception e) {],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/tomcat/util/modeler/ManagedBean.java,createMBean,299-299,[            } catch (Exception e) {],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/tomcat/util/modeler/ManagedBean.java,getNotifications,189-189,[        return this.notifications;],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/tomcat/util/modeler/ManagedBean.java,getGetter,433-433,[        if (getMethod == null)],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/tomcat/util/modeler/ManagedBean.java,getSetter,471-471,[        if (setMethod == null)],,
STYLE,BC_UNCONFIRMED_CAST,org/apache/tomcat/util/modeler/OperationInfo.java,createOperationInfo,159-159,[        return (MBeanOperationInfo)info;],,
STYLE,BC_UNCONFIRMED_CAST,org/apache/tomcat/util/modeler/ParameterInfo.java,createParameterInfo,54-54,[        return (MBeanParameterInfo)info;],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/tomcat/util/modeler/Registry.java,load,570-570,[            location=((Class<?>)source).getName();],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/tomcat/util/modeler/Registry.java,convertValue,523-523,[            objValue=new Integer( value );],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/tomcat/util/modeler/Registry.java,convertValue,526-526,[            objValue=new Long( value );],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/tomcat/util/modeler/Registry.java,getId,320-320,[        domainTable.put( name, new Integer( code ));],,
MT_CORRECTNESS,IS2_INCONSISTENT_SYNC,org/apache/tomcat/util/modeler/Registry.java,,720-720,[        this.server=server;],,,373-373,[            info=server.getMBeanInfo(oname);],,,399-399,[            info=server.getMBeanInfo(oname);],,,436-436,[        if (server == null) {],,,449-449,[        return (server);],,,443-443,[                server = ManagementFactory.getPlatformMBeanServer();],,,438-438,[                server = MBeanServerFactory.findMBeanServer(null).get(0);],,
EXPERIMENTAL,OBL_UNSATISFIED_OBLIGATION,org/apache/tomcat/util/modeler/Registry.java,load,561-561,[            inputsource=new FileInputStream((File)source);],,load,562-562,[            type=param;],,load,563-563,[            if (sourceType == null && location.endsWith(".xml")) {],,load,578-578,[        if( sourceType==null ) {],,load,581-581,[        ModelerSource ds=getModelerSource(sourceType);],,load,582-582,[        List<ObjectName> mbeans =],,load,583-583,[            ds.loadDescriptors(this, type, inputsource);],,load,585-585,[        return mbeans;],,
STYLE,RV_CHECK_FOR_POSITIVE_INDEXOF,org/apache/tomcat/util/modeler/Registry.java,findDescriptor,688-688,[        while( pkg.indexOf( ".") > 0 ) {],,
STYLE,ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD,org/apache/tomcat/util/modeler/modules/MbeansDescriptorsDigesterSource.java,execute,160-160,[            digester = createDigester();],,
STYLE,REC_CATCH_EXCEPTION,org/apache/tomcat/util/modeler/modules/MbeansDescriptorsIntrospectionSource.java,createManagedBean,362-362,[        } catch( Exception ex ) {],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/tomcat/util/net/AbstractEndpoint.java,getSslEnabledProtocolsArray,1013-1013,[        return this.sslEnabledProtocolsarr;],,
STYLE,REC_CATCH_EXCEPTION,org/apache/tomcat/util/net/AbstractEndpoint.java,unlockAccept,661-661,[        } catch(Exception e) {],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/tomcat/util/net/AprEndpoint.java,stopInternal,703-703,[            } catch (Exception e) {],,
STYLE,ICAST_INTEGER_MULTIPLY_CAST_TO_LONG,org/apache/tomcat/util/net/AprEndpoint.java,allocatePoller,810-810,[            return Poll.create(size, pool, 0, timeout * 1000);],,
STYLE,ICAST_INTEGER_MULTIPLY_CAST_TO_LONG,org/apache/tomcat/util/net/AprEndpoint.java,setSocketOptions,775-775,[            Socket.timeoutSet(socket, socketProperties.getSoTimeout() * 1000);],,
CORRECTNESS,NM_VERY_CONFUSING,org/apache/tomcat/util/net/AprEndpoint.java,getSSLProtocol,205-205,[    public String getSSLProtocol() { return SSLProtocol; }],,getSslProtocol,922-922,[    public String getSslProtocol() { return sslProtocol;}],,
CORRECTNESS,NM_VERY_CONFUSING,org/apache/tomcat/util/net/AprEndpoint.java,setSSLProtocol,206-206,[    public void setSSLProtocol(String SSLProtocol) { this.SSLProtocol = SSLProtocol; }],,setSslProtocol,923-923,[    public void setSslProtocol(String s) { sslProtocol = s;}],,
MT_CORRECTNESS,NN_NAKED_NOTIFY,org/apache/tomcat/util/net/AprEndpoint.java,run,1951-1951,[                this.notifyAll();],,
MT_CORRECTNESS,NO_NOTIFY_NOT_NOTIFYALL,org/apache/tomcat/util/net/AprEndpoint.java,add,1477-1477,[                    this.notify();],,
MT_CORRECTNESS,NO_NOTIFY_NOT_NOTIFYALL,org/apache/tomcat/util/net/AprEndpoint.java,close,1521-1521,[                this.notify();],,
MT_CORRECTNESS,NO_NOTIFY_NOT_NOTIFYALL,org/apache/tomcat/util/net/AprEndpoint.java,destroy,1395-1395,[                    this.notify();],,
CORRECTNESS,RpC_REPEATED_CONDITIONAL_TEST,org/apache/tomcat/util/net/AprEndpoint.java,add,1484-1484,[                if (!comet || (comet && !processSocket(],,
CORRECTNESS,RpC_REPEATED_CONDITIONAL_TEST,org/apache/tomcat/util/net/AprEndpoint.java,destroy,1406-1406,[                if (!comet || (comet && !processSocket(],,
CORRECTNESS,RpC_REPEATED_CONDITIONAL_TEST,org/apache/tomcat/util/net/AprEndpoint.java,destroy,1422-1422,[                        if (!comet || (comet && !processSocket(],,
CORRECTNESS,RpC_REPEATED_CONDITIONAL_TEST,org/apache/tomcat/util/net/AprEndpoint.java,maintain,1577-1577,[                if (!comet || (comet && !processSocket(],,
CORRECTNESS,RpC_REPEATED_CONDITIONAL_TEST,org/apache/tomcat/util/net/AprEndpoint.java,run,1712-1712,[                                    if (!comet || (comet && !processSocket(],,
STYLE,UC_USELESS_CONDITION,org/apache/tomcat/util/net/AprEndpoint.java,add,1484-1484,[                if (!comet || (comet && !processSocket(],,
STYLE,UC_USELESS_CONDITION,org/apache/tomcat/util/net/AprEndpoint.java,destroy,1406-1406,[                if (!comet || (comet && !processSocket(],,destroy,1422-1422,[                        if (!comet || (comet && !processSocket(],,
STYLE,UC_USELESS_CONDITION,org/apache/tomcat/util/net/AprEndpoint.java,maintain,1577-1577,[                if (!comet || (comet && !processSocket(],,
STYLE,UC_USELESS_CONDITION,org/apache/tomcat/util/net/AprEndpoint.java,run,1712-1712,[                                    if (!comet || (comet && !processSocket(],,
MT_CORRECTNESS,UW_UNCOND_WAIT,org/apache/tomcat/util/net/AprEndpoint.java,destroy,1396-1396,[                    this.wait(pollTime / 1000);],,
MT_CORRECTNESS,UW_UNCOND_WAIT,org/apache/tomcat/util/net/AprEndpoint.java,run,1636-1636,[                            this.wait(10000);],,
MT_CORRECTNESS,WA_NOT_IN_LOOP,org/apache/tomcat/util/net/AprEndpoint.java,destroy,1396-1396,[                    this.wait(pollTime / 1000);],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/tomcat/util/net/AprEndpoint.java,remove,2122-2122,[            sendfileData.remove(new Long(data.socket));],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/tomcat/util/net/AprEndpoint.java,run,2170-2170,[                                    sendfileData.put(new Long(data.socket), data);],,run,2191-2191,[                            SendfileData state =],,run,2263-2263,[                                SendfileData state = sendfileData.get(new Long(desc[n]));],,
STYLE,ICAST_INTEGER_MULTIPLY_CAST_TO_LONG,org/apache/tomcat/util/net/AprEndpoint.java,add,2094-2094,[                                    data.socket, getSoTimeout() * 1000);],,
STYLE,ICAST_INTEGER_MULTIPLY_CAST_TO_LONG,org/apache/tomcat/util/net/AprEndpoint.java,run,2223-2223,[                                            getSoTimeout() * 1000);],,
MT_CORRECTNESS,NN_NAKED_NOTIFY,org/apache/tomcat/util/net/AprEndpoint.java,run,2279-2279,[                this.notifyAll();],,
MT_CORRECTNESS,NO_NOTIFY_NOT_NOTIFYALL,org/apache/tomcat/util/net/AprEndpoint.java,add,2107-2107,[                this.notify();],,
MT_CORRECTNESS,NO_NOTIFY_NOT_NOTIFYALL,org/apache/tomcat/util/net/AprEndpoint.java,destroy,2032-2032,[                    this.notify();],,
MT_CORRECTNESS,UW_UNCOND_WAIT,org/apache/tomcat/util/net/AprEndpoint.java,run,2150-2150,[                            this.wait();],,
MT_CORRECTNESS,UW_UNCOND_WAIT,org/apache/tomcat/util/net/AprEndpoint.java,destroy,2033-2033,[                    this.wait(pollTime / 1000);],,
MT_CORRECTNESS,WA_NOT_IN_LOOP,org/apache/tomcat/util/net/AprEndpoint.java,destroy,2033-2033,[                    this.wait(pollTime / 1000);],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC,org/apache/tomcat/util/net/AprEndpoint.java,,1161-1229,[        protected SocketInfo info = new SocketInfo();, ,         public SocketList(int size) {,             this.size = 0;,             pos = 0;,             sockets = new long[size];,             timeouts = new int[size];,             flags = new int[size];,         }, ,         public int size() {,             return this.size;,         }, ,         public SocketInfo get() {,             if (pos == size) {,                 return null;,             } else {,                 info.socket = sockets[pos];,                 info.timeout = timeouts[pos];,                 info.flags = flags[pos];,                 pos++;,                 return info;,             },         }, ,         public void clear() {,             size = 0;,             pos = 0;,         }, ,         public boolean add(long socket, int timeout, int flag) {,             if (size == sockets.length) {,                 return false;,             } else {,                 for (int i = 0; i < size; i++) {,                     if (sockets[i] == socket) {,                         flags[i] = SocketInfo.merge(flags[i], flag);,                         return true;,                     },                 },                 sockets[size] = socket;,                 timeouts[size] = timeout;,                 flags[size] = flag;,                 size++;,                 return true;,             },         }, ,         public boolean remove(long socket) {,             for (int i = 0; i < size; i++) {,                 if (sockets[i] == socket) {,                     sockets[i] = sockets[size - 1];,                     timeouts[i] = timeouts[size - 1];,                     flags[size] = flags[size -1];,                     size--;,                     return true;,                 },             },             return false;,         }, ,         public void duplicate(SocketList copy) {,             copy.size = size;,             copy.pos = pos;,             System.arraycopy(sockets, 0, copy.sockets, 0, size);,             System.arraycopy(timeouts, 0, copy.timeouts, 0, size);,             System.arraycopy(flags, 0, copy.flags, 0, size);,         }],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC,org/apache/tomcat/util/net/AprEndpoint.java,,1099-1145,[        protected int pos = 0;, ,         public SocketTimeouts(int size) {,             this.size = 0;,             sockets = new long[size];,             timeouts = new long[size];,         }, ,         public void add(long socket, long timeout) {,             sockets[size] = socket;,             timeouts[size] = timeout;,             size++;,         }, ,         /**,          * Removes the specified socket from the poller.,          *,          * @return The configured timeout for the socket or zero if the socket,          *         was not in the list of socket timeouts,          */,         public long remove(long socket) {,             long result = 0;,             for (int i = 0; i < size; i++) {,                 if (sockets[i] == socket) {,                     result = timeouts[i];,                     sockets[i] = sockets[size - 1];,                     timeouts[i] = timeouts[size - 1];,                     size--;,                     break;,                 },             },             return result;,         }, ,         public long check(long date) {,             while (pos < size) {,                 if (date >= timeouts[pos]) {,                     long result = sockets[pos];,                     sockets[pos] = sockets[size - 1];,                     timeouts[pos] = timeouts[size - 1];,                     size--;,                     return result;,                 },                 pos++;,             },             pos = 0;,             return 0;],,
MT_CORRECTNESS,ML_SYNC_ON_FIELD_TO_GUARD_CHANGING_THAT_FIELD,org/apache/tomcat/util/net/AprEndpoint.java,run,2329-2329,[                        socket = null;],,
MT_CORRECTNESS,ML_SYNC_ON_FIELD_TO_GUARD_CHANGING_THAT_FIELD,org/apache/tomcat/util/net/AprEndpoint.java,run,2345-2345,[                        socket = null;],,
MT_CORRECTNESS,ML_SYNC_ON_FIELD_TO_GUARD_CHANGING_THAT_FIELD,org/apache/tomcat/util/net/AprEndpoint.java,run,2336-2336,[                        socket = null;],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/tomcat/util/net/JIoEndpoint.java,unbind,430-430,[                if (serverSocket != null)],,
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,org/apache/tomcat/util/net/Nio2Channel.java,,38-38,[    protected static ByteBuffer emptyBuf = ByteBuffer.allocate(0);],,
STYLE,BC_UNCONFIRMED_CAST,org/apache/tomcat/util/net/Nio2Endpoint.java,closeSocket,640-640,[            Nio2SocketWrapper nio2Socket = (Nio2SocketWrapper) socket;],,
STYLE,BC_UNCONFIRMED_CAST,org/apache/tomcat/util/net/Nio2Endpoint.java,setSocketOptions,521-521,[                    ((SecureNio2Channel) channel).setSSLEngine(engine);],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/tomcat/util/net/Nio2Endpoint.java,getCiphersUsed,223-223,[        return enabledCiphers;],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/tomcat/util/net/Nio2Endpoint.java,getOomParachuteData,482-482,[        return oomParachuteData;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/tomcat/util/net/Nio2Endpoint.java,setOomParachuteData,188-188,[        this.oomParachuteData = oomParachuteData;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/tomcat/util/net/Nio2Endpoint.java,wrap,324-324,[        if (managers==null) return null;],,
STYLE,REC_CATCH_EXCEPTION,org/apache/tomcat/util/net/Nio2Endpoint.java,closeSocket,647-647,[            } catch (Exception ignore) {],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC,org/apache/tomcat/util/net/Nio2Endpoint.java,,964-986,[        },     };, ,     public SendfileState processSendfile(Nio2SocketWrapper socket) {, ,         // Configure the send file data,         SendfileData data = socket.getSendfileData();,         if (data.fchannel == null || !data.fchannel.isOpen()) {,             java.nio.file.Path path = new File(data.fileName).toPath();,             try {,                 data.fchannel = java.nio.channels.FileChannel,                         .open(path, StandardOpenOption.READ).position(data.pos);,             } catch (IOException e) {,                 return SendfileState.ERROR;,             },         },         ByteBuffer buffer = socket.getSocket().getBufHandler().getWriteBuffer();,         buffer.clear();,         int nRead = -1;,         try {,             nRead = data.fchannel.read(buffer);,         } catch (IOException e1) {,             return SendfileState.ERROR;],,
STYLE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,org/apache/tomcat/util/net/Nio2Endpoint.java,completed,908-908,[                        attachment.fchannel.close();],,completed,930-930,[                        nRead = attachment.fchannel.read(attachment.buffer);],,
STYLE,UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR,org/apache/tomcat/util/net/Nio2Endpoint.java,failed,954-954,[                attachment.fchannel.close();],,
STYLE,BC_UNCONFIRMED_CAST,org/apache/tomcat/util/net/Nio2Endpoint.java,doRun,1106-1106,[                        socketWrapperCache.push(((Nio2SocketWrapper) socket));],,doRun,1095-1095,[                            socketWrapperCache.push((Nio2SocketWrapper) socket);],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/tomcat/util/net/Nio2Endpoint.java,doRun,1082-1082,[                    SocketState state = SocketState.OPEN;],,
STYLE,ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD,org/apache/tomcat/util/net/NioBlockingSelector.java,open,61-61,[        poller.setName("NioBlockingSelector.BlockPoller-"+(++threadCounter));],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC_ANON,org/apache/tomcat/util/net/NioBlockingSelector.java,,223-227,[            Runnable r = new Runnable() {,                 @Override,                 public void run() {,                     key.cancel();,                 }],,
STYLE,NP_LOAD_OF_KNOWN_NULL_VALUE,org/apache/tomcat/util/net/NioBlockingSelector.java,run,269-269,[                        cancel(sk,key,ops);],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/tomcat/util/net/NioBlockingSelector.java,finalize,414-414,[                try {key.cancel();}catch (Exception ignore){}],,
BAD_PRACTICE,FI_FINALIZER_NULLS_FIELDS,org/apache/tomcat/util/net/NioBlockingSelector.java,finalize,416-416,[            key = null;],,
MALICIOUS_CODE,FI_PUBLIC_SHOULD_BE_PROTECTED,org/apache/tomcat/util/net/NioBlockingSelector.java,finalize,412-417,[            if (key!=null && key.isValid()) {,                 log.warn("Possible key leak, cancelling key in the finalizer.");,                 try {key.cancel();}catch (Exception ignore){},             },             key = null;,         }],,
MALICIOUS_CODE,MS_SHOULD_BE_FINAL,org/apache/tomcat/util/net/NioChannel.java,,43-43,[    protected static ByteBuffer emptyBuf = ByteBuffer.allocate(0);],,
STYLE,BC_UNCONFIRMED_CAST,org/apache/tomcat/util/net/NioEndpoint.java,processSocket,612-612,[            processSocket((KeyAttachment) socketWrapper, socketStatus, dispatch);],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/tomcat/util/net/NioEndpoint.java,getCiphersUsed,280-280,[        return enabledCiphers;],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/tomcat/util/net/NioEndpoint.java,getOomParachuteData,515-515,[        return oomParachuteData;],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/tomcat/util/net/NioEndpoint.java,setOomParachuteData,249-249,[        this.oomParachuteData = oomParachuteData;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/tomcat/util/net/NioEndpoint.java,wrap,381-381,[        if (managers==null) return null;],,
CORRECTNESS,RV_RETURN_VALUE_IGNORED,org/apache/tomcat/util/net/NioEndpoint.java,stopInternal,453-453,[                stopLatch.await(selectorTimeout + 100, TimeUnit.MILLISECONDS);],,
CORRECTNESS,RV_RETURN_VALUE_IGNORED,org/apache/tomcat/util/net/NioEndpoint.java,awaitLatch,1424-1424,[            latch.await(timeout,unit);],,
CORRECTNESS,BC_IMPOSSIBLE_CAST,org/apache/tomcat/util/net/NioEndpoint.java,processSendfile,1329-1329,[                            long timeout = (ka.getTimeout()==-1)?((long) socketProperties.getSoTimeout()):(ka.getTimeout());],,
STYLE,BC_UNCONFIRMED_CAST,org/apache/tomcat/util/net/NioEndpoint.java,doClientAuth,1413-1413,[            }],,
CORRECTNESS,RV_RETURN_VALUE_IGNORED,org/apache/tomcat/util/net/NioEndpoint.java,awaitLatch,1153-1153,[                            }],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/tomcat/util/net/NioEndpoint.java,processSendfile,1224-1224,[                    } catch (Exception ignore) {],,
STYLE,REC_CATCH_EXCEPTION,org/apache/tomcat/util/net/NioEndpoint.java,cancelledKey,998-998,[                } catch (Exception ignore) {],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/tomcat/util/net/NioEndpoint.java,run,826-826,[                    }catch (Exception ignore) {}],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/tomcat/util/net/NioEndpoint.java,doRun,1561-1561,[                    SocketState state = SocketState.OPEN;],,
STYLE,DLS_DEAD_LOCAL_STORE_OF_NULL,org/apache/tomcat/util/net/NioEndpoint.java,doRun,1599-1599,[                    ka = null;],,doRun,1580-1580,[                            ka = null;],,
MALICIOUS_CODE,MS_MUTABLE_ARRAY,org/apache/tomcat/util/net/SSLSupport.java,,63-63,[     static final CipherData ciphers[] = {],,
STYLE,REC_CATCH_EXCEPTION,org/apache/tomcat/util/net/SecureNio2Channel.java,write,858-858,[        } catch (Exception e) {],,
STYLE,REC_CATCH_EXCEPTION,org/apache/tomcat/util/net/SecureNio2Channel.java,write,975-975,[        } catch (Exception e) {],,
STYLE,UC_USELESS_CONDITION,org/apache/tomcat/util/net/SecureNio2Channel.java,handshakeInternal,296-296,[        return handshakeComplete ? 0 : handshakeInternal(async);],,
STYLE,REC_CATCH_EXCEPTION,org/apache/tomcat/util/net/SecureNio2Channel.java,completed,924-924,[                    } catch (Exception e) {],,
PERFORMANCE,SIC_INNER_SHOULD_BE_STATIC,org/apache/tomcat/util/net/SecureNio2Channel.java,,874-884,[                CompletionHandler<Long, ? super A> handler) {,             this.srcs = srcs;,             this.offset = offset;,             this.length = length;,             this.timeout = timeout;,             this.unit = unit;,             this.attachment = attachment;,             this.handler = handler;,             this.pos = offset;,         },         public long writeCount = 0;],,
STYLE,REC_CATCH_EXCEPTION,org/apache/tomcat/util/net/SecureNio2Channel.java,completed,766-766,[                } catch (Exception e) {],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/tomcat/util/net/SecureNioChannel.java,rehandshake,271-271,[            if (key!=null) try {key.cancel();} catch (Exception ignore) {}],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/tomcat/util/net/SecureNioChannel.java,rehandshake,271-271,[            if (key!=null) try {key.cancel();} catch (Exception ignore) {}],,
STYLE,UC_USELESS_CONDITION,org/apache/tomcat/util/net/SecureNioChannel.java,handshake,213-213,[        return handshakeComplete?0:(SelectionKey.OP_WRITE|SelectionKey.OP_READ);],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/tomcat/util/net/SocketProperties.java,<init>,147-147,[    protected Integer soTimeout = new Integer(20000);],,
MT_CORRECTNESS,JLM_JSR166_UTILCONCURRENT_MONITORENTER,org/apache/tomcat/util/net/SocketWrapper.java,addDispatch,128-128,[        synchronized (dispatches) {],,
MT_CORRECTNESS,JLM_JSR166_UTILCONCURRENT_MONITORENTER,org/apache/tomcat/util/net/SocketWrapper.java,clearDispatches,150-150,[        synchronized (dispatches) {],,
MT_CORRECTNESS,JLM_JSR166_UTILCONCURRENT_MONITORENTER,org/apache/tomcat/util/net/SocketWrapper.java,getIteratorAndClearDispatches,137-137,[        synchronized (dispatches) {],,
STYLE,RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE,org/apache/tomcat/util/net/URL.java,getPath,133-133,[                if ((context.getPath() != null) &&],,
STYLE,BC_UNCONFIRMED_CAST,org/apache/tomcat/util/net/jsse/JSSEImplementation.java,getSSLSupport,52-52,[        return new JSSESupport((SSLSocket) s);],,
STYLE,BC_UNCONFIRMED_CAST,org/apache/tomcat/util/net/jsse/JSSESocketFactory.java,handshake,215-215,[        SSLSession session = ((SSLSocket)sock).getSession();],,handshake,221-221,[            ((SSLSocket) sock).setEnabledCipherSuites(new String[0]);],,
STYLE,BC_UNCONFIRMED_CAST,org/apache/tomcat/util/net/jsse/JSSESocketFactory.java,initServerSocket,744-744,[        SSLServerSocket socket = (SSLServerSocket) ssocket;],,
STYLE,BC_UNCONFIRMED_CAST_OF_RETURN_VALUE,org/apache/tomcat/util/net/jsse/JSSESocketFactory.java,<clinit>,130-130,[            SSLServerSocket socket = (SSLServerSocket) ssf.createServerSocket();],,
STYLE,BC_UNCONFIRMED_CAST_OF_RETURN_VALUE,org/apache/tomcat/util/net/jsse/JSSESocketFactory.java,acceptSocket,205-205,[             asock = (SSLSocket)socket.accept();],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/tomcat/util/net/jsse/JSSESocketFactory.java,getEnableableCiphers,234-234,[            return DEFAULT_SERVER_CIPHER_SUITES;],,getEnableableCiphers,249-249,[            return DEFAULT_SERVER_CIPHER_SUITES;],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/tomcat/util/net/jsse/JSSESocketFactory.java,getEnableableProtocols,700-700,[            return DEFAULT_SERVER_PROTOCOLS;],,
MALICIOUS_CODE,EI_EXPOSE_REP,org/apache/tomcat/util/net/jsse/JSSESocketFactory.java,getEnabledCiphers,272-272,[        return enabledCiphers;],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/tomcat/util/net/jsse/JSSESupport.java,getPeerCertificateChain,145-145,[        } catch(Exception bex) {],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/tomcat/util/net/jsse/JSSESupport.java,getPeerCertificateChain,139-139,[            return null;],,
STYLE,PZLA_PREFER_ZERO_LENGTH_ARRAYS,org/apache/tomcat/util/net/jsse/JSSESupport.java,getX509Certificates,101-101,[            return null;],,getX509Certificates,103-103,[        if( certs==null ) return null;],,getX509Certificates,123-123,[                    return null;],,getX509Certificates,130-130,[            return null;],,
STYLE,REC_CATCH_EXCEPTION,org/apache/tomcat/util/net/jsse/JSSESupport.java,getX509Certificates,120-120,[                } catch(Exception ex) {],,
BAD_PRACTICE,SE_BAD_FIELD_INNER_CLASS,org/apache/tomcat/util/threads/LimitLatch.java,,38-56,[        public Sync() {,         }, ,         @Override,         protected int tryAcquireShared(int ignored) {,             long newCount = count.incrementAndGet();,             if (!released && newCount > limit) {,                 // Limit exceeded,                 count.decrementAndGet();,                 return -1;,             } else {,                 return 1;,             },         }, ,         @Override,         protected boolean tryReleaseShared(int arg) {,             count.decrementAndGet();,             return true;],,
BAD_PRACTICE,SE_BAD_FIELD,org/apache/tomcat/util/threads/ThreadPoolExecutor.java,,40-209,[    protected static final StringManager sm = StringManager,             .getManager("org.apache.tomcat.util.threads.res");, ,     /**,      * The number of tasks submitted but not yet finished. This includes tasks,      * in the queue and tasks that have been handed to a worker thread but the,      * latter did not start executing the task yet.,      * This number is always greater or equal to {@link #getActiveCount()}.,      */,     private final AtomicInteger submittedCount = new AtomicInteger(0);,     private final AtomicLong lastContextStoppedTime = new AtomicLong(0L);, ,     /**,      * Most recent time in ms when a thread decided to kill itself to avoid,      * potential memory leaks. Useful to throttle the rate of renewals of,      * threads.,      */,     private final AtomicLong lastTimeThreadKilledItself = new AtomicLong(0L);, ,     /**,      * Delay in ms between 2 threads being renewed. If negative, do not renew threads.,      */,     private long threadRenewalDelay = Constants.DEFAULT_THREAD_RENEWAL_DELAY;, ,     public ThreadPoolExecutor(int corePoolSize, int maximumPoolSize, long keepAliveTime, TimeUnit unit, BlockingQueue<Runnable> workQueue, RejectedExecutionHandler handler) {,         super(corePoolSize, maximumPoolSize, keepAliveTime, unit, workQueue, handler);,     }, ,     public ThreadPoolExecutor(int corePoolSize, int maximumPoolSize, long keepAliveTime, TimeUnit unit, BlockingQueue<Runnable> workQueue, ThreadFactory threadFactory,,             RejectedExecutionHandler handler) {,         super(corePoolSize, maximumPoolSize, keepAliveTime, unit, workQueue, threadFactory, handler);,     }, ,     public ThreadPoolExecutor(int corePoolSize, int maximumPoolSize, long keepAliveTime, TimeUnit unit, BlockingQueue<Runnable> workQueue, ThreadFactory threadFactory) {,         super(corePoolSize, maximumPoolSize, keepAliveTime, unit, workQueue, threadFactory, new RejectHandler());,     }, ,     public ThreadPoolExecutor(int corePoolSize, int maximumPoolSize, long keepAliveTime, TimeUnit unit, BlockingQueue<Runnable> workQueue) {,         super(corePoolSize, maximumPoolSize, keepAliveTime, unit, workQueue, new RejectHandler());,     }, ,     public long getThreadRenewalDelay() {,         return threadRenewalDelay;,     }, ,     public void setThreadRenewalDelay(long threadRenewalDelay) {,         this.threadRenewalDelay = threadRenewalDelay;,     }, ,     @Override,     protected void afterExecute(Runnable r, Throwable t) {,         submittedCount.decrementAndGet();, ,         if (t == null) {,             stopCurrentThreadIfNeeded();,         },     }, ,     /**,      * If the current thread was started before the last time when a context was,      * stopped, an exception is thrown so that the current thread is stopped.,      */,     protected void stopCurrentThreadIfNeeded() {,         if (currentThreadShouldBeStopped()) {,             long lastTime = lastTimeThreadKilledItself.longValue();,             if (lastTime + threadRenewalDelay < System.currentTimeMillis()) {,                 if (lastTimeThreadKilledItself.compareAndSet(lastTime,,                         System.currentTimeMillis() + 1)) {,                     // OK, it's really time to dispose of this thread, ,                     final String msg = sm.getString(,                                     "threadPoolExecutor.threadStoppedToAvoidPotentialLeak",,                                     Thread.currentThread().getName());, ,                     throw new StopPooledThreadException(msg);,                 },             },         },     }, ,     protected boolean currentThreadShouldBeStopped() {,         if (threadRenewalDelay >= 0,             && Thread.currentThread() instanceof TaskThread) {,             TaskThread currentTaskThread = (TaskThread) Thread.currentThread();,             if (currentTaskThread.getCreationTime() <,                     this.lastContextStoppedTime.longValue()) {,                 return true;,             },         },         return false;,     }, ,     public int getSubmittedCount() {,         return submittedCount.get();,     }, ,     /**,      * {@inheritDoc},      */,     @Override,     public void execute(Runnable command) {,         execute(command,0,TimeUnit.MILLISECONDS);,     }, ,     /**,      * Executes the given command at some time in the future.  The command,      * may execute in a new thread, in a pooled thread, or in the calling,      * thread, at the discretion of the <tt>Executor</tt> implementation.,      * If no threads are available, it will be added to the work queue.,      * If the work queue is full, the system will wait for the specified,      * time and it throw a RejectedExecutionException if the queue is still,      * full after that.,      *,      * @param command the runnable task,      * @throws RejectedExecutionException if this task cannot be,      * accepted for execution - the queue is full,      * @throws NullPointerException if command or unit is null,      */,     public void execute(Runnable command, long timeout, TimeUnit unit) {,         submittedCount.incrementAndGet();,         try {,             super.execute(command);,         } catch (RejectedExecutionException rx) {,             if (super.getQueue() instanceof TaskQueue) {,                 final TaskQueue queue = (TaskQueue)super.getQueue();,                 try {,                     if (!queue.force(command, timeout, unit)) {,                         submittedCount.decrementAndGet();,                         throw new RejectedExecutionException("Queue capacity is full.");,                     },                 } catch (InterruptedException x) {,                     submittedCount.decrementAndGet();,                     throw new RejectedExecutionException(x);,                 },             } else {,                 submittedCount.decrementAndGet();,                 throw rx;,             }, ,         },     }, ,     public void contextStopping() {,         this.lastContextStoppedTime.set(System.currentTimeMillis());, ,         // save the current pool parameters to restore them later,         int savedCorePoolSize = this.getCorePoolSize();,         TaskQueue taskQueue =,                 getQueue() instanceof TaskQueue ? (TaskQueue) getQueue() : null;,         if (taskQueue != null) {,             // note by slaurent : quite oddly threadPoolExecutor.setCorePoolSize,             // checks that queue.remainingCapacity()==0. I did not understand,             // why, but to get the intended effect of waking up idle threads, I,             // temporarily fake this condition.,             taskQueue.setForcedRemainingCapacity(Integer.valueOf(0));,         }, ,         // setCorePoolSize(0) wakes idle threads,         this.setCorePoolSize(0);, ,         // TaskQueue.take() takes care of timing out, so that we are sure that,         // all threads of the pool are renewed in a limited time, something like,         // (threadKeepAlive + longest request time), ,         if (taskQueue != null) {,             // ok, restore the state of the queue and pool,             taskQueue.setForcedRemainingCapacity(null);,         },         this.setCorePoolSize(savedCorePoolSize);,     }],,
BAD_PRACTICE,NM_SAME_SIMPLE_NAME_AS_SUPERCLASS,org/apache/tomcat/util/threads/ThreadPoolExecutor.java,,40-209,[    protected static final StringManager sm = StringManager,             .getManager("org.apache.tomcat.util.threads.res");, ,     /**,      * The number of tasks submitted but not yet finished. This includes tasks,      * in the queue and tasks that have been handed to a worker thread but the,      * latter did not start executing the task yet.,      * This number is always greater or equal to {@link #getActiveCount()}.,      */,     private final AtomicInteger submittedCount = new AtomicInteger(0);,     private final AtomicLong lastContextStoppedTime = new AtomicLong(0L);, ,     /**,      * Most recent time in ms when a thread decided to kill itself to avoid,      * potential memory leaks. Useful to throttle the rate of renewals of,      * threads.,      */,     private final AtomicLong lastTimeThreadKilledItself = new AtomicLong(0L);, ,     /**,      * Delay in ms between 2 threads being renewed. If negative, do not renew threads.,      */,     private long threadRenewalDelay = Constants.DEFAULT_THREAD_RENEWAL_DELAY;, ,     public ThreadPoolExecutor(int corePoolSize, int maximumPoolSize, long keepAliveTime, TimeUnit unit, BlockingQueue<Runnable> workQueue, RejectedExecutionHandler handler) {,         super(corePoolSize, maximumPoolSize, keepAliveTime, unit, workQueue, handler);,     }, ,     public ThreadPoolExecutor(int corePoolSize, int maximumPoolSize, long keepAliveTime, TimeUnit unit, BlockingQueue<Runnable> workQueue, ThreadFactory threadFactory,,             RejectedExecutionHandler handler) {,         super(corePoolSize, maximumPoolSize, keepAliveTime, unit, workQueue, threadFactory, handler);,     }, ,     public ThreadPoolExecutor(int corePoolSize, int maximumPoolSize, long keepAliveTime, TimeUnit unit, BlockingQueue<Runnable> workQueue, ThreadFactory threadFactory) {,         super(corePoolSize, maximumPoolSize, keepAliveTime, unit, workQueue, threadFactory, new RejectHandler());,     }, ,     public ThreadPoolExecutor(int corePoolSize, int maximumPoolSize, long keepAliveTime, TimeUnit unit, BlockingQueue<Runnable> workQueue) {,         super(corePoolSize, maximumPoolSize, keepAliveTime, unit, workQueue, new RejectHandler());,     }, ,     public long getThreadRenewalDelay() {,         return threadRenewalDelay;,     }, ,     public void setThreadRenewalDelay(long threadRenewalDelay) {,         this.threadRenewalDelay = threadRenewalDelay;,     }, ,     @Override,     protected void afterExecute(Runnable r, Throwable t) {,         submittedCount.decrementAndGet();, ,         if (t == null) {,             stopCurrentThreadIfNeeded();,         },     }, ,     /**,      * If the current thread was started before the last time when a context was,      * stopped, an exception is thrown so that the current thread is stopped.,      */,     protected void stopCurrentThreadIfNeeded() {,         if (currentThreadShouldBeStopped()) {,             long lastTime = lastTimeThreadKilledItself.longValue();,             if (lastTime + threadRenewalDelay < System.currentTimeMillis()) {,                 if (lastTimeThreadKilledItself.compareAndSet(lastTime,,                         System.currentTimeMillis() + 1)) {,                     // OK, it's really time to dispose of this thread, ,                     final String msg = sm.getString(,                                     "threadPoolExecutor.threadStoppedToAvoidPotentialLeak",,                                     Thread.currentThread().getName());, ,                     throw new StopPooledThreadException(msg);,                 },             },         },     }, ,     protected boolean currentThreadShouldBeStopped() {,         if (threadRenewalDelay >= 0,             && Thread.currentThread() instanceof TaskThread) {,             TaskThread currentTaskThread = (TaskThread) Thread.currentThread();,             if (currentTaskThread.getCreationTime() <,                     this.lastContextStoppedTime.longValue()) {,                 return true;,             },         },         return false;,     }, ,     public int getSubmittedCount() {,         return submittedCount.get();,     }, ,     /**,      * {@inheritDoc},      */,     @Override,     public void execute(Runnable command) {,         execute(command,0,TimeUnit.MILLISECONDS);,     }, ,     /**,      * Executes the given command at some time in the future.  The command,      * may execute in a new thread, in a pooled thread, or in the calling,      * thread, at the discretion of the <tt>Executor</tt> implementation.,      * If no threads are available, it will be added to the work queue.,      * If the work queue is full, the system will wait for the specified,      * time and it throw a RejectedExecutionException if the queue is still,      * full after that.,      *,      * @param command the runnable task,      * @throws RejectedExecutionException if this task cannot be,      * accepted for execution - the queue is full,      * @throws NullPointerException if command or unit is null,      */,     public void execute(Runnable command, long timeout, TimeUnit unit) {,         submittedCount.incrementAndGet();,         try {,             super.execute(command);,         } catch (RejectedExecutionException rx) {,             if (super.getQueue() instanceof TaskQueue) {,                 final TaskQueue queue = (TaskQueue)super.getQueue();,                 try {,                     if (!queue.force(command, timeout, unit)) {,                         submittedCount.decrementAndGet();,                         throw new RejectedExecutionException("Queue capacity is full.");,                     },                 } catch (InterruptedException x) {,                     submittedCount.decrementAndGet();,                     throw new RejectedExecutionException(x);,                 },             } else {,                 submittedCount.decrementAndGet();,                 throw rx;,             }, ,         },     }, ,     public void contextStopping() {,         this.lastContextStoppedTime.set(System.currentTimeMillis());, ,         // save the current pool parameters to restore them later,         int savedCorePoolSize = this.getCorePoolSize();,         TaskQueue taskQueue =,                 getQueue() instanceof TaskQueue ? (TaskQueue) getQueue() : null;,         if (taskQueue != null) {,             // note by slaurent : quite oddly threadPoolExecutor.setCorePoolSize,             // checks that queue.remainingCapacity()==0. I did not understand,             // why, but to get the intended effect of waking up idle threads, I,             // temporarily fake this condition.,             taskQueue.setForcedRemainingCapacity(Integer.valueOf(0));,         }, ,         // setCorePoolSize(0) wakes idle threads,         this.setCorePoolSize(0);, ,         // TaskQueue.take() takes care of timing out, so that we are sure that,         // all threads of the pool are renewed in a limited time, something like,         // (threadKeepAlive + longest request time), ,         if (taskQueue != null) {,             // ok, restore the state of the queue and pool,             taskQueue.setForcedRemainingCapacity(null);,         },         this.setCorePoolSize(savedCorePoolSize);,     }],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/tomcat/websocket/AsyncChannelWrapperSecure.java,get,544-544,[            return new Integer(result.intValue());],,
PERFORMANCE,DM_NUMBER_CTOR,org/apache/tomcat/websocket/AsyncChannelWrapperSecure.java,get,556-556,[            return new Integer(result.intValue());],,
STYLE,REC_CATCH_EXCEPTION,org/apache/tomcat/websocket/AsyncChannelWrapperSecure.java,run,337-337,[            } catch (Exception e) {],,
STYLE,REC_CATCH_EXCEPTION,org/apache/tomcat/websocket/AsyncChannelWrapperSecure.java,run,238-238,[            } catch (Exception e) {],,
BAD_PRACTICE,BIT_SIGNED_CHECK,org/apache/tomcat/websocket/PerMessageDeflate.java,validateRsv,228-228,[            if ((rsv & RSV_BITMASK) > 0) {],,
BAD_PRACTICE,BIT_SIGNED_CHECK,org/apache/tomcat/websocket/PerMessageDeflate.java,validateRsv,239-239,[            if ((rsv & RSV_BITMASK) > 0) {],,
BAD_PRACTICE,BIT_SIGNED_CHECK,org/apache/tomcat/websocket/PerMessageDeflate.java,validateRsvBits,288-288,[        if ((i & RSV_BITMASK) > 0) {],,
BAD_PRACTICE,BIT_SIGNED_CHECK,org/apache/tomcat/websocket/Util.java,isControl,72-72,[        return (opCode & 0x08) > 0;],,
STYLE,DLS_DEAD_LOCAL_STORE,org/apache/tomcat/websocket/Util.java,getDecoders,341-341,[                instance = decoderClazz.newInstance();],,
BAD_PRACTICE,BIT_SIGNED_CHECK,org/apache/tomcat/websocket/WsFrameBase.java,processInitialHeader,148-148,[        fin = (b & 0x80) > 0;],,
STYLE,NS_DANGEROUS_NON_SHORT_CIRCUIT,org/apache/tomcat/websocket/WsFrameBase.java,processDataText,472-472,[            } else if (cr.isUnderflow() & !last) {],,
CORRECTNESS,RpC_REPEATED_CONDITIONAL_TEST,org/apache/tomcat/websocket/WsSession.java,removeMessageHandler,291-291,[        if (listener.equals(binaryMessageHandler) ||],,removeMessageHandler,291-292,[        if (listener.equals(binaryMessageHandler) ||,                 listener.equals(binaryMessageHandler)) {],,
CORRECTNESS,RpC_REPEATED_CONDITIONAL_TEST,org/apache/tomcat/websocket/WsSession.java,removeMessageHandler,297-297,[        if (listener.equals(pongMessageHandler) ||],,removeMessageHandler,297-298,[        if (listener.equals(pongMessageHandler) ||,                 listener.equals(pongMessageHandler)) {],,
I18N,DM_CONVERT_CASE,org/apache/tomcat/websocket/WsWebSocketContainer.java,parseHeaders,598-598,[        String headerName = line.substring(0, index).trim().toLowerCase();],,
STYLE,REC_CATCH_EXCEPTION,org/apache/tomcat/websocket/WsWebSocketContainer.java,createSSLEngine,676-676,[        } catch (Exception e) {],,
STYLE,UC_USELESS_OBJECT,org/apache/tomcat/websocket/WsWebSocketContainer.java,generateExtensionHeaders,455-455,[            StringBuilder header = new StringBuilder();],,
STYLE,BC_UNCONFIRMED_CAST,org/apache/tomcat/websocket/pojo/PojoEndpointServer.java,onOpen,46-46,[        ServerEndpointConfig sec = (ServerEndpointConfig) endpointConfig;],,
BAD_PRACTICE,DE_MIGHT_IGNORE,org/apache/tomcat/websocket/pojo/PojoMessageHandlerBase.java,<init>,57-57,[        } catch (Exception e) {],,
MALICIOUS_CODE,DP_DO_INSIDE_DO_PRIVILEGED,org/apache/tomcat/websocket/pojo/PojoMessageHandlerBase.java,<init>,56-56,[            this.method.setAccessible(true);],,
MALICIOUS_CODE,EI_EXPOSE_REP2,org/apache/tomcat/websocket/pojo/PojoMessageHandlerBase.java,<init>,62-62,[        this.params = params;],,
STYLE,BC_UNCONFIRMED_CAST,org/apache/tomcat/websocket/server/WsFilter.java,doFilter,57-57,[        HttpServletRequest req = (HttpServletRequest) request;],,
STYLE,BC_UNCONFIRMED_CAST,org/apache/tomcat/websocket/server/WsFilter.java,doFilter,58-58,[        HttpServletResponse resp = (HttpServletResponse) response;],,
CORRECTNESS,UWF_UNWRITTEN_FIELD,org/apache/tomcat/websocket/server/WsRemoteEndpointImplServer.java,,108-108,[                    if (close) {],,
BAD_PRACTICE,SE_COMPARATOR_SHOULD_BE_SERIALIZABLE,org/apache/tomcat/websocket/server/WsServerContainer.java,,539-556,[    private static class TemplatePathMatchComparator,             implements Comparator<TemplatePathMatch> {, ,         private static final TemplatePathMatchComparator INSTANCE =,                 new TemplatePathMatchComparator();, ,         public static TemplatePathMatchComparator getInstance() {,             return INSTANCE;,         }, ,         private TemplatePathMatchComparator() {,             // Hide default constructor,         }, ,         @Override,         public int compare(TemplatePathMatch tpm1, TemplatePathMatch tpm2) {,             return tpm1.getUriTemplate().getNormalizedPath().compareTo(,                     tpm2.getUriTemplate().getNormalizedPath());],,
BAD_PRACTICE,SE_COMPARATOR_SHOULD_BE_SERIALIZABLE,org/apache/tomcat/websocket/server/WsWriteTimeout.java,,112-127,[    private static class EndpointComparator implements,             Comparator<WsRemoteEndpointImplServer> {, ,         @Override,         public int compare(WsRemoteEndpointImplServer o1,,                 WsRemoteEndpointImplServer o2) {, ,             long t1 = o1.getTimeoutExpiry();,             long t2 = o2.getTimeoutExpiry();, ,             if (t1 < t2) {,                 return -1;,             } else if (t1 == t2) {,                 return 0;,             } else {,                 return 1;],,
